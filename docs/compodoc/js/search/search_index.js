var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AbstractLoggerService.html",[0,0.092,1,1.251]],["body/classes/AbstractLoggerService.html",[0,0.085,1,1.418,2,0.637,3,0.605,4,0.28,5,0.228,6,0.523,7,0.393,8,0.637,9,0.28,10,0.623,11,1.899,12,1.579,13,1.418,14,1.659,15,0.853,16,1.659,17,1.659,18,0.898,19,1.923,20,1.659,21,1.923,22,1.595,23,2.084,24,0.548,25,1.595,26,1.648,27,1.567,28,2.421,29,1.256,30,0.06,31,1.256,32,0.947,33,1.07,34,1.959,35,1.418,36,1.555,37,1.595,38,1.448,39,2.317,40,3.161,41,1.555,42,2.254,43,1.417,44,1.592,45,1.595,46,1.555,47,1.595,48,1.555,49,1.595,50,1.567,51,1.601,52,1.555,53,1.595,54,1.555,55,1.155,56,1.595,57,1.555,58,1.595,59,1.555,60,1.555,61,1.555,62,0.645,63,0.853,64,0.637,65,0.436,66,0.853,67,1.024,68,0.728,69,1.024,70,0.742,71,0.742,72,0.742,73,0.867,74,0.867,75,0.867,76,0.469,77,1.155,78,0.637,79,1.024,80,1.024,81,1.155,82,0.742,83,1.155,84,0.742,85,1.595,86,1.219,87,1.024,88,1.155,89,1.024,90,1.024,91,0.637,92,0.4,93,0.4,94,1.024,95,1.024,96,1.024,97,1.024,98,1.024,99,1.024,100,1.024,101,0.867,102,0.867,103,0.742,104,1.024,105,0.018,106,0.027,107,0.018]],["title/classes/ConsoleLogPublisher.html",[0,0.092,108,1.728]],["body/classes/ConsoleLogPublisher.html",[0,0.091,2,1.07,3,0.471,4,0.471,5,0.383,6,0.497,7,0.374,9,0.471,10,0.909,11,1.449,15,1.245,18,1.296,24,1.412,27,1.629,29,1.067,30,0.059,31,1.067,32,0.869,33,0.909,38,0.788,43,1.513,44,1.629,50,0.92,62,0.869,65,0.852,68,0.566,77,1.686,78,1.76,92,0.909,105,0.03,106,0.04,107,0.03,108,2.329,109,2.074,110,1.938,111,2.329,112,3.116,113,2.611,114,2.64,115,2.074,116,2.611,117,2.64,118,2.611,119,2.074,120,2.074,121,1.721,122,2.074,123,2.611,124,2.611,125,2.611,126,4.293,127,2.611,128,2.611,129,4.293,130,2.611,131,2.611,132,2.611,133,2.611,134,2.611,135,2.611,136,1.721,137,2.611]],["title/classes/LocalStorageLogPublisher.html",[0,0.092,138,1.728]],["body/classes/LocalStorageLogPublisher.html",[0,0.081,2,0.948,3,0.417,4,0.417,5,0.339,6,0.472,7,0.374,9,0.417,10,0.836,11,1.332,15,1.145,18,1.41,24,0.815,27,1.569,29,1.135,30,0.06,31,1.135,32,0.884,33,0.967,38,1.297,43,1.436,44,1.569,62,0.705,65,0.856,68,0.502,77,1.551,78,1.671,91,1.332,92,0.967,105,0.026,106,0.037,107,0.026,110,1.876,111,2.142,112,3.015,114,2.477,115,1.838,117,2.477,119,1.838,120,1.838,122,1.838,138,2.142,139,1.838,140,3.251,141,2.313,142,3.759,143,1.838,144,2.313,145,2.313,146,3.251,147,2.313,148,3.251,149,2.313,150,2.313,151,2.313,152,3.251,153,3.251,154,3.251,155,3.251,156,3.251,157,3.251,158,2.313,159,2.313,160,2.313,161,2.313,162,2.313,163,2.313]],["title/classes/LogEntry.html",[0,0.092,65,0.473]],["body/classes/LogEntry.html",[0,0.129,2,0.659,3,0.29,4,0.29,5,0.236,6,0.51,7,0.384,9,0.29,10,0.639,12,1.932,13,2.006,15,0.875,18,1.423,22,1.637,23,2.103,24,0.566,27,1.521,29,1.229,30,0.06,31,0.485,32,0.847,33,0.639,38,1.376,39,2.059,42,2.103,43,0.875,50,1.376,51,1.63,55,1.449,62,0.349,65,0.448,66,1.434,68,0.539,76,0.485,81,0.767,82,1.186,83,1.449,84,1.863,86,1.601,88,0.767,91,0.659,92,1.154,93,0.413,105,0.018,106,0.028,107,0.018,121,1.06,136,1.06,143,1.974,164,0.897,165,3.106,166,3.102,167,2.001,168,2.714,169,2.413,170,1.974,171,3.102,172,2.485,173,1.277,174,2.714,175,2.714,176,2.714,177,3.102,178,1.608,179,1.608,180,1.608,181,1.608,182,1.608,183,1.974,184,1.974,185,1.974,186,1.608,187,1.974,188,1.974,189,1.974,190,1.974,191,1.608,192,1.608,193,1.974,194,1.277,195,1.277,196,1.06,197,1.974,198,1.277,199,1.974,200,1.974,201,1.974,202,1.277,203,1.974,204,1.277,205,3.102,206,1.277,207,1.277,208,1.277,209,1.277]],["title/interfaces/LogEntryConfiguration.html",[66,0.924,76,0.792]],["body/interfaces/LogEntryConfiguration.html",[0,0.121,3,0.358,4,0.358,5,0.292,6,0.23,7,0.173,9,0.358,10,0.75,12,1.66,13,1.815,18,1.382,23,1.932,29,1.043,30,0.061,32,0.749,33,1.154,38,1.278,39,1.932,42,1.932,50,1.217,51,1.815,55,2.184,62,0.431,65,0.358,66,1.427,68,0.632,76,0.6,81,0.949,82,1.932,83,1.648,84,2.019,86,1.735,88,0.949,91,0.815,92,1.125,93,0.511,105,0.023,106,0.033,107,0.023,121,1.31,136,1.922,164,1.109,165,2.669,166,2.743,167,1.31,168,1.58,169,1.58,170,1.58,171,3.021,173,1.58,174,2.317,175,2.317,176,2.317,177,3.362,183,1.58,184,1.58,185,1.58,187,1.58,188,1.58,189,1.58,190,1.58,193,3.021,194,2.317,195,2.317,196,1.922,197,3.217,198,1.58,199,2.317,200,2.317,201,2.317,202,1.58,203,2.317,204,1.58,205,3.362,206,1.58,207,1.58,208,1.58,209,1.58,210,1.31]],["title/classes/LogPublisher.html",[0,0.092,110,1.075]],["body/classes/LogPublisher.html",[0,0.105,2,1.225,3,0.539,4,0.539,5,0.439,6,0.543,7,0.408,9,0.539,10,0.994,11,1.922,15,1.362,18,1.167,24,1.509,27,1.595,29,0.902,30,0.059,31,0.902,32,0.838,33,0.769,38,1.167,43,1.362,44,1.595,62,0.648,65,0.845,68,0.648,78,2.004,92,0.769,105,0.034,106,0.044,107,0.034,110,1.584,111,2.823,112,2.984,117,2.547,211,2.374,212,3.865,213,2.989,214,2.989,215,2.374,216,2.989,217,2.989,218,2.989]],["title/injectables/LogPublisherService.html",[26,1.075,63,0.924]],["body/injectables/LogPublisherService.html",[0,0.081,3,0.419,4,0.419,5,0.341,6,0.541,7,0.407,9,0.419,10,0.839,12,1.829,14,1.819,15,1.149,22,2.149,24,1.327,26,1.544,27,1.614,29,0.985,30,0.06,31,0.985,32,0.886,33,0.839,43,1.327,44,1.439,62,0.886,63,1.149,64,0.952,65,0.776,68,0.504,86,1.675,92,0.839,93,0.598,101,1.296,102,1.296,105,0.026,106,0.037,107,0.026,110,1.878,165,1.531,167,2.94,215,1.846,219,1.531,220,3.082,221,1.531,222,3.768,223,3.768,224,4.085,225,3.261,226,3.261,227,3.768,228,3.261,229,2.324,230,3.261,231,2.324,232,3.261,233,2.324,234,3.768,235,3.768,236,2.324,237,2.324,238,2.324,239,2.324,240,1.846,241,2.324,242,2.324,243,3.261,244,2.324,245,3.261,246,2.324,247,2.324,248,2.324,249,2.324,250,2.324,251,2.324]],["title/interfaces/LoggerConfiguration.html",[35,1.251,76,0.792]],["body/interfaces/LoggerConfiguration.html",[0,0.111,1,1.515,3,0.573,4,0.404,5,0.328,6,0.259,7,0.195,8,0.917,9,0.404,10,0.817,11,1.739,12,1.302,13,1.068,14,1.249,16,1.249,17,1.249,18,0.676,20,1.249,23,2.21,25,1.475,26,1.647,30,0.06,32,0.485,33,0.817,34,2.093,35,1.761,37,1.475,38,1.331,39,2.279,40,2.904,42,2.21,44,1.553,45,1.475,47,1.475,49,1.475,50,1.597,51,1.515,53,1.475,55,1.068,56,1.475,58,1.475,62,0.801,63,1.119,64,0.917,65,0.573,66,1.301,67,1.475,68,0.871,69,1.475,70,1.068,71,1.068,72,1.068,73,1.249,74,1.249,75,1.249,76,0.676,77,1.761,78,0.917,79,1.475,80,1.475,81,1.515,82,1.068,83,1.515,84,1.068,85,2.093,86,1.513,87,1.475,88,1.515,89,1.475,90,1.475,91,0.917,92,0.576,93,0.576,94,1.475,95,1.475,96,1.475,97,1.475,98,1.475,99,1.475,100,1.475,101,1.249,102,1.249,103,1.068,104,1.475,105,0.025,106,0.036,107,0.025,210,1.475]],["title/injectables/LoggerService.html",[63,0.924,103,1.251]],["body/injectables/LoggerService.html",[0,0.086,1,2.162,3,0.609,4,0.284,5,0.231,6,0.283,7,0.213,8,0.645,9,0.284,10,0.628,11,1.883,12,1.587,13,1.429,14,1.671,15,0.861,16,1.671,17,1.671,18,0.905,19,1.941,20,1.671,21,1.941,23,1.992,24,0.554,25,1.61,26,1.656,27,1.544,29,1.261,30,0.06,31,1.261,32,0.951,33,1.074,34,1.974,35,1.429,37,1.61,38,1.451,39,2.321,40,3.167,42,2.259,43,1.423,44,1.597,45,1.61,47,1.61,49,1.61,50,1.572,51,1.612,53,1.61,55,1.166,56,1.61,58,1.61,62,0.65,63,0.861,64,0.645,65,0.441,66,0.861,67,1.037,68,0.733,69,1.037,70,0.751,71,0.751,72,0.751,73,0.878,74,0.878,75,0.878,76,0.475,77,1.429,78,0.645,79,1.037,80,1.037,81,1.166,82,0.751,83,1.166,84,0.751,85,1.61,86,1.228,87,1.037,88,1.166,89,1.037,90,1.037,91,0.645,92,0.405,93,0.405,94,1.037,95,1.037,96,1.037,97,1.037,98,1.037,99,1.037,100,1.037,101,0.878,102,0.878,103,1.166,104,1.037,105,0.018,106,0.028,107,0.018,114,2.826,219,1.037,252,1.573,253,1.573,254,1.573,255,1.573,256,1.573,257,1.573,258,1.573,259,1.573,260,1.573,261,1.573]],["title/modules/MaterialModule.html",[262,2.083,263,1.728]],["body/modules/MaterialModule.html",[0,0.094,3,0.484,4,0.484,5,0.394,6,0.311,7,0.234,30,0.057,62,1.075,64,1.101,68,0.583,105,0.03,106,0.041,107,0.03,263,2.374,264,1.77,265,2.686,266,3.602,267,3.602,268,2.134,269,3.602,270,3.602,271,3.602,272,3.602,273,3.602,274,3.602,275,3.602,276,3.602,277,3.602,278,3.602,279,3.602,280,3.602,281,3.602,282,3.602,283,3.602,284,3.602,285,3.602,286,3.602,287,3.602,288,3.602,289,3.602,290,3.602,291,3.602,292,3.602,293,3.602,294,3.602,295,3.602,296,3.602,297,3.602,298,3.602,299,3.602,300,3.602,301,3.602,302,3.602,303,3.602,304,2.134,305,3.602,306,2.686,307,2.686,308,3.602,309,2.686,310,3.602,311,2.686,312,3.602,313,2.686,314,3.602,315,2.686,316,3.602,317,2.686,318,3.602,319,2.686,320,2.134,321,2.686,322,2.134]],["title/coverage.html",[323,2.336]],["body/coverage.html",[0,0.166,1,1.477,5,0.454,6,0.583,7,0.438,8,1.785,26,1.269,30,0.058,32,0.672,35,1.477,63,1.393,65,0.558,66,1.091,70,2.351,76,1.194,93,0.796,103,1.477,105,0.035,106,0.045,107,0.035,108,2.041,109,2.46,110,1.269,138,2.041,139,2.46,164,2.206,211,2.46,220,2.041,221,2.041,323,2.041,324,3.096,325,3.096,326,2.46,327,2.46,328,3.096,329,2.46,330,2.46,331,4.355,332,3.953,333,3.096,334,3.096,335,2.46,336,2.46]],["title/dependencies.html",[337,2.207,338,2.072]],["body/dependencies.html",[30,0.06,64,1.385,105,0.038,106,0.047,107,0.038,240,2.685,268,2.685,304,2.685,338,2.227,339,3.38,340,4.032,341,5.075,342,3.38,343,4.177,344,3.38,345,3.38,346,4.177,347,4.177,348,3.38,349,3.38,350,3.38,351,3.38,352,3.38,353,3.38,354,3.38,355,3.38,356,3.38]],["title/miscellaneous/enumerations.html",[357,1.753,358,2.498]],["body/miscellaneous/enumerations.html",[3,0.659,6,0.423,7,0.318,8,1.498,9,0.659,16,2.039,17,2.039,20,2.039,30,0.058,50,1.543,70,1.744,71,1.744,72,1.744,73,2.039,74,2.039,75,2.039,105,0.041,106,0.05,107,0.041,196,3.328,357,2.904,358,2.904,359,3.655]],["title/index.html",[9,0.398,360,2.207,361,2.207]],["body/index.html",[4,0.537,7,0.259,30,0.044,31,0.9,93,0.766,105,0.034,106,0.044,107,0.034,340,2.368,362,2.98,363,2.98,364,3.858,365,2.98,366,4.277,367,4.277,368,2.98,369,2.98,370,2.98,371,3.858,372,4.685,373,4.885,374,2.98,375,2.98,376,2.98,377,2.98,378,2.98,379,2.98,380,2.98,381,2.98,382,2.98,383,2.98,384,2.98,385,4.277,386,4.277,387,4.277,388,2.98,389,4.685,390,2.98,391,2.98,392,2.98,393,2.98,394,2.98,395,2.98,396,2.98,397,3.858,398,2.542,399,4.523,400,1.964,401,3.858,402,3.858,403,2.98,404,4.523,405,2.98,406,2.98,407,2.98,408,4.277,409,2.98,410,2.98,411,2.98,412,2.368,413,2.98]],["title/modules.html",[264,2.336]],["body/modules.html",[30,0.053,105,0.046,106,0.053,107,0.046,263,2.653,264,2.653,414,4.025,415,4.025,416,4.025]],["title/overview.html",[417,2.816]],["body/overview.html",[2,1.559,30,0.051,71,1.814,72,2.14,105,0.043,106,0.051,107,0.043,210,2.506,219,2.506,262,3.563,320,3.021,322,3.021,338,2.506,412,3.021,417,3.021,418,3.803,419,3.803,420,3.803,421,4.485,422,3.803,423,3.803]],["title/unit-test.html",[398,1.862,400,1.862]],["body/unit-test.html",[5,0.491,6,0.523,7,0.393,8,1.372,30,0.059,93,0.861,105,0.038,106,0.047,107,0.038,164,1.867,220,2.206,221,2.206,323,2.206,326,2.659,327,2.659,329,2.659,330,2.659,335,2.659,336,2.659,398,2.206,400,2.206,424,3.347,425,3.347,426,3.347,427,4.152,428,4.152,429,3.347,430,3.347,431,4.152,432,3.347,433,3.347,434,3.347,435,3.347,436,3.347,437,3.347,438,4.152,439,3.347,440,3.347,441,3.347,442,3.347,443,3.347]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{}}}],["0",{"_index":70,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.10.2",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["0/11",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":71,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)[0",{"_index":159,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["1.10.0",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":330,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["100",{"_index":431,"title":{},"body":{"unit-test.html":{}}}],["11/11",{"_index":442,"title":{},"body":{"unit-test.html":{}}}],["18/19",{"_index":428,"title":{},"body":{"unit-test.html":{}}}],["2",{"_index":72,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["2.0.8",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":435,"title":{},"body":{"unit-test.html":{}}}],["22/23",{"_index":443,"title":{},"body":{"unit-test.html":{}}}],["23/24",{"_index":439,"title":{},"body":{"unit-test.html":{}}}],["25",{"_index":329,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["3",{"_index":73,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["3/9",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":327,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["4",{"_index":74,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["4/4",{"_index":432,"title":{},"body":{"unit-test.html":{}}}],["46",{"_index":436,"title":{},"body":{"unit-test.html":{}}}],["47",{"_index":433,"title":{},"body":{"unit-test.html":{}}}],["5",{"_index":423,"title":{},"body":{"overview.html":{}}}],["5/7",{"_index":441,"title":{},"body":{"unit-test.html":{}}}],["6",{"_index":75,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["6.5.4",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":430,"title":{},"body":{"unit-test.html":{}}}],["6/13",{"_index":437,"title":{},"body":{"unit-test.html":{}}}],["60",{"_index":429,"title":{},"body":{"unit-test.html":{}}}],["7/15",{"_index":434,"title":{},"body":{"unit-test.html":{}}}],["71",{"_index":440,"title":{},"body":{"unit-test.html":{}}}],["8.2.3",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":340,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["95",{"_index":427,"title":{},"body":{"unit-test.html":{}}}],["96",{"_index":438,"title":{},"body":{"unit-test.html":{}}}],["_log",{"_index":222,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["_publishers",{"_index":223,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["a11ymodule",{"_index":308,"title":{},"body":{"modules/MaterialModule.html":{}}}],["abstract",{"_index":78,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["abstractloggerservice",{"_index":1,"title":{"classes/AbstractLoggerService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["abstractloggerservice:20",{"_index":260,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:21",{"_index":261,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:36",{"_index":257,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:40",{"_index":259,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:48",{"_index":255,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:52",{"_index":253,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:56",{"_index":258,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:60",{"_index":254,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:64",{"_index":256,"title":{},"body":{"injectables/LoggerService.html":{}}}],["accessors",{"_index":22,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"injectables/LogPublisherService.html":{}}}],["according",{"_index":188,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["additional",{"_index":175,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["angular",{"_index":366,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":309,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/drag",{"_index":306,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/portal",{"_index":317,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/scrolling",{"_index":319,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/stepper",{"_index":311,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/table",{"_index":313,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/tree",{"_index":315,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/common",{"_index":268,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":64,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":304,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":378,"title":{},"body":{"index.html":{}}}],["application",{"_index":7,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"unit-test.html":{}}}],["array",{"_index":40,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["artifacts",{"_index":390,"title":{},"body":{"index.html":{}}}],["attributes",{"_index":193,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["automatically",{"_index":379,"title":{},"body":{"index.html":{}}}],["available",{"_index":415,"title":{},"body":{"modules.html":{}}}],["behaviorsubject",{"_index":235,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["behaviorsubject(null",{"_index":244,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["boolean",{"_index":55,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["bootstrap",{"_index":419,"title":{},"body":{"overview.html":{}}}],["branches",{"_index":424,"title":{},"body":{"unit-test.html":{}}}],["break",{"_index":129,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["browse",{"_index":416,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":389,"title":{},"body":{"index.html":{}}}],["case",{"_index":126,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["catch",{"_index":155,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["cdksteppermodule",{"_index":310,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktablemodule",{"_index":312,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktreemodule",{"_index":314,"title":{},"body":{"modules/MaterialModule.html":{}}}],["change",{"_index":381,"title":{},"body":{"index.html":{}}}],["check",{"_index":411,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"overview.html":{}}}],["clear",{"_index":112,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["clearall",{"_index":224,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["cli",{"_index":367,"title":{},"body":{"index.html":{}}}],["code",{"_index":383,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":267,"title":{},"body":{"modules/MaterialModule.html":{}}}],["component",{"_index":386,"title":{},"body":{"index.html":{}}}],["config",{"_index":13,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["configuration",{"_index":177,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["console.clear",{"_index":123,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.debug('log",{"_index":160,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["console.debug(entry.tostring",{"_index":128,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.error(e",{"_index":163,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["console.error(entry.tostring",{"_index":131,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.info(entry.tostring",{"_index":133,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.log(entry.tostring",{"_index":137,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.log(this._log.getvalue().tostring",{"_index":249,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["console.warn(entry.tostring",{"_index":135,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["consolelogpublisher",{"_index":108,"title":{"classes/ConsoleLogPublisher.html":{}},"body":{"classes/ConsoleLogPublisher.html":{},"coverage.html":{}}}],["const",{"_index":91,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{}}}],["constructor(level",{"_index":170,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["constructor(logkey",{"_index":140,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["constructor(private",{"_index":79,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["constructor(publisherservice",{"_index":25,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["coverage",{"_index":323,"title":{"coverage.html":{}},"body":{"coverage.html":{},"unit-test.html":{}}}],["date",{"_index":166,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["debug",{"_index":16,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":37,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["declarations",{"_index":320,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["default",{"_index":136,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["defaults",{"_index":201,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["defined",{"_index":27,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{}}}],["deleted",{"_index":157,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["deleted.date.toisostring",{"_index":161,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["dependencies",{"_index":338,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":173,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["dev",{"_index":375,"title":{},"body":{"index.html":{}}}],["development",{"_index":370,"title":{},"body":{"index.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":388,"title":{},"body":{"index.html":{}}}],["directory",{"_index":393,"title":{},"body":{"index.html":{}}}],["dist",{"_index":392,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["dragdropmodule",{"_index":305,"title":{},"body":{"modules/MaterialModule.html":{}}}],["drop",{"_index":307,"title":{},"body":{"modules/MaterialModule.html":{}}}],["dynamic",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":156,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["e2e",{"_index":405,"title":{},"body":{"index.html":{}}}],["end",{"_index":404,"title":{},"body":{"index.html":{}}}],["engine",{"_index":363,"title":{},"body":{"index.html":{}}}],["engine/src/lib/logger/log",{"_index":220,"title":{},"body":{"injectables/LogPublisherService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/logentry.ts",{"_index":164,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/logentry.ts:16",{"_index":178,"title":{},"body":{"classes/LogEntry.html":{}}}],["engine/src/lib/logger/logentry.ts:17",{"_index":179,"title":{},"body":{"classes/LogEntry.html":{}}}],["engine/src/lib/logger/logentry.ts:18",{"_index":180,"title":{},"body":{"classes/LogEntry.html":{}}}],["engine/src/lib/logger/logentry.ts:19",{"_index":181,"title":{},"body":{"classes/LogEntry.html":{}}}],["engine/src/lib/logger/logentry.ts:20",{"_index":172,"title":{},"body":{"classes/LogEntry.html":{}}}],["engine/src/lib/logger/logentry.ts:42",{"_index":192,"title":{},"body":{"classes/LogEntry.html":{}}}],["engine/src/lib/logger/logentry.ts:50",{"_index":182,"title":{},"body":{"classes/LogEntry.html":{}}}],["engine/src/lib/logger/logentry.ts:61",{"_index":186,"title":{},"body":{"classes/LogEntry.html":{}}}],["engine/src/lib/logger/logger.service.ts",{"_index":8,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/logger.service.ts:20",{"_index":36,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:21",{"_index":28,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:32",{"_index":61,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:36",{"_index":54,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:40",{"_index":59,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:48",{"_index":48,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:52",{"_index":41,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:56",{"_index":57,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:60",{"_index":46,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:64",{"_index":52,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:72",{"_index":252,"title":{},"body":{"injectables/LoggerService.html":{}}}],["engine/src/lib/logger/publishers/consolelogpublisher.ts",{"_index":109,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"coverage.html":{}}}],["engine/src/lib/logger/publishers/consolelogpublisher.ts:12",{"_index":116,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["engine/src/lib/logger/publishers/consolelogpublisher.ts:16",{"_index":118,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["engine/src/lib/logger/publishers/consolelogpublisher.ts:6",{"_index":113,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["engine/src/lib/logger/publishers/localstoragelogpublisher.ts",{"_index":139,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"coverage.html":{}}}],["engine/src/lib/logger/publishers/localstoragelogpublisher.ts:11",{"_index":144,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["engine/src/lib/logger/publishers/localstoragelogpublisher.ts:15",{"_index":145,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["engine/src/lib/logger/publishers/localstoragelogpublisher.ts:4",{"_index":141,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["engine/src/lib/logger/publishers/logpublisher.ts",{"_index":211,"title":{},"body":{"classes/LogPublisher.html":{},"coverage.html":{}}}],["engine/src/lib/logger/publishers/logpublisher.ts:13",{"_index":214,"title":{},"body":{"classes/LogPublisher.html":{}}}],["engine/src/lib/logger/publishers/logpublisher.ts:15",{"_index":213,"title":{},"body":{"classes/LogPublisher.html":{}}}],["engine/src/lib/logger/publishers/logpublisher.ts:5",{"_index":212,"title":{},"body":{"classes/LogPublisher.html":{}}}],["engine/src/lib/material/material.module.ts",{"_index":265,"title":{},"body":{"modules/MaterialModule.html":{}}}],["entry",{"_index":92,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["entry.level",{"_index":125,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["enum",{"_index":69,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["enumerations",{"_index":358,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":17,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["error(message",{"_index":45,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["execute",{"_index":401,"title":{},"body":{"index.html":{}}}],["export",{"_index":68,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{}}}],["exports",{"_index":322,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["extends",{"_index":77,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["extra",{"_index":176,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"unit-test.html":{}}}],["files",{"_index":382,"title":{},"body":{"index.html":{}}}],["flag",{"_index":395,"title":{},"body":{"index.html":{}}}],["functions",{"_index":425,"title":{},"body":{"unit-test.html":{}}}],["further",{"_index":407,"title":{},"body":{"index.html":{}}}],["generate",{"_index":385,"title":{},"body":{"index.html":{}}}],["generated",{"_index":365,"title":{},"body":{"index.html":{}}}],["getlevel",{"_index":60,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["getlevelstring",{"_index":191,"title":{},"body":{"classes/LogEntry.html":{}}}],["getpublishers",{"_index":237,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["getting",{"_index":360,"title":{"index.html":{}},"body":{}}],["go",{"_index":410,"title":{},"body":{"index.html":{}}}],["graph",{"_index":414,"title":{},"body":{"modules.html":{}}}],["hammerjs",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":408,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":377,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":62,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{}}}],["imports",{"_index":321,"title":{},"body":{"modules/MaterialModule.html":{}}}],["include",{"_index":189,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["includeloglevel",{"_index":197,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"miscellaneous/enumerations.html":{}}}],["info(message",{"_index":47,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["inherited",{"_index":114,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"injectables/LoggerService.html":{}}}],["injectable",{"_index":63,"title":{"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["injectables",{"_index":219,"title":{},"body":{"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["instance",{"_index":242,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["interface",{"_index":76,"title":{"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["interfaces",{"_index":210,"title":{},"body":{"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"overview.html":{}}}],["json",{"_index":185,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["json.parse(logstring",{"_index":150,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["json.stringify(log",{"_index":154,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["json.stringify(this.params",{"_index":204,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["karma",{"_index":403,"title":{},"body":{"index.html":{}}}],["legend",{"_index":418,"title":{},"body":{"overview.html":{}}}],["level",{"_index":23,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["levelstring",{"_index":169,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["lines",{"_index":426,"title":{},"body":{"unit-test.html":{}}}],["localstorage",{"_index":162,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstorage.getitem(this.location",{"_index":149,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstorage.removeitem(this.location",{"_index":147,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstorage.setitem(this.location",{"_index":153,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstoragelogpublisher",{"_index":138,"title":{"classes/LocalStorageLogPublisher.html":{}},"body":{"classes/LocalStorageLogPublisher.html":{},"coverage.html":{}}}],["location",{"_index":111,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["log",{"_index":18,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["log(entry",{"_index":117,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["log(level",{"_index":49,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["log.push(entry",{"_index":151,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["log.splice(0",{"_index":158,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["logentry",{"_index":65,"title":{"classes/LogEntry.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logentry(level",{"_index":94,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["logentryconfiguration",{"_index":66,"title":{"interfaces/LogEntryConfiguration.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logger.service",{"_index":121,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["loggerconfiguration",{"_index":35,"title":{"interfaces/LoggerConfiguration.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["loggerservice",{"_index":103,"title":{"injectables/LoggerService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logkey",{"_index":142,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["loglevel",{"_index":50,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.all",{"_index":85,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["loglevel.debug",{"_index":127,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel.error",{"_index":130,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel.info",{"_index":132,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel.off",{"_index":89,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["loglevel.warn",{"_index":134,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["logpublisher",{"_index":110,"title":{"classes/LogPublisher.html":{}},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"coverage.html":{}}}],["logpublisher:13",{"_index":120,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["logpublisher:15",{"_index":119,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["logpublisher:5",{"_index":115,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["logpublisherservice",{"_index":26,"title":{"injectables/LogPublisherService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logpublisherservice.instance",{"_index":215,"title":{},"body":{"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{}}}],["logstring",{"_index":148,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["logwithdate",{"_index":82,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["matautocompletemodule",{"_index":269,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbadgemodule",{"_index":270,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":271,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":272,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":273,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":274,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":275,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":106,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{}}}],["matchipsmodule",{"_index":276,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":277,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogmodule",{"_index":278,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":279,"title":{},"body":{"modules/MaterialModule.html":{}}}],["materialmodule",{"_index":263,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules.html":{}}}],["matexpansionmodule",{"_index":280,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":281,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":282,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":283,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":284,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":285,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":286,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":287,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":288,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":289,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":290,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodule",{"_index":291,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":292,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":293,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":294,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":295,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodule",{"_index":296,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":297,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":298,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":299,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":300,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":301,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":302,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":303,"title":{},"body":{"modules/MaterialModule.html":{}}}],["message",{"_index":42,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["methods",{"_index":15,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{}}}],["miscellaneous",{"_index":357,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["module",{"_index":262,"title":{"modules/MaterialModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":264,"title":{"modules.html":{}},"body":{"modules/MaterialModule.html":{},"modules.html":{}}}],["more",{"_index":409,"title":{},"body":{"index.html":{}}}],["name",{"_index":31,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["navigate",{"_index":376,"title":{},"body":{"index.html":{}}}],["netgrif",{"_index":362,"title":{},"body":{"index.html":{}}}],["new",{"_index":93,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"index.html":{},"unit-test.html":{}}}],["ng",{"_index":373,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":266,"title":{},"body":{"modules/MaterialModule.html":{}}}],["null",{"_index":246,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["object",{"_index":171,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["optional",{"_index":33,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["out",{"_index":412,"title":{},"body":{"index.html":{},"overview.html":{}}}],["overview",{"_index":417,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":337,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":51,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{}}}],["params",{"_index":39,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["portalmodule",{"_index":316,"title":{},"body":{"modules/MaterialModule.html":{}}}],["present",{"_index":194,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["private",{"_index":167,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{}}}],["prod",{"_index":394,"title":{},"body":{"index.html":{}}}],["production",{"_index":396,"title":{},"body":{"index.html":{}}}],["project",{"_index":364,"title":{},"body":{"index.html":{}}}],["projects/.../logger.service.ts",{"_index":359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/netgrif",{"_index":6,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"unit-test.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["protected",{"_index":11,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["protractor",{"_index":406,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":101,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["providers",{"_index":420,"title":{},"body":{"overview.html":{}}}],["public",{"_index":165,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{}}}],["publish",{"_index":225,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publish(entry",{"_index":230,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher",{"_index":14,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["publisher.clear",{"_index":251,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service",{"_index":67,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["publisher.service.ts",{"_index":221,"title":{},"body":{"injectables/LogPublisherService.html":{},"coverage.html":{},"unit-test.html":{}}}],["publisher.service.ts:13",{"_index":236,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:14",{"_index":228,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:22",{"_index":238,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:26",{"_index":233,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:34",{"_index":231,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:42",{"_index":229,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publishers",{"_index":227,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publishers/logpublisher",{"_index":239,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisherservice",{"_index":34,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["rc.6",{"_index":369,"title":{},"body":{"index.html":{}}}],["rc.8",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["readme",{"_index":413,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["register",{"_index":226,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["register(publisher",{"_index":232,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["register(this",{"_index":216,"title":{},"body":{"classes/LogPublisher.html":{}}}],["reload",{"_index":380,"title":{},"body":{"index.html":{}}}],["reset",{"_index":422,"title":{},"body":{"overview.html":{}}}],["result",{"_index":105,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{}}}],["results",{"_index":107,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{}}}],["return",{"_index":86,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{}}}],["root",{"_index":102,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["run",{"_index":372,"title":{},"body":{"index.html":{}}}],["running",{"_index":397,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":240,"title":{},"body":{"injectables/LogPublisherService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":384,"title":{},"body":{"index.html":{}}}],["scrollingmodule",{"_index":318,"title":{},"body":{"modules/MaterialModule.html":{}}}],["serialization",{"_index":183,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["serialized",{"_index":184,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["serializeparams",{"_index":84,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["serve",{"_index":374,"title":{},"body":{"index.html":{}}}],["server",{"_index":371,"title":{},"body":{"index.html":{}}}],["set",{"_index":195,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["shouldlog",{"_index":19,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LoggerService.html":{}}}],["shouldlog(level",{"_index":53,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"index.html":{}}}],["started",{"_index":361,"title":{"index.html":{}},"body":{}}],["statements",{"_index":326,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["static",{"_index":241,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["stored",{"_index":391,"title":{},"body":{"index.html":{}}}],["str",{"_index":205,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["string",{"_index":38,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["stringify",{"_index":187,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["subject",{"_index":234,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["subscribe(entry",{"_index":217,"title":{},"body":{"classes/LogPublisher.html":{}}}],["super",{"_index":122,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["super(publisherservice",{"_index":104,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["switch",{"_index":124,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["table",{"_index":336,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":335,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["test",{"_index":400,"title":{"unit-test.html":{}},"body":{"index.html":{},"unit-test.html":{}}}],["tests",{"_index":399,"title":{},"body":{"index.html":{}}}],["this._log",{"_index":243,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._log.next(entry",{"_index":248,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._publishers",{"_index":245,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._publishers.foreach(publisher",{"_index":250,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._publishers.push(publisher",{"_index":247,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this.config",{"_index":81,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.config.includeloglevel",{"_index":208,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.config.level",{"_index":87,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.config.logwithdate",{"_index":206,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.config.serializeparams",{"_index":203,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.date",{"_index":198,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.date.toisostring",{"_index":207,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.level",{"_index":88,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.level[this.level",{"_index":202,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.location",{"_index":146,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["this.log(entry",{"_index":218,"title":{},"body":{"classes/LogPublisher.html":{}}}],["this.message",{"_index":199,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.params",{"_index":200,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.publisher",{"_index":80,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.publisher.publish(entry",{"_index":95,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.serializeparams",{"_index":209,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.shouldlog(level",{"_index":90,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(level",{"_index":100,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.debug",{"_index":97,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.error",{"_index":99,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.info",{"_index":96,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.warn",{"_index":98,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["time",{"_index":190,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["tostring",{"_index":168,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["true",{"_index":83,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["try",{"_index":152,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["tslib",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["unit",{"_index":398,"title":{"unit-test.html":{}},"body":{"index.html":{},"unit-test.html":{}}}],["use",{"_index":387,"title":{},"body":{"index.html":{}}}],["value",{"_index":196,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":368,"title":{},"body":{"index.html":{}}}],["via",{"_index":402,"title":{},"body":{"index.html":{}}}],["void",{"_index":44,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["warn",{"_index":20,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":56,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["write",{"_index":174,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["writetolog",{"_index":21,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LoggerService.html":{}}}],["writetolog(level",{"_index":58,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["yes",{"_index":143,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{}}}],["zone.js",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":421,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractLoggerService.html":{"url":"classes/AbstractLoggerService.html","title":"class - AbstractLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                config\n                            \n                            \n                                    Protected\n                                    Readonly\n                                publisher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Protected\n                                shouldLog\n                            \n                            \n                                warn\n                            \n                            \n                                    Protected\n                                writeToLog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    level\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogPublisherService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(level: LogLevel, message: string, ...param: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            shouldLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            writeToLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(level: LogLevel, message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n\n                \n                    \n                        getlevel()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:32\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogEntry, LogEntryConfiguration} from './LogEntry';\nimport {LogPublisherService} from './log-publisher.service';\n\nexport enum LogLevel {\n    ALL = 0,\n    DEBUG = 1,\n    INFO = 2,\n    WARN = 3,\n    ERROR = 4,\n    OFF = 6\n}\n\nexport interface LoggerConfiguration extends LogEntryConfiguration {\n    level?: LogLevel;\n}\n\nexport abstract class AbstractLoggerService {\n\n    protected readonly config: LoggerConfiguration;\n    protected readonly publisher: LogPublisherService;\n\n    protected constructor(private publisherService: LogPublisherService) {\n        this.publisher = publisherService;\n        this.config = {\n            logWithDate: true,\n            serializeParams: true,\n            level: LogLevel.ALL\n        };\n    }\n\n    get level() {\n        return this.config.level;\n    }\n\n    protected shouldLog(level: LogLevel): boolean {\n        return (level >= this.level && level !== LogLevel.OFF) || this.level === LogLevel.ALL;\n    }\n\n    protected writeToLog(level: LogLevel, message: string, ...params: Array): void {\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        const entry = new LogEntry(level, message, params, this.config);\n        this.publisher.publish(entry);\n    }\n\n    info(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.INFO, message, params);\n    }\n\n    debug(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.DEBUG, message, params);\n    }\n\n    warn(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.WARN, message, params);\n    }\n\n    error(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.ERROR, message, params);\n    }\n\n    log(level: LogLevel, message: string, ...param: Array): void {\n        this.writeToLog(level, message, param);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggerService extends AbstractLoggerService {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleLogPublisher.html":{"url":"classes/ConsoleLogPublisher.html","title":"class - ConsoleLogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleLogPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/publishers/ConsoleLogPublisher.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LogPublisher\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                log\n                            \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/publishers/ConsoleLogPublisher.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LogPublisher\n\n                                \n                            \n                        \n                            \n                                    Defined in         LogPublisher:5\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/ConsoleLogPublisher.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/ConsoleLogPublisher.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LogPublisher} from './LogPublisher';\nimport {LogEntry} from '../LogEntry';\nimport {LogLevel} from '../logger.service';\n\n\nexport class ConsoleLogPublisher extends LogPublisher {\n\n    constructor() {\n        super();\n    }\n\n    clear(): void {\n        console.clear();\n    }\n\n    log(entry: LogEntry): void {\n        switch (entry.level) {\n            case LogLevel.DEBUG:\n                console.debug(entry.toString());\n                break;\n            case LogLevel.ERROR:\n                console.error(entry.toString());\n                break;\n            case LogLevel.INFO:\n                console.info(entry.toString());\n                break;\n            case LogLevel.WARN:\n                console.warn(entry.toString());\n                break;\n            default:\n                console.log(entry.toString());\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalStorageLogPublisher.html":{"url":"classes/LocalStorageLogPublisher.html","title":"class - LocalStorageLogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalStorageLogPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/publishers/LocalStorageLogPublisher.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LogPublisher\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                log\n                            \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logKey?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/publishers/LocalStorageLogPublisher.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LogPublisher\n\n                                \n                            \n                        \n                            \n                                    Defined in         LogPublisher:5\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/LocalStorageLogPublisher.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/LocalStorageLogPublisher.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LogPublisher} from './LogPublisher';\nimport {LogEntry} from '../LogEntry';\n\nexport class LocalStorageLogPublisher extends LogPublisher {\n\n    constructor(logKey?: string) {\n        super();\n        this.location = !logKey ? 'application-log' : logKey;\n    }\n\n    clear(): void {\n        localStorage.removeItem(this.location);\n    }\n\n    log(entry: LogEntry): void {\n        const logString: string = localStorage.getItem(this.location);\n        let log: LogEntry[];\n        if (!logString) {\n            log = [];\n        } else {\n            log = JSON.parse(logString);\n        }\n        log.push(entry);\n        try {\n            localStorage.setItem(this.location, JSON.stringify(log));\n        } catch (e) {\n            const deleted: LogEntry = log.splice(0, 1)[0];\n            console.debug('Log entry from ' + deleted.date.toISOString() + ' was deleted from the LocalStorage \\'' + this.location + '\\'');\n            try {\n                localStorage.setItem(this.location, JSON.stringify(log));\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogEntry.html":{"url":"classes/LogEntry.html","title":"class - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/LogEntry.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                config\n                            \n                            \n                                    Public\n                                    Readonly\n                                date\n                            \n                            \n                                    Public\n                                    Readonly\n                                level\n                            \n                            \n                                    Public\n                                    Readonly\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                serializeParams\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    levelString\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(level: LogLevel, message: string, params?: object, config?: LogEntryConfiguration)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/LogEntry.ts:20\n                            \n                        \n\n                \n                    \n                            Log entry class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        LogLevel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nLog level of this entry\n\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nmessage to write to the log\n\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nadditional parameters to write into the log\n\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        LogEntryConfiguration\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nextra class configuration\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogEntryConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/LogEntry.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/LogEntry.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogLevel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/LogEntry.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/LogEntry.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/LogEntry.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            serializeParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serializeParams()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/LogEntry.ts:50\n                \n            \n\n\n            \n                \n                    Serialization of additional parameters of the entry.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Serialized JSON\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/LogEntry.ts:61\n                \n            \n\n\n            \n                \n                    Stringify log entry. According to configuration entry can include time, log level and extra parameters\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Log string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        levelString\n                    \n                \n\n                \n                    \n                        getlevelString()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/LogEntry.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {LogLevel} from './logger.service';\n\n/**\n * Log entry configuration.\n * All attributes are optional.\n * Attributes that are not present in the configuration object are set to their default value.\n */\nexport interface LogEntryConfiguration {\n    logWithDate?: boolean;\n    serializeParams?: boolean;\n    includeLogLevel?: boolean;\n}\n\nexport class LogEntry {\n\n    public readonly date: Date;\n    public readonly level: LogLevel;\n    public readonly message: string;\n    public readonly params: object;\n    public readonly config: LogEntryConfiguration;\n\n    /**\n     * Log entry class\n     * @param level - Log level of this entry\n     * @param message - message to write to the log\n     * @param params - additional parameters to write into the log\n     * @param config - extra class configuration\n     */\n    constructor(level: LogLevel, message: string, params?: object, config?: LogEntryConfiguration) {\n        this.date = new Date();\n        this.level = level;\n        this.message = message;\n        this.params = params;\n        const defaults: LogEntryConfiguration = {\n            logWithDate: true,\n            serializeParams: true,\n            includeLogLevel: true\n        };\n        this.config = {...defaults, ...config};\n    }\n\n    get levelString(): string {\n        return this.level[this.level];\n    }\n\n    /**\n     * Serialization of additional parameters of the entry.\n     * @return Serialized JSON\n     */\n    private serializeParams(): string {\n        if (!this.config.serializeParams) {\n            return '';\n        }\n        return JSON.stringify(this.params);\n    }\n\n    /**\n     * Stringify log entry. According to configuration entry can include time, log level and extra parameters\n     * @return Log string\n     */\n    toString(): string {\n        let str = '';\n        if (this.config.logWithDate) {\n            str += '[' + this.date.toISOString() + '] ';\n        }\n        if (this.config.includeLogLevel) {\n            str += ' ';\n        }\n        str += this.message;\n        if (this.config.serializeParams && this.params) {\n            str += ' , params: ' + this.serializeParams();\n        }\n        return str;\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntryConfiguration.html":{"url":"interfaces/LogEntryConfiguration.html","title":"interface - LogEntryConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LogEntryConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/LogEntry.ts\n        \n\n            \n                Description\n            \n            \n                Log entry configuration.\nAll attributes are optional.\nAttributes that are not present in the configuration object are set to their default value.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        includeLogLevel\n                                \n                                \n                                            Optional\n                                        logWithDate\n                                \n                                \n                                            Optional\n                                        serializeParams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        includeLogLevel\n                                    \n                                \n                                \n                                    \n                                        includeLogLevel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logWithDate\n                                    \n                                \n                                \n                                    \n                                        logWithDate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serializeParams\n                                    \n                                \n                                \n                                    \n                                        serializeParams:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {LogLevel} from './logger.service';\n\n/**\n * Log entry configuration.\n * All attributes are optional.\n * Attributes that are not present in the configuration object are set to their default value.\n */\nexport interface LogEntryConfiguration {\n    logWithDate?: boolean;\n    serializeParams?: boolean;\n    includeLogLevel?: boolean;\n}\n\nexport class LogEntry {\n\n    public readonly date: Date;\n    public readonly level: LogLevel;\n    public readonly message: string;\n    public readonly params: object;\n    public readonly config: LogEntryConfiguration;\n\n    /**\n     * Log entry class\n     * @param level - Log level of this entry\n     * @param message - message to write to the log\n     * @param params - additional parameters to write into the log\n     * @param config - extra class configuration\n     */\n    constructor(level: LogLevel, message: string, params?: object, config?: LogEntryConfiguration) {\n        this.date = new Date();\n        this.level = level;\n        this.message = message;\n        this.params = params;\n        const defaults: LogEntryConfiguration = {\n            logWithDate: true,\n            serializeParams: true,\n            includeLogLevel: true\n        };\n        this.config = {...defaults, ...config};\n    }\n\n    get levelString(): string {\n        return this.level[this.level];\n    }\n\n    /**\n     * Serialization of additional parameters of the entry.\n     * @return Serialized JSON\n     */\n    private serializeParams(): string {\n        if (!this.config.serializeParams) {\n            return '';\n        }\n        return JSON.stringify(this.params);\n    }\n\n    /**\n     * Stringify log entry. According to configuration entry can include time, log level and extra parameters\n     * @return Log string\n     */\n    toString(): string {\n        let str = '';\n        if (this.config.logWithDate) {\n            str += '[' + this.date.toISOString() + '] ';\n        }\n        if (this.config.includeLogLevel) {\n            str += ' ';\n        }\n        str += this.message;\n        if (this.config.serializeParams && this.params) {\n            str += ' , params: ' + this.serializeParams();\n        }\n        return str;\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogPublisher.html":{"url":"classes/LogPublisher.html","title":"class - LogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/publishers/LogPublisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/publishers/LogPublisher.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/LogPublisher.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/LogPublisher.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/LogPublisher.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LogEntry} from '../LogEntry';\n\nexport abstract class LogPublisher {\n\n    protected location: string;\n\n    protected constructor() {\n        // LogPublisherService.instance\n        //     .register(this)\n        //     .subscribe(entry => this.log(entry));\n    }\n\n    abstract log(entry: LogEntry): void;\n\n    abstract clear(): void;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogPublisherService.html":{"url":"injectables/LogPublisherService.html","title":"injectable - LogPublisherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogPublisherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _log\n                            \n                            \n                                    Private\n                                    Readonly\n                                _publishers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearAll\n                            \n                            \n                                publish\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    publishers\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \nclearAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            publish\n                        \n                        \n                    \n                \n            \n            \n                \npublish(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(publisher: LogPublisher)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                LogPublisher\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Subject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _log\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _publishers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogPublisher[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        publishers\n                    \n                \n\n                \n                    \n                        getpublishers()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogPublisher} from './publishers/LogPublisher';\nimport {BehaviorSubject, Subject} from 'rxjs';\nimport {LogEntry} from './LogEntry';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogPublisherService {\n\n    // public static instance: LogPublisherService;\n\n    private readonly _log: BehaviorSubject;\n    private readonly _publishers: LogPublisher[];\n\n    constructor() {\n        // LogPublisherService.instance = this;\n        this._log = new BehaviorSubject(null);\n        this._publishers = [];\n    }\n\n    get publishers(): LogPublisher[] {\n        return this._publishers;\n    }\n\n    register(publisher: LogPublisher): Subject {\n        if (!publisher) {\n            return null;\n        }\n        this._publishers.push(publisher);\n        return this._log;\n    }\n\n    publish(entry: LogEntry): void {\n        if (!entry) {\n            return;\n        }\n        this._log.next(entry);\n        console.log(this._log.getValue().toString());\n    }\n\n    clearAll(): void {\n        this._publishers.forEach(publisher => publisher.clear());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggerConfiguration.html":{"url":"interfaces/LoggerConfiguration.html","title":"interface - LoggerConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggerConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LogEntryConfiguration\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        level\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         LogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogEntry, LogEntryConfiguration} from './LogEntry';\nimport {LogPublisherService} from './log-publisher.service';\n\nexport enum LogLevel {\n    ALL = 0,\n    DEBUG = 1,\n    INFO = 2,\n    WARN = 3,\n    ERROR = 4,\n    OFF = 6\n}\n\nexport interface LoggerConfiguration extends LogEntryConfiguration {\n    level?: LogLevel;\n}\n\nexport abstract class AbstractLoggerService {\n\n    protected readonly config: LoggerConfiguration;\n    protected readonly publisher: LogPublisherService;\n\n    protected constructor(private publisherService: LogPublisherService) {\n        this.publisher = publisherService;\n        this.config = {\n            logWithDate: true,\n            serializeParams: true,\n            level: LogLevel.ALL\n        };\n    }\n\n    get level() {\n        return this.config.level;\n    }\n\n    protected shouldLog(level: LogLevel): boolean {\n        return (level >= this.level && level !== LogLevel.OFF) || this.level === LogLevel.ALL;\n    }\n\n    protected writeToLog(level: LogLevel, message: string, ...params: Array): void {\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        const entry = new LogEntry(level, message, params, this.config);\n        this.publisher.publish(entry);\n    }\n\n    info(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.INFO, message, params);\n    }\n\n    debug(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.DEBUG, message, params);\n    }\n\n    warn(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.WARN, message, params);\n    }\n\n    error(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.ERROR, message, params);\n    }\n\n    log(level: LogLevel, message: string, ...param: Array): void {\n        this.writeToLog(level, message, param);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggerService extends AbstractLoggerService {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractLoggerService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                config\n                            \n                            \n                                    Protected\n                                    Readonly\n                                publisher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Protected\n                                shouldLog\n                            \n                            \n                                warn\n                            \n                            \n                                    Protected\n                                writeToLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(level: LogLevel, message: string, ...param: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            shouldLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            writeToLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(level: LogLevel, message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerConfiguration\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLoggerService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLoggerService:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogPublisherService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLoggerService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLoggerService:21\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogEntry, LogEntryConfiguration} from './LogEntry';\nimport {LogPublisherService} from './log-publisher.service';\n\nexport enum LogLevel {\n    ALL = 0,\n    DEBUG = 1,\n    INFO = 2,\n    WARN = 3,\n    ERROR = 4,\n    OFF = 6\n}\n\nexport interface LoggerConfiguration extends LogEntryConfiguration {\n    level?: LogLevel;\n}\n\nexport abstract class AbstractLoggerService {\n\n    protected readonly config: LoggerConfiguration;\n    protected readonly publisher: LogPublisherService;\n\n    protected constructor(private publisherService: LogPublisherService) {\n        this.publisher = publisherService;\n        this.config = {\n            logWithDate: true,\n            serializeParams: true,\n            level: LogLevel.ALL\n        };\n    }\n\n    get level() {\n        return this.config.level;\n    }\n\n    protected shouldLog(level: LogLevel): boolean {\n        return (level >= this.level && level !== LogLevel.OFF) || this.level === LogLevel.ALL;\n    }\n\n    protected writeToLog(level: LogLevel, message: string, ...params: Array): void {\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        const entry = new LogEntry(level, message, params, this.config);\n        this.publisher.publish(entry);\n    }\n\n    info(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.INFO, message, params);\n    }\n\n    debug(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.DEBUG, message, params);\n    }\n\n    warn(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.WARN, message, params);\n    }\n\n    error(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.ERROR, message, params);\n    }\n\n    log(level: LogLevel, message: string, ...param: Array): void {\n        this.writeToLog(level, message, param);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggerService extends AbstractLoggerService {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/material/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n} from '@angular/material';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule\n    ]\n})\nexport class MaterialModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/LogEntry.ts\n            \n            class\n            LogEntry\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/LogEntry.ts\n            \n            interface\n            LogEntryConfiguration\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts\n            \n            injectable\n            LogPublisherService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n            \n            class\n            AbstractLoggerService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n            \n            interface\n            LoggerConfiguration\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/publishers/ConsoleLogPublisher.ts\n            \n            class\n            ConsoleLogPublisher\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/publishers/LocalStorageLogPublisher.ts\n            \n            class\n            LocalStorageLogPublisher\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/publishers/LogPublisher.ts\n            \n            class\n            LogPublisher\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.0.0-rc.8\n        \n            @angular/cdk : ~8.2.3\n        \n            @angular/common : ^9.0.0-rc.8\n        \n            @angular/compiler : ^9.0.0-rc.8\n        \n            @angular/core : ^9.0.0-rc.8\n        \n            @angular/forms : ^9.0.0-rc.8\n        \n            @angular/material : ~8.2.3\n        \n            @angular/platform-browser : ^9.0.0-rc.8\n        \n            @angular/platform-browser-dynamic : ^9.0.0-rc.8\n        \n            @angular/router : ^9.0.0-rc.8\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LogLevel   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNetgrif Application Engine\nThis project was generated with Angular CLI version 9.0.0-rc.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"unit-test.html":{"url":"unit-test.html","title":"unit-test - unit-test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n  Unit test coverage\n\n\n\n    \n    \n    \n    \n\n\n\n    \n        \n            File\n            Statements\n            Branches\n            Functions\n            Lines\n        \n    \n    \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/LogEntry.ts\n            \n            \n                95 %\n                (18/19)\n            \n            \n                60 %\n                (6/10)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                95 %\n                (18/19)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts\n            \n            \n                47 %\n                (7/15)\n            \n            \n                25 %\n                (1/4)\n            \n            \n                33 %\n                (2/6)\n            \n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n            \n            \n                96 %\n                (23/24)\n            \n            \n                71 %\n                (5/7)\n            \n            \n                100 %\n                (11/11)\n            \n            \n                96 %\n                (22/23)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
