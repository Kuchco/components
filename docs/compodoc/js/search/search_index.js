var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AbstractCard.html",[0,0.104,1,2.225]],["body/classes/AbstractCard.html",[0,0.15,1,3.841,2,2.245,3,0.239,4,0.209,5,0.179,6,0.145,7,0.112,8,4.937,9,4.128,10,0.434,11,1.106,12,4.806,13,0.434,14,0.018,15,4.806,16,0.925,17,5.382,18,0.506,19,3.212,20,0.27,21,2.025,22,0.013,23,0.016,24,0.013]],["title/classes/AbstractLoggerService.html",[0,0.104,25,2.396]],["body/classes/AbstractLoggerService.html",[0,0.106,2,1.033,3,0.204,4,0.096,5,0.082,6,0.153,7,0.118,10,0.2,11,0.65,13,0.528,14,0.019,16,1.144,18,0.483,20,0.23,21,0.932,22,0.006,23,0.009,24,0.006,25,2.95,26,1.592,27,3.4,28,2.567,29,2.559,30,2.739,31,0.836,32,2.901,33,2.258,34,2.26,35,3.251,36,2.901,37,3.251,38,2.109,39,3.971,40,0.521,41,2.258,42,2.989,43,3.782,44,1.133,45,0.864,46,0.914,47,2.739,48,2.95,49,2.476,50,2.901,51,1.499,52,4.628,53,2.758,54,2.476,55,4.515,56,1.278,57,2.416,58,2.901,59,2.476,60,2.901,61,2.476,62,2.901,63,3.709,64,3.066,65,2.476,66,2.901,67,2.476,68,1.863,69,2.901,70,2.476,71,2.901,72,2.019,73,2.476,74,2.476,75,2.476,76,0.758,77,0.472,78,1.09,79,2.109,80,1.381,81,1.863,82,1.478,83,0.521,84,1.759,85,0.886,86,1.899,87,2.431,88,1.592,89,1.578,90,1.592,91,2.901,92,1.173,93,1.899,94,2.431,95,1.899,96,1.899,97,0.932,98,0.844,99,1.899,100,1.899,101,1.899,102,1.899,103,1.899,104,1.899,105,1.899,106,1.22,107,1.295,108,1.592,109,1.592]],["title/interfaces/AuthState.html",[83,0.785,110,2.396]],["body/interfaces/AuthState.html",[3,0.21,4,0.183,5,0.157,6,0.107,7,0.082,10,0.381,11,1.022,13,0.525,14,0.019,20,0.342,22,0.011,23,0.014,24,0.011,33,4.195,51,1.511,68,3.202,83,0.995,92,1.208,97,2.237,110,4.385,111,1.972,112,3.299,113,5.391,114,5.391,115,3.462,116,3.626,117,2.473,118,3.299,119,4.148,120,3.038,121,3.299,122,3.626]],["title/injectables/AuthenticationEffects.html",[76,0.747,123,2.602]],["body/injectables/AuthenticationEffects.html",[0,0.089,3,0.142,4,0.124,5,0.106,6,0.145,7,0.111,10,0.257,11,0.784,13,0.257,14,0.019,16,1.057,18,0.633,20,0.16,22,0.008,23,0.011,24,0.008,40,0.672,44,0.578,45,0.44,46,0.466,76,0.914,77,0.608,85,1.142,123,3.185,124,1.331,125,2.743,126,2.081,127,3.736,128,4.056,129,2.974,130,3.191,131,5.497,132,5.326,133,3.04,134,5.66,135,3.191,136,2.187,137,2.187,138,5.892,139,6.733,140,4.563,141,4.563,142,4.563,143,4.563,144,3.922,145,4.563,146,3.5,147,3.922,148,3.191,149,4.563,150,6.395,151,4.563,152,3.191,153,4.563,154,5.812,155,4.563,156,4.563,157,3.191,158,4.563,159,4.563,160,4.563,161,3.191,162,2.743,163,2.743,164,2.448,165,3.191,166,1.331,167,2.227,168,3.191,169,2.448,170,2.051,171,2.051,172,1.484,173,2.051,174,2.743,175,2.051,176,1.807]],["title/guards/AuthenticationGuardService.html",[177,2.859,178,2.859]],["body/guards/AuthenticationGuardService.html",[0,0.092,3,0.147,4,0.128,5,0.11,6,0.134,7,0.103,10,0.267,11,0.569,13,0.503,14,0.019,16,0.934,18,0.608,20,0.166,22,0.008,23,0.011,24,0.008,28,2.6,31,1.036,40,0.697,44,0.984,45,0.75,46,0.794,51,1.363,56,0.986,68,2.307,76,0.939,77,0.631,85,1.185,92,1.701,97,2.224,106,1.631,115,2.307,134,5.08,164,2.54,176,2.34,178,3.593,179,3.311,180,4.533,181,2.54,182,4.684,183,3.011,184,4.684,185,5.909,186,4.684,187,2.846,188,3.527,189,3.794,190,3.091,191,5.435,192,3.311,193,3.593,194,4.684,195,5.909,196,3.244,197,5.909,198,3.311,199,6.236,200,5.435,201,4.684,202,4.026,203,6.236,204,3.311,205,4.684,206,2.128,207,2.846,208,3.311,209,3.011,210,3.311,211,1.631,212,1.381,213,3.311,214,3.311,215,3.311,216,3.311,217,3.311,218,1.846,219,3.311,220,1.976,221,3.311,222,3.311,223,3.311,224,4.684,225,3.311,226,5.435,227,3.311,228,3.311,229,4.684,230,3.311]],["title/interceptors/AuthenticationInterceptor.html",[231,2.859,232,2.396]],["body/interceptors/AuthenticationInterceptor.html",[0,0.109,3,0.173,4,0.151,5,0.129,6,0.134,7,0.103,10,0.314,13,0.422,14,0.019,16,0.9,18,0.639,20,0.195,22,0.009,23,0.013,24,0.009,31,1.158,40,0.819,44,0.948,45,0.723,46,0.765,56,0.819,76,1.049,77,0.741,85,1.392,92,1.338,166,1.622,167,2.715,170,2.5,171,2.5,176,1.54,188,3.778,193,4.539,207,3.343,211,1.916,232,3.365,233,3.89,234,4.13,235,2.984,236,5.235,237,3.89,238,4.418,239,3.89,240,4.5,241,5.235,242,6.33,243,5.917,244,6.33,245,3.89,246,5.235,247,2.915,248,5.235,249,3.89,250,5.235,251,5.235,252,2.984,253,3.343,254,3.89,255,5.917,256,3.89,257,3.343,258,3.89,259,3.89,260,3.89,261,3.89,262,3.365,263,3.89,264,3.89,265,3.89,266,3.89,267,3.89,268,3.89,269,3.89,270,3.343,271,3.89,272,3.89,273,3.89,274,3.89,275,3.89,276,3.89]],["title/classes/AuthenticationMethodService.html",[0,0.104,133,1.95]],["body/classes/AuthenticationMethodService.html",[0,0.13,2,1.95,3,0.207,4,0.181,5,0.156,6,0.154,7,0.118,10,0.377,13,0.377,14,0.018,16,1.112,18,0.608,20,0.234,21,2.733,22,0.011,23,0.014,24,0.011,27,2.907,31,1.305,40,1.362,44,0.846,45,0.645,46,0.683,56,1.243,126,2.113,129,3.159,133,3.087,166,1.95,172,3.258,173,3.004,234,4.741,247,3.45,277,3.585,278,4.674,279,3.793,280,4.674,281,4.674,282,1.593,283,2.79]],["title/modules/AuthenticationModule.html",[209,2.396,284,1.403]],["body/modules/AuthenticationModule.html",[0,0.123,3,0.196,4,0.172,5,0.147,6,0.1,7,0.077,14,0.018,18,0.674,20,0.222,22,0.011,23,0.014,24,0.011,77,0.843,89,2.377,123,3.089,133,2.982,174,4.899,175,2.845,190,2.982,206,2.845,209,4.534,231,3.395,232,4.534,252,3.395,284,1.666,285,2.058,286,2.315,287,1.948,288,2.982,289,2.642,290,3.763,291,2.315,292,3.804,293,3.804,294,3.402,295,2.642,296,2.468,297,4.426,298,3.178,299,3.178,300,2.315,301,5.7,302,4.899,303,5.7,304,4.372,305,4.426,306,2.468,307,4.426,308,3.395,309,4.426,310,4.426,311,4.426,312,3.395,313,4.426,314,5.7,315,4.426,316,4.426,317,4.426,318,4.426]],["title/injectables/AuthenticationService.html",[76,0.747,188,2.225]],["body/injectables/AuthenticationService.html",[0,0.092,3,0.146,4,0.128,5,0.11,6,0.154,7,0.118,10,0.266,11,0.803,13,0.476,14,0.019,16,1.143,18,0.649,20,0.165,22,0.008,23,0.011,24,0.008,28,2.387,31,1.033,38,2.604,40,0.694,44,0.846,45,0.645,46,0.683,51,0.694,56,1.142,68,2.301,76,0.936,77,0.628,85,1.181,92,1.652,98,1.592,106,1.625,107,1.725,113,4.525,124,1.376,126,1.672,129,2.743,133,3.086,136,1.241,137,1.241,146,3.583,166,1.376,167,2.302,169,2.53,170,3.003,171,2.12,172,2.896,173,2.12,175,2.12,176,2.632,183,3.486,187,2.835,188,2.788,189,3.786,190,3.086,193,3.583,206,2.12,247,3.067,279,3.003,282,1.592,283,1.969,319,2.53,320,5.424,321,5.424,322,5.424,323,4.671,324,3.298,325,3.298,326,3.298,327,4.525,328,3.583,329,3.298,330,3.298,331,3.298,332,2.53,333,4.16,334,2.835,335,2.302,336,3.298,337,2.835,338,2.302,339,1.839,340,4.671,341,3.298,342,3.298,343,3.298,344,3.298,345,3.298,346,3.298,347,4.671,348,2.53,349,3.298,350,3.298,351,3.298,352,3.298]],["title/interfaces/Authority.html",[83,0.785,353,2.078]],["body/interfaces/Authority.html",[3,0.215,4,0.188,5,0.161,6,0.109,7,0.084,10,0.39,11,1.036,13,0.39,14,0.018,20,0.345,22,0.012,23,0.015,24,0.012,45,0.832,51,1.604,53,2.723,83,1.448,111,2.017,282,1.648,339,2.696,353,4.023,354,3.376,355,2.887,356,3.71,357,2.382,358,2.887,359,3.71,360,3.71,361,2.887,362,3.71,363,3.376,364,3.109,365,2.887,366,3.71,367,3.71]],["title/injectables/BasicAuthenticationService.html",[76,0.747,368,2.859]],["body/injectables/BasicAuthenticationService.html",[0,0.092,3,0.147,4,0.128,5,0.11,6,0.134,7,0.103,10,0.267,13,0.439,14,0.019,16,1.169,18,0.625,20,0.166,21,2.224,22,0.008,23,0.011,24,0.008,29,2.612,31,1.036,40,0.697,44,0.984,45,0.75,46,0.794,56,1.244,76,0.939,77,0.631,84,2.178,85,1.185,92,1.197,97,1.763,98,1.596,124,1.381,126,2.115,129,3.095,133,3.262,136,1.246,137,1.246,166,1.381,172,3.26,173,2.128,175,2.128,176,1.311,189,3.794,190,3.091,206,2.128,247,3.278,252,2.54,253,2.846,257,2.846,279,3.494,282,1.128,283,1.976,302,5.08,328,3.593,332,2.54,368,3.593,369,4.533,370,4.533,371,2.311,372,3.311,373,3.311,374,4.684,375,3.311,376,2.178,377,3.311,378,2.45,379,2.846,380,2.846,381,3.311,382,2.128,383,6.474,384,3.311,385,5.435,386,3.311,387,3.311,388,5.435,389,5.435,390,4.684,391,3.311,392,3.311,393,2.846,394,3.311,395,3.311,396,3.311,397,3.311,398,3.311,399,2.54,400,3.311,401,3.311,402,3.311]],["title/modules/CardModule.html",[284,1.403,403,2.602]],["body/modules/CardModule.html",[0,0.114,3,0.181,4,0.158,5,0.136,6,0.092,7,0.071,14,0.018,18,0.671,19,2.435,20,0.204,22,0.01,23,0.013,24,0.01,77,0.777,126,1.461,220,2.435,284,1.535,285,1.897,286,2.134,287,1.795,288,3.17,289,2.435,290,2.435,291,3.17,294,3.226,295,2.435,296,2.275,298,3.013,299,3.013,300,2.134,306,3.013,376,2.513,403,5.249,404,3.507,405,3.507,406,3.507,407,3.507,408,3.649,409,3.649,410,3.649,411,3.846,412,4.08,413,2.435,414,2.848,415,5.404,416,2.848,417,2.435,418,2.848,419,3.507,420,3.13,421,4.146,422,2.623,423,5.404]],["title/classes/ConfigurationService.html",[0,0.104,190,1.95]],["body/classes/ConfigurationService.html",[0,0.125,2,1.871,3,0.199,4,0.174,5,0.149,6,0.156,7,0.121,10,0.362,13,0.362,14,0.018,16,1.15,18,0.54,20,0.225,21,1.688,22,0.011,23,0.014,24,0.011,27,2.832,31,1.271,40,0.944,44,0.812,45,0.619,46,0.655,56,1.336,85,1.606,92,1.621,166,1.871,176,2.512,190,3.007,212,2.952,247,3.125,424,3.441,425,6.691,426,6.691,427,4.485,428,5.429,429,4.485,430,3.431,431,4.485,432,4.485,433,4.485,434,4.485,435,4.485,436,4.485,437,4.485]],["title/classes/ConsoleLogPublisher.html",[0,0.104,438,2.396]],["body/classes/ConsoleLogPublisher.html",[0,0.104,2,1.55,3,0.165,4,0.144,5,0.124,6,0.14,7,0.108,10,0.3,11,0.873,13,0.501,14,0.018,16,1.154,18,0.584,20,0.186,21,2.338,22,0.009,23,0.012,24,0.009,27,2.5,30,2.218,31,1.122,34,3.122,39,2.218,40,0.783,41,3.03,42,3.06,44,1.047,45,0.798,46,0.845,47,2.218,51,0.783,56,1.308,57,2.403,63,2.072,78,2.954,80,2.072,81,3.06,82,2.218,84,2.361,92,0.95,109,2.389,136,1.399,378,3.024,438,3.263,439,4.765,440,2.389,441,4.007,442,3.894,443,4.417,444,3.195,445,3.195,446,3.717,447,4.434,448,3.717,449,3.195,450,3.195,451,3.263,452,3.717,453,3.717,454,3.717,455,6.212,456,3.717,457,3.717,458,6.212,459,3.717,460,3.717,461,3.717,462,3.717,463,3.717,464,3.717,465,3.717]],["title/modules/CovalentModule.html",[284,1.403,466,2.859]],["body/modules/CovalentModule.html",[0,0.143,3,0.228,4,0.199,5,0.171,6,0.116,7,0.089,14,0.018,18,0.676,20,0.257,22,0.012,23,0.015,24,0.012,77,0.978,285,2.387,288,2.686,291,2.686,298,3.487,299,3.487,300,2.686,306,2.862,466,4.798,467,5.134,468,6.746,469,4.413,470,6.746,471,4.413,472,6.255,473,6.255,474,6.255,475,4.413]],["title/interfaces/Credentials.html",[83,0.785,172,1.733]],["body/interfaces/Credentials.html",[3,0.238,4,0.208,5,0.179,6,0.121,7,0.093,10,0.433,11,1.104,13,0.518,14,0.018,20,0.269,22,0.013,23,0.016,24,0.013,51,1.557,83,1.13,111,2.238,172,2.987,328,5.467,376,3.314,476,4.611]],["title/components/ForgottenPasswordCardComponent.html",[408,1.836,477,1.555]],["body/components/ForgottenPasswordCardComponent.html",[0,0.092,1,3.524,3,0.147,4,0.128,5,0.11,6,0.133,7,0.103,10,0.267,11,0.804,12,3.79,13,0.438,14,0.018,15,2.307,16,1.015,18,0.51,19,1.972,20,0.166,21,1.244,22,0.008,23,0.011,24,0.008,31,1.034,40,0.696,44,0.847,45,0.893,46,0.683,56,0.985,57,1.675,72,2.389,77,0.63,84,2.175,85,1.183,117,3.48,126,2.114,211,2.304,287,1.454,361,3.241,376,3.418,378,1.729,382,2.124,408,2.908,409,1.628,410,1.628,413,1.972,417,4.056,418,4.121,477,2.265,478,2.792,479,2.124,480,2.124,481,2.124,482,1.842,483,4.529,484,2.535,485,3.49,486,2.124,487,4.276,488,3.265,489,3.007,490,4.165,491,3.007,492,3.588,493,3.795,494,3.588,495,2.535,496,4.529,497,3.305,498,3.588,499,3.305,500,3.588,501,3.305,502,2.535,503,2.841,504,2.535,505,2.535,506,2.535,507,2.841,508,2.535,509,3.265,510,3.588,511,4.021,512,4.678,513,3.007,514,3.007,515,2.124,516,3.795,517,2.124,518,3.795,519,1.628,520,1.842,521,1.628,522,2.124,523,2.124,524,2.124]],["title/classes/LocalStorageLogPublisher.html",[0,0.104,525,2.396]],["body/classes/LocalStorageLogPublisher.html",[0,0.088,2,1.313,3,0.14,4,0.122,5,0.105,6,0.138,7,0.114,10,0.254,11,0.777,13,0.494,14,0.019,16,1.127,18,0.497,20,0.158,21,2.174,22,0.008,23,0.011,24,0.008,27,2.226,28,2.326,30,1.879,31,0.999,34,3.193,40,0.663,41,2.698,42,2.845,44,0.957,45,0.73,46,0.772,47,1.879,51,1.341,56,1.216,57,2.279,78,2.953,80,1.756,81,3.013,82,1.879,84,2.102,92,0.805,97,1.701,98,1.073,109,2.024,136,1.185,137,1.185,183,3.398,212,1.313,378,2.766,399,2.415,440,2.024,441,3.8,442,3.467,443,4.216,444,3.885,445,2.707,447,4.055,449,2.707,450,2.707,451,2.024,525,2.905,526,4.692,527,3.651,528,5.286,529,6.117,530,2.198,531,3.149,532,2.707,533,4.519,534,3.149,535,3.149,536,4.519,537,3.149,538,3.149,539,3.149,540,4.519,541,4.519,542,4.519,543,4.519,544,4.519,545,4.519,546,3.149,547,3.149,548,3.149,549,3.149,550,2.707,551,3.149,552,3.149]],["title/classes/LogEntry.html",[0,0.104,78,1.64]],["body/classes/LogEntry.html",[0,0.152,2,0.996,3,0.106,4,0.093,5,0.079,6,0.146,7,0.113,10,0.193,11,0.632,13,0.464,14,0.019,16,1.091,18,0.224,20,0.184,22,0.006,23,0.009,24,0.006,28,3.044,29,3.448,31,0.813,34,3.044,38,2.051,39,3.935,40,0.503,44,1.085,45,0.33,46,0.537,51,1.409,52,4.165,53,0.945,55,4.165,56,0.774,63,3.206,64,3.008,68,2.21,72,2.53,78,1.618,79,3.34,81,3.248,83,0.503,87,1.535,88,2.364,89,1.871,90,3.696,92,1.469,94,1.535,97,0.899,98,0.814,136,0.899,137,0.899,176,1.776,212,2.886,218,1.331,262,1.535,357,1.176,430,3.432,451,1.535,530,2.567,553,4.522,554,1.667,555,4.942,556,4.332,557,3.856,558,3.161,559,3.678,560,4.332,561,4.332,562,4.332,563,2.388,564,2.388,565,2.388,566,2.388,567,2.388,568,3.161,569,3.161,570,2.821,571,2.388,572,3.161,573,3.161,574,3.161,575,3.161,576,2.388,577,2.388,578,3.161,579,2.052,580,1.832,581,3.161,582,2.052,583,3.161,584,3.856,585,3.161,586,2.052,587,3.161,588,2.052,589,5.149,590,2.052,591,2.052,592,2.052,593,2.052,594,3.161]],["title/interfaces/LogEntryConfiguration.html",[79,2.078,83,0.785]],["body/interfaces/LogEntryConfiguration.html",[0,0.142,3,0.131,4,0.114,5,0.098,6,0.067,7,0.051,10,0.238,11,0.74,13,0.411,14,0.019,18,0.277,20,0.216,22,0.007,23,0.01,24,0.007,28,2.621,29,3.121,34,2.957,39,3.713,44,0.921,46,0.963,51,1.31,52,3.999,53,1.165,55,3.828,63,2.837,64,3.341,68,3.31,72,2.463,78,1.295,79,3.32,81,3.165,83,0.62,87,1.892,88,3.828,89,2.122,90,3.999,92,1.59,94,1.892,97,1.108,98,1.003,111,1.228,136,1.62,137,1.62,176,1.165,212,2.484,218,1.641,262,1.892,357,1.45,430,3.713,451,1.892,553,2.054,554,2.054,555,4.373,556,2.53,557,2.53,558,2.53,560,3.699,561,3.699,562,3.699,568,2.53,569,2.53,570,2.258,572,2.53,573,2.53,574,2.53,575,2.53,578,4.811,579,3.699,580,3.301,581,5.119,582,2.53,583,3.699,584,4.373,585,3.699,586,2.53,587,3.699,588,2.53,589,5.523,590,2.53,591,2.53,592,2.53,593,2.53,594,3.699]],["title/classes/LogPublisher.html",[0,0.104,441,2.225]],["body/classes/LogPublisher.html",[0,0.119,2,1.785,3,0.19,4,0.166,5,0.142,6,0.154,7,0.119,10,0.345,11,0.959,13,0.501,14,0.018,16,1.13,18,0.524,20,0.214,21,2.679,22,0.01,23,0.014,24,0.01,27,3.055,31,1.233,34,2.454,40,0.901,41,3.328,42,3.237,44,1.01,45,0.77,46,0.815,47,3.328,51,1.174,56,1.174,57,2.353,78,2.892,80,2.385,81,3.055,82,2.554,440,2.75,441,3.328,442,4.758,443,4.225,447,4.277,451,2.75,532,3.678,595,5.228,596,5.576,597,4.279,598,4.279,599,4.279,600,4.279]],["title/injectables/LogPublisherService.html",[42,1.836,76,0.747]],["body/injectables/LogPublisherService.html",[0,0.094,3,0.15,4,0.131,5,0.112,6,0.154,7,0.119,10,0.273,11,0.817,13,0.481,14,0.019,16,1.151,18,0.612,20,0.238,22,0.008,23,0.012,24,0.008,28,2.867,30,3.75,31,1.051,34,2.091,38,2.649,40,1.157,42,2.707,44,0.86,45,0.656,46,0.694,56,1.157,57,2.134,76,0.952,77,0.644,78,2.624,80,1.883,81,2.707,92,1.524,97,1.271,98,1.619,106,1.664,107,1.767,124,1.409,166,1.409,176,2.58,183,2.172,212,1.409,247,2.707,327,4.215,348,2.591,438,3.054,441,3.995,525,3.054,527,2.016,601,4.393,602,2.358,603,5.495,604,5.495,605,5.962,606,4.751,607,4.084,608,4.573,609,4.751,610,3.378,611,4.751,612,3.378,613,4.751,614,3.378,615,3.378,616,3.378,617,3.378,618,3.378,619,3.378,620,3.378,621,3.378,622,3.378,623,4.751,624,2.904,625,4.751,626,3.378,627,3.378,628,3.378,629,3.378,630,3.378,631,3.378]],["title/interfaces/LoggerConfiguration.html",[48,2.396,83,0.785]],["body/interfaces/LoggerConfiguration.html",[0,0.137,3,0.157,4,0.137,5,0.118,6,0.08,7,0.062,10,0.286,11,0.844,13,0.286,14,0.019,18,0.572,20,0.283,21,1.333,22,0.009,23,0.012,24,0.009,25,3.157,26,2.278,27,3.149,28,2.161,29,1.975,30,2.115,34,2.161,39,4.191,41,2.115,42,2.998,46,0.718,47,2.932,48,3.624,50,2.718,51,1.393,52,4.569,53,2.532,55,4.445,57,2.368,58,2.718,60,2.718,62,2.718,63,3.782,64,2.932,66,2.718,68,1.745,69,2.718,71,2.718,72,1.559,76,0.984,77,0.675,78,1.559,79,3.143,80,1.975,81,2.419,82,2.115,83,0.746,84,2.622,85,1.268,86,2.718,87,3.157,88,2.278,89,2.049,90,2.278,91,3.768,92,1.441,93,2.718,94,3.157,95,2.718,96,2.718,97,1.333,98,1.207,99,2.718,100,2.718,101,2.718,102,2.718,103,2.718,104,2.718,105,2.718,106,1.745,107,1.854,108,2.278,109,2.278,111,1.478]],["title/injectables/LoggerService.html",[76,0.747,108,2.396]],["body/injectables/LoggerService.html",[0,0.106,3,0.205,4,0.097,5,0.083,6,0.086,7,0.066,10,0.202,11,0.656,13,0.53,14,0.019,16,1.128,18,0.486,20,0.232,21,0.943,22,0.006,23,0.009,24,0.006,25,4.349,26,1.611,27,3.373,28,2.579,29,2.577,30,2.759,31,0.844,32,2.928,33,2.278,34,2.274,35,3.281,36,2.928,37,3.281,39,3.841,40,0.528,41,2.278,42,3.001,44,1.137,45,0.867,46,0.918,47,2.759,48,2.972,50,2.928,51,1.502,52,4.636,53,2.765,55,4.524,56,1.283,57,2.422,58,2.928,60,2.928,62,2.928,63,3.72,64,3.085,66,2.928,68,1.88,69,2.928,71,2.928,72,2.034,76,0.765,77,0.478,78,1.103,79,2.128,80,1.397,81,1.88,82,1.496,83,0.528,84,2.15,85,0.897,86,1.922,87,2.453,88,1.611,89,1.592,90,1.611,91,2.928,92,1.181,93,1.922,94,2.453,95,1.922,96,1.922,97,0.943,98,0.854,99,1.922,100,1.922,101,1.922,102,1.922,103,1.922,104,1.922,105,1.922,106,1.234,107,1.311,108,2.453,109,1.611,124,1.045,378,3.366,632,2.506,633,2.506,634,2.506,635,2.506,636,2.506,637,2.506,638,2.506,639,2.506,640,2.506,641,2.506]],["title/components/LoginCardComponent.html",[409,1.836,477,1.555]],["body/components/LoginCardComponent.html",[0,0.086,1,3.421,3,0.137,4,0.12,5,0.103,6,0.137,7,0.106,10,0.25,11,0.768,12,3.655,13,0.423,14,0.019,15,2.161,16,1.045,18,0.492,19,1.848,20,0.155,21,1.165,22,0.007,23,0.011,24,0.007,31,0.987,40,0.652,44,0.808,45,0.874,46,0.652,56,0.94,57,1.598,72,2.304,77,0.59,84,2.076,85,1.108,89,1.862,117,3.414,126,2.504,136,1.165,137,1.165,211,2.199,218,2.489,287,1.362,376,2.826,378,1.62,382,1.99,408,1.525,409,2.823,410,1.525,413,1.848,416,4.241,417,3.421,477,2.184,478,2.665,479,1.99,480,1.99,481,1.99,482,1.726,485,3.366,486,1.99,487,4.195,488,3.116,489,2.87,490,4.017,491,2.87,492,3.425,493,3.685,494,3.425,495,2.375,496,4.397,498,3.425,500,3.425,502,2.375,504,2.375,505,2.375,506,2.375,508,2.375,509,3.116,510,3.425,513,2.87,514,2.87,515,1.99,516,3.685,517,1.99,518,3.685,519,1.525,520,1.726,521,1.525,522,1.99,523,1.99,524,1.99,642,4.661,643,2.161,644,5.223,645,4.465,646,3.096,647,3.096,648,3.838,649,3.838,650,4.465,651,4.465,652,2.661,653,2.661,654,3.096,655,4.465,656,3.096,657,4.465,658,2.161,659,3.096,660,3.096,661,3.096,662,3.096,663,3.096]],["title/modules/MaterialModule.html",[284,1.403,411,2.078]],["body/modules/MaterialModule.html",[0,0.112,3,0.178,4,0.156,5,0.134,6,0.091,7,0.07,14,0.018,18,0.689,20,0.201,22,0.01,23,0.013,24,0.01,77,0.764,220,2.394,285,1.865,288,2.098,291,2.098,298,2.98,299,2.98,300,2.098,306,2.236,411,2.98,421,4.61,422,2.578,664,4.011,665,5.344,666,5.344,667,5.344,668,5.344,669,5.344,670,5.344,671,5.344,672,5.344,673,5.344,674,5.344,675,5.344,676,5.344,677,5.344,678,5.344,679,5.344,680,5.344,681,5.344,682,5.344,683,5.344,684,5.344,685,5.344,686,5.344,687,5.344,688,5.344,689,5.344,690,5.344,691,5.344,692,5.344,693,5.344,694,5.344,695,5.344,696,5.344,697,5.344,698,5.344,699,5.344,700,3.448,701,5.344,702,4.011,703,4.011,704,5.344,705,4.011,706,5.344,707,4.011,708,5.344,709,4.011,710,5.344,711,4.011,712,5.344,713,4.011,714,5.344,715,4.011]],["title/injectables/NullAuthenticationService.html",[76,0.747,716,2.859]],["body/injectables/NullAuthenticationService.html",[0,0.115,3,0.183,4,0.16,5,0.137,6,0.147,7,0.113,10,0.333,13,0.44,14,0.018,16,1.158,18,0.633,20,0.207,21,2.44,22,0.01,23,0.013,24,0.01,31,1.205,40,1.284,44,0.987,45,0.752,46,0.796,56,1.365,76,1.092,77,0.787,84,2.534,92,1.392,124,1.723,126,2.321,129,3.282,133,3.526,166,1.723,172,3.331,173,2.655,175,2.655,247,3.476,279,3.919,282,1.408,283,2.465,332,3.168,348,3.168,371,2.883,378,2.85,379,3.55,380,3.55,382,2.655,716,4.179,717,4.973,718,4.973,719,4.13,720,4.13,721,4.13]],["title/classes/NullStorage.html",[0,0.104,722,2.602]],["body/classes/NullStorage.html",[0,0.104,2,1.561,3,0.166,4,0.145,5,0.125,6,0.158,7,0.122,10,0.411,11,0.877,13,0.526,14,0.019,16,1.183,20,0.188,22,0.009,23,0.012,24,0.009,28,2.553,31,1.128,44,1.128,45,0.928,46,0.91,51,1.585,56,1.372,57,2.408,92,1.303,115,3.313,137,2.183,211,2.512,443,4.004,527,3.044,722,3.559,723,2.87,724,4.986,725,5.099,726,5.603,727,5.099,728,5.099,729,6.518,730,3.742,731,3.742,732,5.099,733,3.742,734,5.099,735,3.742,736,5.099,737,3.742,738,5.099,739,3.742,740,3.742,741,3.742]],["title/components/PanelComponent.html",[477,1.555,519,1.836]],["body/components/PanelComponent.html",[0,0.094,3,0.149,4,0.13,5,0.112,6,0.157,7,0.121,10,0.271,13,0.442,14,0.019,16,1.173,18,0.315,20,0.168,22,0.008,23,0.011,24,0.008,31,1.046,40,1.153,45,0.653,56,1.153,57,1.961,77,0.64,98,1.144,117,3.496,120,3.041,126,1.202,136,1.264,137,1.264,211,2.33,287,1.478,376,1.562,408,1.654,409,1.654,410,1.654,413,2.004,417,2.004,477,2.285,478,2.824,479,2.158,480,2.158,481,2.158,482,1.872,485,3.521,486,2.158,487,4.295,488,3.823,489,3.041,491,3.041,493,3.822,513,3.041,514,3.041,515,2.158,516,3.822,517,2.158,518,3.822,519,2.929,520,3.054,521,1.654,522,2.158,523,2.158,524,2.158,653,2.886,742,2.576,743,5.477,744,4.731,745,5.946,746,5.946,747,4.066,748,5.477,749,5.477,750,5.477,751,4.731,752,5.477,753,4.731,754,3.358,755,6.268,756,3.358,757,3.358,758,5.946,759,3.358,760,3.358,761,3.358,762,5.111,763,4.731,764,4.731,765,2.886,766,3.358,767,3.358,768,3.358,769,3.358,770,3.358,771,3.358]],["title/modules/PanelModule.html",[284,1.403,772,2.602]],["body/modules/PanelModule.html",[0,0.128,3,0.204,4,0.178,5,0.153,6,0.104,7,0.08,14,0.018,18,0.655,20,0.23,22,0.011,23,0.014,24,0.011,77,0.876,220,2.744,284,1.73,285,2.138,286,2.405,287,2.023,288,3.357,289,2.744,290,2.744,291,3.357,294,3.485,295,2.744,296,2.563,298,3.256,299,3.256,300,2.405,306,3.256,411,3.971,419,3.951,420,3.526,422,2.955,519,3.713,772,5.161,773,3.951,774,3.951,775,4.597,776,3.951,777,4.597,778,5.839]],["title/interfaces/ProcessRole.html",[83,0.785,355,2.225]],["body/interfaces/ProcessRole.html",[3,0.205,4,0.179,5,0.154,6,0.104,7,0.081,10,0.373,11,1.007,13,0.519,14,0.018,20,0.339,22,0.011,23,0.014,24,0.011,45,0.964,46,0.856,51,1.615,53,2.679,83,1.425,111,1.928,282,1.575,339,2.577,353,3.267,354,3.226,355,3.498,356,5.19,357,3.333,358,2.759,359,3.545,360,3.545,361,2.759,362,3.545,363,3.226,364,2.971,365,2.759,366,3.545,367,3.545]],["title/interfaces/ProjectInfo.html",[83,0.785,779,2.602]],["body/interfaces/ProjectInfo.html",[3,0.141,4,0.123,5,0.151,6,0.072,7,0.092,10,0.256,11,0.78,13,0.467,14,0.019,18,0.599,20,0.32,22,0.013,23,0.011,24,0.008,51,1.546,53,1.254,83,0.667,89,1.321,92,1.63,97,2.575,98,1.546,111,1.321,121,4.452,262,2.036,338,3.701,399,3.481,428,3.481,430,2.709,482,3.418,520,1.766,779,3.701,780,2.429,781,5.269,782,6.13,783,6.13,784,6.13,785,4.538,786,3.167,787,3.167,788,3.167,789,4.978,790,3.167,791,5.303,792,3.901,793,3.167,794,3.167,795,3.167,796,3.167,797,3.167,798,4.538,799,3.167,800,2.722,801,4.538,802,3.167,803,4.538,804,4.538,805,5.303,806,4.538,807,3.167,808,3.167,809,3.167,810,3.167,811,3.167,812,3.167,813,3.167,814,3.167,815,3.167,816,3.167,817,3.167,818,2.722,819,3.167,820,3.167,821,3.167,822,3.167,823,3.167,824,3.167,825,2.722,826,4.538,827,3.167,828,2.722,829,2.722,830,3.167,831,3.167,832,2.722,833,3.167,834,2.722,835,3.901,836,3.901,837,3.167,838,3.167,839,2.722,840,2.722,841,3.167,842,3.167,843,3.167,844,2.722,845,3.901,846,4.538,847,3.167,848,3.167,849,3.167]],["title/components/RegistrationCardComponent.html",[410,1.836,477,1.555]],["body/components/RegistrationCardComponent.html",[0,0.084,1,3.381,3,0.134,4,0.117,5,0.1,6,0.142,7,0.109,10,0.244,11,0.753,12,3.602,13,0.416,14,0.019,15,2.106,16,1.079,18,0.532,19,1.801,20,0.151,21,1.136,22,0.007,23,0.011,24,0.007,31,0.969,40,0.635,44,0.794,45,0.866,46,0.64,56,0.923,57,1.569,72,2.271,77,0.575,84,2.038,85,1.08,89,2.363,117,3.387,126,2.028,136,1.649,137,1.649,211,2.159,287,1.328,361,3.081,376,2.038,378,1.579,382,1.94,408,1.486,409,1.486,410,2.79,413,3.959,414,4.38,417,1.801,477,2.153,478,2.616,479,1.94,480,1.94,481,1.94,482,1.683,485,3.318,486,1.94,487,4.162,488,3.059,489,2.817,490,3.959,491,2.817,492,3.362,493,3.641,494,3.362,495,2.315,496,4.345,498,3.362,500,3.362,502,2.315,503,2.594,504,2.315,505,2.315,506,2.315,507,2.594,508,2.315,509,3.059,510,3.362,511,3.767,513,2.817,514,2.817,515,1.94,516,3.641,517,1.94,518,3.641,519,1.486,520,1.683,521,1.486,522,1.94,523,1.94,524,1.94,607,3.767,643,2.106,644,5.171,648,4.868,649,4.868,850,4.38,851,6.015,852,4.383,853,3.018,854,3.018,855,3.018,856,3.362,857,3.018,858,3.018,859,3.018,860,4.383,861,4.383]],["title/interfaces/Role.html",[83,0.785,862,2.225]],["body/interfaces/Role.html",[3,0.222,4,0.194,5,0.166,6,0.113,7,0.087,10,0.403,11,1.057,13,0.561,14,0.018,20,0.25,22,0.012,23,0.015,24,0.012,45,0.96,46,1.016,51,1.605,83,1.052,111,2.084,136,1.88,339,3.878,357,3.426,862,3.672,863,4.294,864,5.979]],["title/injectables/SelectLanguageService.html",[76,0.747,865,2.602]],["body/injectables/SelectLanguageService.html",[0,0.121,3,0.193,4,0.169,5,0.145,6,0.149,7,0.115,10,0.351,11,0.968,13,0.455,14,0.019,16,1.074,18,0.408,20,0.218,22,0.011,23,0.014,24,0.011,31,1.245,40,1.316,44,0.787,45,0.6,46,0.635,51,1.316,56,0.915,57,1.556,72,1.912,76,1.129,77,0.828,89,2.607,106,2.14,107,2.273,120,4.017,124,1.813,136,1.635,137,1.635,212,2.927,726,3.735,865,3.931,866,5.071,867,3.333,868,6.249,869,5.632,870,4.345,871,5.632,872,4.345,873,4.841,874,4.841,875,4.841,876,4.345,877,4.345,878,5.632]],["title/injectables/SessionService.html",[76,0.747,238,2.602]],["body/injectables/SessionService.html",[0,0.082,3,0.131,4,0.114,5,0.098,6,0.16,7,0.123,10,0.238,11,0.741,13,0.519,14,0.019,16,1.204,18,0.526,20,0.148,22,0.007,23,0.01,24,0.007,27,2.509,28,2.958,31,0.953,38,2.403,40,0.621,44,0.78,45,0.595,46,0.63,51,1.415,56,1.072,57,2.133,76,0.863,77,0.562,85,1.056,92,1.301,97,1.622,98,1.469,106,1.452,107,1.543,114,3.907,115,1.452,118,3.008,124,1.23,136,1.622,137,1.622,166,1.23,176,2.662,183,4.001,189,3.008,190,2.931,206,1.895,212,1.798,238,3.008,240,4.378,247,2.123,270,4.815,327,3.907,443,3.601,527,2.572,550,2.534,580,2.262,624,2.534,722,3.555,879,2.262,880,5.093,881,5.093,882,5.093,883,5.093,884,5.602,885,5.96,886,5.093,887,2.949,888,4.309,889,2.949,890,2.949,891,2.949,892,2.949,893,4.309,894,2.949,895,4.309,896,2.949,897,2.949,898,2.949,899,2.949,900,2.949,901,2.949,902,2.949,903,2.949,904,2.949,905,4.309,906,2.949,907,2.949,908,2.949,909,4.309,910,4.309,911,2.949,912,4.309,913,2.949,914,2.949,915,2.949,916,2.949,917,2.949,918,2.949,919,4.309,920,2.949,921,2.949,922,2.949]],["title/modules/SignUpModule.html",[284,1.403,923,2.602]],["body/modules/SignUpModule.html",[0,0.138,3,0.22,4,0.192,5,0.165,6,0.112,7,0.086,14,0.018,18,0.624,20,0.248,22,0.012,23,0.015,24,0.012,77,0.943,284,1.863,285,2.302,286,2.59,287,2.179,288,3.2,289,2.955,290,3.963,291,2.59,294,3.651,295,2.955,296,2.76,298,3.411,299,3.411,300,2.59,306,2.76,923,5.065,924,4.256,925,4.256,926,4.665,927,3.456,928,4.951,929,4.951,930,4.951,931,4.951]],["title/injectables/SignUpService.html",[76,0.747,926,2.396]],["body/injectables/SignUpService.html",[0,0.152,3,0.241,4,0.211,5,0.181,6,0.146,7,0.113,14,0.018,16,0.934,18,0.511,20,0.272,22,0.013,23,0.016,24,0.013,40,1.456,76,1.297,77,1.036,124,2.267,926,4.161,927,4.518,932,4.965,933,4.169,934,5.435]],["title/interfaces/State.html",[83,0.785,196,2.225]],["body/interfaces/State.html",[3,0.185,4,0.162,5,0.139,6,0.094,7,0.073,10,0.337,11,0.943,13,0.443,14,0.019,18,0.576,20,0.326,22,0.01,23,0.013,24,0.01,33,4.285,51,1.29,83,0.878,92,1.066,97,2.306,111,1.74,115,3.61,117,2.182,119,4.277,121,2.912,127,2.682,128,2.912,196,4.409,282,2.57,283,2.49,935,2.912,936,5.594,937,4.714,938,4.172,939,2.912,940,2.912,941,3.586,942,3.2,943,3.2,944,3.586,945,3.586,946,3.586,947,3.586,948,3.586,949,4.172,950,4.172]],["title/components/ToolbarComponent.html",[477,1.555,521,1.836]],["body/components/ToolbarComponent.html",[0,0.086,3,0.137,4,0.12,5,0.103,6,0.143,7,0.11,10,0.25,11,0.768,13,0.463,14,0.018,16,1.045,18,0.419,20,0.155,22,0.007,23,0.011,24,0.007,31,0.987,40,0.652,44,0.561,45,0.723,46,0.452,51,1.207,56,0.652,57,1.108,77,0.59,117,3.414,126,1.108,129,2.076,211,2.199,212,2.391,282,1.055,287,1.362,376,1.44,408,1.525,409,1.525,410,1.525,413,1.848,417,1.848,477,2.184,478,2.665,479,1.99,480,1.99,481,1.99,482,1.726,485,3.366,486,1.99,487,4.195,489,2.87,491,2.87,493,3.685,513,2.87,514,2.87,515,1.99,516,3.685,517,1.99,518,3.685,519,1.525,520,1.726,521,2.823,522,4.441,523,1.99,524,1.99,652,3.838,747,3.838,762,4.501,765,2.661,865,4.749,873,4.927,874,3.838,875,3.838,951,2.375,952,5.237,953,4.465,954,6.077,955,6.077,956,3.096,957,4.465,958,3.096,959,3.096,960,3.096,961,3.096,962,3.096,963,3.096,964,5.732,965,4.465,966,4.465,967,5.732,968,6.331,969,4.465,970,3.096,971,5.237,972,2.661,973,3.096,974,3.096,975,3.096,976,3.096,977,4.465,978,5.237,979,5.237,980,3.096,981,3.425,982,4.465,983,4.465,984,3.096,985,5.237,986,3.096,987,3.096,988,3.096]],["title/modules/ToolbarModule.html",[284,1.403,989,2.602]],["body/modules/ToolbarModule.html",[0,0.129,3,0.205,4,0.179,5,0.153,6,0.104,7,0.08,14,0.018,18,0.655,20,0.231,22,0.011,23,0.014,24,0.011,77,0.878,220,2.751,284,1.735,285,2.144,286,2.411,287,2.028,288,3.362,289,2.751,290,2.751,291,3.362,294,3.491,295,2.751,296,2.57,298,3.261,299,3.261,300,2.411,306,3.261,411,3.974,420,3.536,421,4.929,422,2.963,521,3.714,989,5.163,990,3.962,991,3.962,992,4.609,993,3.962,994,4.609,995,4.609]],["title/interfaces/Transformer.html",[83,0.785,996,2.602]],["body/interfaces/Transformer.html",[3,0.236,4,0.206,5,0.177,6,0.144,7,0.111,10,0.429,13,0.429,14,0.018,16,0.913,20,0.266,22,0.013,23,0.015,24,0.013,31,1.412,44,0.962,45,0.733,46,0.776,56,1.119,83,1.119,111,2.216,996,4.458,997,4.567,998,5.49,999,6.387,1000,6.847,1001,5.313,1002,5.313,1003,5.49]],["title/classes/User.html",[0,0.104,282,1.27]],["body/classes/User.html",[0,0.097,2,1.456,3,0.155,4,0.135,5,0.116,6,0.162,7,0.125,10,0.282,11,0.836,13,0.565,14,0.018,16,1.218,18,0.328,20,0.175,22,0.008,23,0.012,24,0.008,38,2.711,40,1.024,44,0.632,45,0.482,46,0.929,51,1.559,53,2.861,72,2.662,92,0.892,212,3.168,282,1.657,339,3.372,361,3.796,363,3.904,364,4.088,365,3.796,530,3.393,862,2.902,1004,2.678,1005,6.359,1006,6.359,1007,6.359,1008,5.466,1009,3.491,1010,3.491,1011,3.491,1012,3.491,1013,3.491,1014,3.491,1015,3.491,1016,3.491,1017,3.491,1018,3.491,1019,3.491,1020,3.491,1021,3.491,1022,3.491]],["title/injectables/UserEffects.html",[76,0.747,1023,2.859]],["body/injectables/UserEffects.html",[0,0.124,3,0.198,4,0.173,5,0.148,6,0.129,7,0.1,13,0.359,14,0.019,16,0.765,18,0.675,20,0.223,22,0.011,23,0.014,24,0.011,40,0.937,44,0.806,45,0.614,46,0.65,76,1.146,77,0.848,85,1.593,124,1.856,127,2.86,131,5.734,138,4.916,144,3.825,146,3.413,147,3.825,162,3.825,163,3.825,166,1.856,167,3.106,169,3.413,170,2.86,171,2.86,172,2.66,176,1.762,939,3.992,940,3.106,941,3.825,1023,4.387,1024,3.825,1025,4.45,1026,6.32,1027,4.656,1028,4.45,1029,5.719,1030,4.45,1031,4.45,1032,3.825,1033,4.45,1034,5.719,1035,4.45,1036,4.45,1037,4.45,1038,4.45]],["title/interfaces/UserProcessRole.html",[83,0.785,358,2.225]],["body/interfaces/UserProcessRole.html",[3,0.209,4,0.183,5,0.157,6,0.107,7,0.082,10,0.38,11,1.02,13,0.479,14,0.018,20,0.342,22,0.011,23,0.014,24,0.011,45,0.819,46,0.867,51,1.61,53,2.698,83,1.435,111,1.966,282,1.606,339,2.628,353,3.308,354,3.29,355,2.813,356,3.615,357,2.322,358,3.541,359,5.227,360,5.227,361,2.813,362,3.615,363,3.29,364,3.03,365,2.813,366,3.615,367,3.615]],["title/injectables/UserService.html",[76,0.747,1027,2.602]],["body/injectables/UserService.html",[0,0.08,3,0.128,4,0.112,5,0.096,6,0.148,7,0.114,10,0.233,11,0.729,13,0.477,14,0.019,16,1.097,18,0.6,20,0.144,22,0.007,23,0.01,24,0.007,31,0.937,38,2.363,40,0.607,44,1.003,45,0.765,46,0.81,51,1.058,53,2.445,56,1.3,64,1.72,68,2.73,76,0.849,77,0.549,85,1.032,89,1.768,92,1.673,106,1.42,107,1.508,115,1.42,120,3.562,124,1.202,126,1.517,129,2.577,166,1.202,170,2.724,171,1.853,172,2.746,176,1.99,188,3.308,212,2.908,247,2.909,262,1.853,279,2.724,282,2.278,283,1.72,333,2.211,353,3.726,357,1.42,365,3.686,393,3.643,862,3.81,1003,2.478,1027,2.958,1032,2.478,1039,2.211,1040,5.026,1041,4.238,1042,4.238,1043,2.882,1044,4.238,1045,4.238,1046,4.238,1047,2.882,1048,3.643,1049,4.238,1050,4.763,1051,4.238,1052,4.238,1053,5.542,1054,4.238,1055,4.238,1056,4.238,1057,4.238,1058,4.238,1059,2.882,1060,2.882,1061,2.882,1062,2.882,1063,2.882,1064,2.882,1065,2.882,1066,5.026,1067,2.882,1068,2.882,1069,2.882,1070,2.882,1071,2.882,1072,2.882,1073,2.882,1074,2.882,1075,2.882,1076,2.882]],["title/classes/UserTransformer.html",[0,0.104,335,2.602]],["body/classes/UserTransformer.html",[0,0.084,2,1.259,3,0.134,4,0.117,5,0.1,6,0.142,7,0.109,10,0.244,13,0.485,14,0.019,16,1.034,18,0.532,20,0.151,22,0.013,23,0.011,24,0.007,31,0.969,44,1.089,45,0.894,46,0.879,53,2.938,56,1.267,92,1.604,97,1.942,98,1.028,115,1.486,176,2.785,211,2.159,212,2.153,282,2.207,333,4.345,334,2.594,335,3.059,337,2.594,339,2.444,353,1.683,355,1.801,357,1.486,358,1.801,364,3.318,365,2.616,658,3.059,862,1.801,864,2.594,996,3.953,998,3.767,1008,5.171,1077,2.315,1078,4.383,1079,4.383,1080,4.383,1081,4.383,1082,4.383,1083,3.018,1084,4.383,1085,3.018,1086,4.383,1087,3.018,1088,4.383,1089,3.018,1090,4.383,1091,3.018,1092,3.018,1093,3.018,1094,3.018,1095,4.383,1096,3.018,1097,3.018,1098,3.018,1099,3.018,1100,3.018,1101,3.018,1102,3.018,1103,3.018,1104,3.018,1105,4.383,1106,3.018,1107,3.018,1108,3.018,1109,4.383,1110,4.383,1111,4.383,1112,4.383,1113,4.383,1114,4.383,1115,3.018,1116,3.018,1117,3.018,1118,3.018,1119,3.018,1120,3.018,1121,3.018,1122,3.018,1123,3.018]],["title/coverage.html",[1124,3.901]],["body/coverage.html",[0,0.169,1,1.064,5,0.059,6,0.173,7,0.133,8,1.368,9,1.368,13,0.144,14,0.019,22,0.004,23,0.007,24,0.004,25,1.146,26,2.379,34,1.283,42,0.878,48,1.146,76,1.217,78,0.785,79,0.994,83,1.306,98,0.608,108,1.146,110,1.146,112,2.984,116,1.368,119,2.036,121,4.586,122,1.368,123,1.245,125,1.533,126,0.638,127,1.875,128,2.036,129,0.829,133,0.933,172,0.829,177,1.368,178,1.368,180,1.368,181,1.368,188,1.064,190,0.933,196,1.064,218,4.253,231,1.368,232,1.146,234,2.036,235,1.368,238,1.245,277,1.368,282,0.994,304,1.368,308,2.237,312,1.368,319,1.368,335,1.245,353,0.994,354,2.984,355,1.064,358,1.064,368,1.368,369,1.368,370,1.368,371,2.036,376,1.356,408,0.878,409,0.878,410,0.878,414,1.245,416,1.245,418,1.245,424,1.368,430,1.741,438,1.146,439,1.368,440,2.379,441,1.064,476,1.533,477,1.966,483,1.368,484,1.368,519,0.878,521,0.878,525,1.146,526,1.368,527,1.064,553,2.036,554,2.036,595,1.368,601,1.875,602,2.036,608,1.368,642,1.368,643,2.036,716,1.368,717,1.368,718,1.368,722,1.245,723,1.368,742,1.368,779,1.245,780,4.097,850,2.036,856,1.368,862,1.064,863,1.533,865,1.245,866,1.368,867,1.368,879,1.368,926,1.146,927,1.245,932,1.368,933,1.368,935,3.29,939,1.245,940,1.245,942,1.368,943,1.368,951,1.368,981,2.237,996,1.245,997,1.533,1004,1.368,1023,1.368,1024,1.533,1027,1.245,1039,1.368,1077,1.368,1124,1.368,1125,1.783,1126,1.783,1127,1.533,1128,1.533,1129,2.507,1130,1.533,1131,6.239,1132,1.533,1133,1.533,1134,2.507,1135,1.533,1136,2.507,1137,1.533,1138,1.533,1139,1.533,1140,1.533,1141,1.533,1142,1.533,1143,1.533,1144,1.533,1145,1.533,1146,1.368,1147,4.275,1148,4.35,1149,4.591,1150,4.275,1151,2.507,1152,4.052,1153,2.507,1154,3.279,1155,6.814,1156,2.237,1157,1.533,1158,3.181,1159,1.533,1160,1.533,1161,2.507,1162,4.275,1163,1.368,1164,1.533,1165,1.783,1166,1.533,1167,1.533,1168,2.917,1169,1.783,1170,1.783,1171,3.279,1172,2.507,1173,1.533,1174,1.533,1175,1.533,1176,1.533,1177,1.533]],["title/dependencies.html",[286,2.345,1178,3.113]],["body/dependencies.html",[14,0.019,19,2.887,22,0.012,23,0.015,24,0.012,77,0.922,164,3.71,166,2.017,220,2.887,286,2.53,300,2.53,422,3.109,469,4.157,471,4.157,475,4.157,570,3.71,700,4.157,1179,4.836,1180,7.46,1181,4.836,1182,6.029,1183,4.836,1184,4.157,1185,4.836,1186,6.029,1187,5.182,1188,4.836,1189,6.569,1190,4.836,1191,4.836,1192,4.836,1193,4.836,1194,4.836,1195,4.836,1196,4.836,1197,4.836,1198,4.836,1199,4.836,1200,4.836]],["title/miscellaneous/enumerations.html",[1201,1.858,1202,3.853]],["body/miscellaneous/enumerations.html",[3,0.2,6,0.144,7,0.111,10,0.364,14,0.018,22,0.011,23,0.014,24,0.011,32,3.459,33,2.692,36,3.459,63,3.216,118,4.68,126,2.579,129,2.958,137,2.854,218,2.514,282,2.487,509,3.148,601,2.899,658,3.148,1154,3.459,1171,3.459,1201,2.692,1202,3.876,1203,5.769,1204,3.876,1205,3.876,1206,5.769,1207,5.769,1208,3.876,1209,4.51,1210,5.769,1211,4.51,1212,5.769,1213,4.51,1214,4.51,1215,4.51,1216,4.51,1217,4.51,1218,4.51,1219,4.51]],["title/miscellaneous/functions.html",[1201,1.858,1220,3.438]],["body/miscellaneous/functions.html",[0,0.082,4,0.167,5,0.198,6,0.154,7,0.119,10,0.237,13,0.237,14,0.018,18,0.276,22,0.007,23,0.01,24,0.007,29,1.638,44,1.279,45,0.997,46,1.032,51,0.905,53,1.702,56,1.488,110,1.889,112,2.051,115,1.447,122,3.899,196,2.566,202,2.526,284,1.106,304,3.297,308,4.29,338,3,357,1.447,428,2.254,430,2.566,482,3.118,530,3,724,2.526,779,2.051,780,2.254,781,4.369,792,2.526,800,2.526,825,2.526,832,2.526,834,2.526,835,3.695,836,3.695,839,2.526,840,3.695,844,2.526,845,3.695,850,2.051,856,3.297,935,2.051,936,4.807,948,3.695,1050,2.526,1128,2.526,1129,3.695,1130,4.369,1132,2.526,1133,4.369,1134,2.526,1135,3.695,1137,3.695,1140,3.695,1141,3.695,1142,3.695,1143,3.695,1144,3.695,1145,3.695,1146,2.254,1156,2.254,1163,2.254,1174,2.526,1175,3.695,1201,1.754,1220,2.254,1221,4.298,1222,2.938,1223,6.217,1224,4.298,1225,2.526,1226,2.938,1227,2.938,1228,2.526,1229,2.526,1230,2.938,1231,4.298,1232,4.298,1233,5.593,1234,4.298,1235,4.298,1236,4.298,1237,4.298,1238,4.298,1239,3.695,1240,4.298,1241,3.695,1242,4.298,1243,4.298,1244,5.593,1245,4.298,1246,2.938,1247,4.298,1248,4.298,1249,5.082,1250,2.938,1251,4.298,1252,2.938,1253,2.938,1254,2.938,1255,2.938,1256,2.938,1257,2.938,1258,2.938,1259,2.938,1260,2.938,1261,4.298,1262,4.298,1263,2.938,1264,2.938,1265,2.938]],["title/index.html",[10,0.251,1266,3.113,1267,3.113]],["body/index.html",[4,0.174,7,0.078,14,0.014,22,0.011,23,0.014,24,0.011,45,0.619,98,1.529,296,2.501,338,3.131,477,2.646,520,2.501,789,5.453,818,4.941,828,3.856,829,3.856,1048,3.856,1184,3.856,1239,3.856,1241,3.856,1268,4.485,1269,6.344,1270,4.485,1271,4.485,1272,5.749,1273,6.918,1274,7.197,1275,4.485,1276,4.485,1277,4.485,1278,4.485,1279,4.485,1280,4.485,1281,4.485,1282,4.485,1283,4.485,1284,6.344,1285,6.344,1286,4.485,1287,6.918,1288,4.485,1289,4.485,1290,4.485,1291,4.485,1292,4.485,1293,4.485,1294,4.485,1295,5.749,1296,4.41,1297,6.691,1298,3.441,1299,5.749,1300,5.749,1301,4.485,1302,6.691,1303,4.485,1304,4.485,1305,4.485,1306,6.344,1307,4.485,1308,4.485]],["title/modules.html",[285,2.365]],["body/modules.html",[14,0.016,22,0.013,23,0.016,24,0.013,209,3.448,285,2.495,403,3.744,411,2.991,466,4.115,772,3.744,923,3.744,989,3.744,1187,6.263,1309,7.286,1310,7.286,1311,7.477,1312,6.423,1313,6.423]],["title/overview.html",[1314,4.372]],["body/overview.html",[2,1.694,14,0.018,22,0.01,23,0.013,24,0.01,111,1.694,124,1.694,177,3.114,209,4.139,232,3.886,284,1.528,285,1.888,286,2.124,287,1.787,288,2.124,289,2.423,290,2.423,291,2.124,292,3.49,293,3.49,294,3.215,295,2.423,296,2.264,403,5.197,404,3.49,405,3.49,406,3.49,407,3.49,408,3.462,409,3.462,410,3.462,411,3.736,478,2.423,519,3.462,521,3.462,658,2.834,772,4.905,773,3.49,774,3.49,776,3.49,923,4.495,924,3.49,925,3.49,926,3.886,989,4.905,990,3.49,991,3.49,993,3.49,1314,3.49,1315,4.06,1316,4.06,1317,5.387,1318,4.06]],["title/unit-test.html",[1296,3.074,1298,3.074]],["body/unit-test.html",[5,0.075,6,0.166,7,0.128,8,1.739,9,1.739,14,0.019,22,0.005,23,0.009,24,0.005,26,1.458,34,1.555,98,0.773,180,1.739,181,1.739,218,3.938,234,2.467,235,1.739,277,1.739,312,4.664,319,1.739,369,1.739,370,1.739,371,2.467,376,1.643,414,1.583,416,1.583,418,1.583,424,1.739,439,1.739,440,2.791,483,1.739,484,1.739,526,1.739,527,1.354,553,1.583,554,1.583,595,1.739,601,1.458,602,1.583,642,1.739,643,2.467,717,1.739,718,1.739,723,1.739,742,1.739,850,2.467,866,1.739,867,1.739,879,1.739,927,1.583,932,1.739,933,1.739,951,1.739,972,1.949,981,5.575,1004,1.739,1039,1.739,1077,1.739,1124,1.739,1127,1.949,1131,3.038,1136,1.949,1138,4.839,1139,4.214,1146,1.739,1148,4.568,1149,1.949,1151,3.732,1152,3.038,1153,1.949,1163,1.739,1164,3.732,1166,4.568,1167,3.732,1176,1.949,1177,1.949,1220,1.739,1296,1.739,1298,1.739,1319,2.268,1320,2.268,1321,2.268,1322,2.268,1323,2.268,1324,3.534,1325,2.268,1326,2.268,1327,2.268,1328,2.268,1329,2.268,1330,2.268,1331,5.63,1332,6.247,1333,5.63,1334,3.534,1335,3.534,1336,3.534,1337,2.268,1338,2.268,1339,2.268,1340,2.268,1341,2.268,1342,2.268,1343,2.268,1344,2.268,1345,2.268,1346,2.268,1347,2.268,1348,3.534,1349,2.268,1350,2.268,1351,2.268,1352,3.534,1353,3.534,1354,2.268,1355,2.268,1356,2.268,1357,2.268,1358,2.268,1359,2.268,1360,3.534,1361,2.268,1362,2.268,1363,2.268,1364,2.268,1365,2.268,1366,2.268,1367,2.268,1368,2.268,1369,2.268,1370,3.534,1371,3.534,1372,3.534,1373,3.534,1374,4.903,1375,3.534,1376,2.268,1377,2.268,1378,2.268,1379,2.268,1380,2.268,1381,3.534,1382,2.268,1383,2.268,1384,2.268,1385,2.268,1386,2.268,1387,2.268,1388,2.268,1389,3.534,1390,2.268,1391,2.268,1392,3.534,1393,2.268,1394,2.268,1395,2.268,1396,2.268,1397,2.268,1398,2.268,1399,2.268,1400,2.268,1401,2.268,1402,2.268,1403,2.268,1404,2.268,1405,2.268,1406,2.268,1407,2.268,1408,2.268,1409,3.534,1410,2.268,1411,2.268,1412,3.534,1413,2.268,1414,2.268,1415,2.268,1416,2.268]],["title/miscellaneous/variables.html",[1201,1.858,1417,3.853]],["body/miscellaneous/variables.html",[6,0.148,7,0.114,10,0.231,13,0.475,14,0.019,22,0.007,23,0.01,24,0.007,33,3.901,51,0.888,72,1.26,89,2.088,110,3.218,112,1.998,113,4.237,114,2.196,115,3.219,116,3.235,117,2.206,118,1.998,119,4.562,120,1.84,126,1.51,127,3.55,128,3.855,129,1.961,136,2.763,137,2.763,196,4.383,282,2.312,438,1.84,525,1.84,601,1.84,602,2.943,608,3.235,935,1.998,937,3.625,939,2.943,940,2.943,942,3.235,943,3.235,944,2.461,945,3.625,946,3.625,947,2.461,1154,2.196,1156,2.196,1157,3.625,1158,2.461,1159,4.748,1160,3.625,1161,4.748,1171,2.196,1172,2.461,1173,4.303,1201,1.709,1204,4.748,1205,2.461,1208,4.748,1225,3.625,1228,2.461,1229,4.303,1417,2.461,1418,5.006,1419,4.217,1420,2.863,1421,2.863,1422,6.536,1423,2.863,1424,6.159,1425,2.863,1426,2.863,1427,2.863,1428,2.863,1429,2.863,1430,2.863,1431,2.863,1432,2.863,1433,5.006,1434,2.863,1435,4.217,1436,2.863,1437,2.863]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":218,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"components/LoginCardComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"unit-test.html":{}}}],["0.10.2",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["0/0",{"_index":1332,"title":{},"body":{"unit-test.html":{}}}],["0/1",{"_index":1131,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["0/10",{"_index":1151,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["0/11",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1323,"title":{},"body":{"unit-test.html":{}}}],["0/16",{"_index":1346,"title":{},"body":{"unit-test.html":{}}}],["0/2",{"_index":1148,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["0/3",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1149,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["0/7",{"_index":1152,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["0/8",{"_index":1167,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["0/9",{"_index":1153,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["1",{"_index":658,"title":{},"body":{"components/LoginCardComponent.html":{},"classes/UserTransformer.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)[0",{"_index":547,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["1.11.1",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1136,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["1/11",{"_index":1338,"title":{},"body":{"unit-test.html":{}}}],["1/12",{"_index":1325,"title":{},"body":{"unit-test.html":{}}}],["1/13",{"_index":1415,"title":{},"body":{"unit-test.html":{}}}],["1/2",{"_index":1334,"title":{},"body":{"unit-test.html":{}}}],["1/3",{"_index":1409,"title":{},"body":{"unit-test.html":{}}}],["1/4",{"_index":1166,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["1/5",{"_index":1139,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["1/6",{"_index":1355,"title":{},"body":{"unit-test.html":{}}}],["1/7",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1359,"title":{},"body":{"unit-test.html":{}}}],["10/14",{"_index":1375,"title":{},"body":{"unit-test.html":{}}}],["100",{"_index":981,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["10px",{"_index":654,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["11",{"_index":1317,"title":{},"body":{"overview.html":{}}}],["11/27",{"_index":1357,"title":{},"body":{"unit-test.html":{}}}],["117",{"_index":657,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["12",{"_index":1318,"title":{},"body":{"overview.html":{}}}],["12/12",{"_index":1399,"title":{},"body":{"unit-test.html":{}}}],["120px",{"_index":975,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["13",{"_index":1358,"title":{},"body":{"unit-test.html":{}}}],["14",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":983,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["16/23",{"_index":1388,"title":{},"body":{"unit-test.html":{}}}],["17",{"_index":1354,"title":{},"body":{"unit-test.html":{}}}],["17/18",{"_index":1383,"title":{},"body":{"unit-test.html":{}}}],["17/24",{"_index":1384,"title":{},"body":{"unit-test.html":{}}}],["18/19",{"_index":1378,"title":{},"body":{"unit-test.html":{}}}],["18/20",{"_index":1395,"title":{},"body":{"unit-test.html":{}}}],["1px",{"_index":769,"title":{},"body":{"components/PanelComponent.html":{}}}],["2",{"_index":1213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2.0.8",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1331,"title":{},"body":{"unit-test.html":{}}}],["2/4",{"_index":1392,"title":{},"body":{"unit-test.html":{}}}],["20",{"_index":1138,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["20px",{"_index":987,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["21",{"_index":1343,"title":{},"body":{"unit-test.html":{}}}],["21/23",{"_index":1391,"title":{},"body":{"unit-test.html":{}}}],["22",{"_index":1328,"title":{},"body":{"unit-test.html":{}}}],["23px",{"_index":988,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["24",{"_index":1341,"title":{},"body":{"unit-test.html":{}}}],["25",{"_index":312,"title":{},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{},"unit-test.html":{}}}],["25/27",{"_index":1373,"title":{},"body":{"unit-test.html":{}}}],["26",{"_index":1321,"title":{},"body":{"unit-test.html":{}}}],["26/27",{"_index":1401,"title":{},"body":{"unit-test.html":{}}}],["28",{"_index":1413,"title":{},"body":{"unit-test.html":{}}}],["3",{"_index":1214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3/12",{"_index":1412,"title":{},"body":{"unit-test.html":{}}}],["3/15",{"_index":1330,"title":{},"body":{"unit-test.html":{}}}],["3/3",{"_index":1360,"title":{},"body":{"unit-test.html":{}}}],["3/9",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1326,"title":{},"body":{"unit-test.html":{}}}],["33",{"_index":1164,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["33/34",{"_index":1397,"title":{},"body":{"unit-test.html":{}}}],["35",{"_index":1339,"title":{},"body":{"unit-test.html":{}}}],["36",{"_index":1335,"title":{},"body":{"unit-test.html":{}}}],["4",{"_index":509,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4/10",{"_index":1369,"title":{},"body":{"unit-test.html":{}}}],["4/18",{"_index":1329,"title":{},"body":{"unit-test.html":{}}}],["4/20",{"_index":1347,"title":{},"body":{"unit-test.html":{}}}],["4/4",{"_index":1381,"title":{},"body":{"unit-test.html":{}}}],["4/6",{"_index":1406,"title":{},"body":{"unit-test.html":{}}}],["4/7",{"_index":1351,"title":{},"body":{"unit-test.html":{}}}],["4/8",{"_index":1362,"title":{},"body":{"unit-test.html":{}}}],["4/9",{"_index":1366,"title":{},"body":{"unit-test.html":{}}}],["40",{"_index":1368,"title":{},"body":{"unit-test.html":{}}}],["401",{"_index":268,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["41",{"_index":1356,"title":{},"body":{"unit-test.html":{}}}],["44",{"_index":1365,"title":{},"body":{"unit-test.html":{}}}],["48px",{"_index":980,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["5",{"_index":1316,"title":{},"body":{"overview.html":{}}}],["5/24",{"_index":1344,"title":{},"body":{"unit-test.html":{}}}],["5/5",{"_index":1376,"title":{},"body":{"unit-test.html":{}}}],["5/6",{"_index":1411,"title":{},"body":{"unit-test.html":{}}}],["5/7",{"_index":1398,"title":{},"body":{"unit-test.html":{}}}],["5/8",{"_index":1405,"title":{},"body":{"unit-test.html":{}}}],["5/9",{"_index":1371,"title":{},"body":{"unit-test.html":{}}}],["50",{"_index":1333,"title":{},"body":{"unit-test.html":{}}}],["55",{"_index":1363,"title":{},"body":{"unit-test.html":{}}}],["56",{"_index":1370,"title":{},"body":{"unit-test.html":{}}}],["57",{"_index":1350,"title":{},"body":{"unit-test.html":{}}}],["6",{"_index":1215,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6.5.4",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":1361,"title":{},"body":{"unit-test.html":{}}}],["6/11",{"_index":1364,"title":{},"body":{"unit-test.html":{}}}],["6/12",{"_index":1367,"title":{},"body":{"unit-test.html":{}}}],["6/24",{"_index":1345,"title":{},"body":{"unit-test.html":{}}}],["6/6",{"_index":1389,"title":{},"body":{"unit-test.html":{}}}],["6/7",{"_index":1408,"title":{},"body":{"unit-test.html":{}}}],["6/8",{"_index":1386,"title":{},"body":{"unit-test.html":{}}}],["6/9",{"_index":1349,"title":{},"body":{"unit-test.html":{}}}],["60",{"_index":972,"title":{},"body":{"components/ToolbarComponent.html":{},"unit-test.html":{}}}],["63",{"_index":1404,"title":{},"body":{"unit-test.html":{}}}],["67",{"_index":1348,"title":{},"body":{"unit-test.html":{}}}],["7",{"_index":1315,"title":{},"body":{"overview.html":{}}}],["7/20",{"_index":1340,"title":{},"body":{"unit-test.html":{}}}],["7/21",{"_index":1416,"title":{},"body":{"unit-test.html":{}}}],["7/23",{"_index":1327,"title":{},"body":{"unit-test.html":{}}}],["7/27",{"_index":1322,"title":{},"body":{"unit-test.html":{}}}],["7/29",{"_index":1342,"title":{},"body":{"unit-test.html":{}}}],["7/9",{"_index":1353,"title":{},"body":{"unit-test.html":{}}}],["70",{"_index":1387,"title":{},"body":{"unit-test.html":{}}}],["71",{"_index":1374,"title":{},"body":{"unit-test.html":{}}}],["75",{"_index":1385,"title":{},"body":{"unit-test.html":{}}}],["78",{"_index":1352,"title":{},"body":{"unit-test.html":{}}}],["8",{"_index":1324,"title":{},"body":{"unit-test.html":{}}}],["8.1.0",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["8/29",{"_index":1414,"title":{},"body":{"unit-test.html":{}}}],["8/8",{"_index":1393,"title":{},"body":{"unit-test.html":{}}}],["8/9",{"_index":1380,"title":{},"body":{"unit-test.html":{}}}],["82",{"_index":1402,"title":{},"body":{"unit-test.html":{}}}],["83",{"_index":1410,"title":{},"body":{"unit-test.html":{}}}],["86",{"_index":1407,"title":{},"body":{"unit-test.html":{}}}],["87",{"_index":661,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["89",{"_index":1379,"title":{},"body":{"unit-test.html":{}}}],["9",{"_index":1337,"title":{},"body":{"unit-test.html":{}}}],["9.0.0",{"_index":1184,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.0.5",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["9/11",{"_index":1403,"title":{},"body":{"unit-test.html":{}}}],["9/25",{"_index":1336,"title":{},"body":{"unit-test.html":{}}}],["90",{"_index":1394,"title":{},"body":{"unit-test.html":{}}}],["91",{"_index":1390,"title":{},"body":{"unit-test.html":{}}}],["93",{"_index":1372,"title":{},"body":{"unit-test.html":{}}}],["94",{"_index":1382,"title":{},"body":{"unit-test.html":{}}}],["95",{"_index":1377,"title":{},"body":{"unit-test.html":{}}}],["96",{"_index":1400,"title":{},"body":{"unit-test.html":{}}}],["97",{"_index":1396,"title":{},"body":{"unit-test.html":{}}}],["_actions",{"_index":1029,"title":{},"body":{"injectables/UserEffects.html":{}}}],["_auth",{"_index":193,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{}}}],["_authenticated",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_authservice",{"_index":1045,"title":{},"body":{"injectables/UserService.html":{}}}],["_config",{"_index":189,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/SessionService.html":{}}}],["_http",{"_index":374,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["_log",{"_index":603,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["_loginurl",{"_index":182,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["_publishers",{"_index":604,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["_router",{"_index":191,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["_session",{"_index":240,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"injectables/SessionService.html":{}}}],["_sessionheader",{"_index":880,"title":{},"body":{"injectables/SessionService.html":{}}}],["_storage",{"_index":881,"title":{},"body":{"injectables/SessionService.html":{}}}],["_user",{"_index":1040,"title":{},"body":{"injectables/UserService.html":{}}}],["_userservice",{"_index":1026,"title":{},"body":{"injectables/UserEffects.html":{}}}],["a.authority",{"_index":1094,"title":{},"body":{"classes/UserTransformer.html":{}}}],["a11ymodule",{"_index":704,"title":{},"body":{"modules/MaterialModule.html":{}}}],["a:hover",{"_index":659,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["abstract",{"_index":21,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"classes/AuthenticationMethodService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"components/RegistrationCardComponent.html":{}}}],["abstractcard",{"_index":1,"title":{"classes/AbstractCard.html":{}},"body":{"classes/AbstractCard.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{},"coverage.html":{}}}],["abstractcard:4",{"_index":502,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["abstractloggerservice",{"_index":25,"title":{"classes/AbstractLoggerService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["abstractloggerservice:12",{"_index":640,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:13",{"_index":641,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:28",{"_index":637,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:32",{"_index":639,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:40",{"_index":635,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:44",{"_index":633,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:48",{"_index":638,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:52",{"_index":634,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:56",{"_index":636,"title":{},"body":{"injectables/LoggerService.html":{}}}],["accessors",{"_index":38,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationService.html":{},"classes/LogEntry.html":{},"injectables/LogPublisherService.html":{},"injectables/SessionService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["according",{"_index":573,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["account_circle",{"_index":964,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["action",{"_index":936,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["action.user.email",{"_index":155,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["actions",{"_index":131,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["actions/authentication.actions",{"_index":165,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["actions/user.actions",{"_index":941,"title":{},"body":{"interfaces/State.html":{},"injectables/UserEffects.html":{}}}],["activatedroutesnapshot",{"_index":195,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["actual_component",{"_index":524,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["added",{"_index":1252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adding",{"_index":1243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additional",{"_index":561,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["addprovidertomodule",{"_index":1135,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addprovidertomodule(source",{"_index":1230,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addsymboltongmodulemetadata",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addsymboltongmodulemetadata(source",{"_index":1246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["allows",{"_index":1240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":789,"title":{},"body":{"interfaces/ProjectInfo.html":{},"index.html":{}}}],["angular.json",{"_index":807,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["angular/animations",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":705,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/drag",{"_index":702,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/portal",{"_index":713,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/scrolling",{"_index":715,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/stepper",{"_index":707,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/table",{"_index":709,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/tree",{"_index":711,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/common",{"_index":300,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":252,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"modules/AuthenticationModule.html":{},"injectables/BasicAuthenticationService.html":{}}}],["angular/compiler",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":77,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":422,"title":{},"body":{"modules/CardModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":19,"title":{},"body":{"classes/AbstractCard.html":{},"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":700,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":164,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"dependencies.html":{}}}],["app",{"_index":520,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["application",{"_index":7,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["appname",{"_index":954,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["array",{"_index":53,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/Authority.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{}}}],["artifacts",{"_index":1288,"title":{},"body":{"index.html":{}}}],["atob(token).split(':')[1",{"_index":922,"title":{},"body":{"injectables/SessionService.html":{}}}],["attributes",{"_index":578,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["auth",{"_index":118,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/SessionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authenticated",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{}}}],["authentication.factory",{"_index":305,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.module",{"_index":210,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["authentication.service.ts",{"_index":371,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["authentication.service.ts:10",{"_index":373,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["authentication.service.ts:14",{"_index":720,"title":{},"body":{"injectables/NullAuthenticationService.html":{}}}],["authentication.service.ts:16",{"_index":375,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["authentication.service.ts:18",{"_index":721,"title":{},"body":{"injectables/NullAuthenticationService.html":{}}}],["authentication.service.ts:35",{"_index":377,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["authentication.service.ts:8",{"_index":719,"title":{},"body":{"injectables/NullAuthenticationService.html":{}}}],["authentication/authentication.service",{"_index":207,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{}}}],["authentication/basic",{"_index":370,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["authentication/models/credentials",{"_index":1032,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["authentication/null",{"_index":718,"title":{},"body":{"injectables/NullAuthenticationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["authentication/services/authentication/authentication.service",{"_index":1065,"title":{},"body":{"injectables/UserService.html":{}}}],["authentication_feature_key",{"_index":116,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationactiontypes",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authenticationactiontypes.login",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticationactiontypes.login_failure",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticationactiontypes.login_success",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticationactiontypes.logout",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticationeffects",{"_index":123,"title":{"injectables/AuthenticationEffects.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authenticationguardservice",{"_index":178,"title":{"guards/AuthenticationGuardService.html":{}},"body":{"guards/AuthenticationGuardService.html":{},"coverage.html":{}}}],["authenticationguardservice.login_component",{"_index":216,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["authenticationinterceptor",{"_index":232,"title":{"interceptors/AuthenticationInterceptor.html":{}},"body":{"interceptors/AuthenticationInterceptor.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationmethodservice",{"_index":133,"title":{"classes/AuthenticationMethodService.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{},"coverage.html":{}}}],["authenticationmethodservice:10",{"_index":379,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{}}}],["authenticationmethodservice:12",{"_index":380,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{}}}],["authenticationmodule",{"_index":209,"title":{"modules/AuthenticationModule.html":{}},"body":{"guards/AuthenticationGuardService.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationservice",{"_index":188,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["authenticationservicefactory",{"_index":304,"title":{},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authenticationservicefactory(config",{"_index":1260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authorities",{"_index":365,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["authorities.map(a",{"_index":1093,"title":{},"body":{"classes/UserTransformer.html":{}}}],["authority",{"_index":353,"title":{"interfaces/Authority.html":{}},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{}}}],["authority.some(a",{"_index":1068,"title":{},"body":{"injectables/UserService.html":{}}}],["authreducer",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":132,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authstate",{"_index":110,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authuser",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["automatically",{"_index":1279,"title":{},"body":{"index.html":{}}}],["available",{"_index":1313,"title":{},"body":{"modules.html":{}}}],["basic",{"_index":396,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["basicauthenticationservice",{"_index":368,"title":{"injectables/BasicAuthenticationService.html":{}},"body":{"injectables/BasicAuthenticationService.html":{},"coverage.html":{}}}],["behaviorsubject",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LogPublisherService.html":{},"injectables/SessionService.html":{}}}],["behaviorsubject(false",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(null",{"_index":624,"title":{},"body":{"injectables/LogPublisherService.html":{},"injectables/SessionService.html":{}}}],["beta.29",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":68,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":289,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}],["border",{"_index":768,"title":{},"body":{"components/PanelComponent.html":{}}}],["bottom",{"_index":653,"title":{},"body":{"components/LoginCardComponent.html":{},"components/PanelComponent.html":{}}}],["branches",{"_index":1319,"title":{},"body":{"unit-test.html":{}}}],["break",{"_index":458,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["browse",{"_index":1311,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1187,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["btoa(`${credentials.username}:${credentials.password",{"_index":397,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["btoa(sessionservice.session_token_storage_key",{"_index":917,"title":{},"body":{"injectables/SessionService.html":{}}}],["build",{"_index":1287,"title":{},"body":{"index.html":{}}}],["button",{"_index":986,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["calculated",{"_index":1055,"title":{},"body":{"injectables/UserService.html":{}}}],["canactivate",{"_index":185,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["canactivate(route",{"_index":194,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["card",{"_index":504,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["card.component",{"_index":415,"title":{},"body":{"modules/CardModule.html":{}}}],["card.component.html",{"_index":492,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["card.component.scss",{"_index":490,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["card.component.ts",{"_index":643,"title":{},"body":{"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["card.component.ts:11",{"_index":645,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["card.component.ts:12",{"_index":855,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["card.component.ts:13",{"_index":852,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["card.component.ts:21",{"_index":646,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["card.component.ts:24",{"_index":647,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["card.component.ts:25",{"_index":853,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["card.component.ts:28",{"_index":854,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["card.ts",{"_index":9,"title":{},"body":{"classes/AbstractCard.html":{},"coverage.html":{},"unit-test.html":{}}}],["card.ts:4",{"_index":17,"title":{},"body":{"classes/AbstractCard.html":{}}}],["card/forgotten",{"_index":418,"title":{},"body":{"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["card/login",{"_index":416,"title":{},"body":{"modules/CardModule.html":{},"components/LoginCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["card/password.validator.ts",{"_index":1163,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"unit-test.html":{}}}],["card/registration",{"_index":414,"title":{},"body":{"modules/CardModule.html":{},"components/RegistrationCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["cardmodule",{"_index":403,"title":{"modules/CardModule.html":{}},"body":{"modules/CardModule.html":{},"modules.html":{},"overview.html":{}}}],["case",{"_index":455,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["catch",{"_index":543,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["catcherror",{"_index":167,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/UserEffects.html":{}}}],["catcherror(error",{"_index":146,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/AuthenticationService.html":{},"injectables/UserEffects.html":{}}}],["catcherror(errorevent",{"_index":265,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["cdksteppermodule",{"_index":706,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktablemodule",{"_index":708,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktreemodule",{"_index":710,"title":{},"body":{"modules/MaterialModule.html":{}}}],["change",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["change.toadd",{"_index":849,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["changelanguage",{"_index":869,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["changelanguage(language",{"_index":871,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["changes",{"_index":845,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["check",{"_index":1048,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"classes/AuthenticationMethodService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"classes/NullStorage.html":{},"classes/User.html":{},"classes/UserTransformer.html":{}},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"classes/AuthenticationMethodService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"classes/NullStorage.html":{},"classes/User.html":{},"classes/UserTransformer.html":{},"overview.html":{}}}],["classifiedname",{"_index":1232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clear",{"_index":443,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"classes/NullStorage.html":{},"injectables/SessionService.html":{}}}],["clearall",{"_index":605,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["clearing",{"_index":272,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["cli",{"_index":1269,"title":{},"body":{"index.html":{}}}],["cluster_authenticationmodule",{"_index":292,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_providers",{"_index":293,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_cardmodule",{"_index":404,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_declarations",{"_index":405,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_exports",{"_index":407,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_imports",{"_index":406,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_panelmodule",{"_index":773,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_declarations",{"_index":774,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_exports",{"_index":776,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_imports",{"_index":775,"title":{},"body":{"modules/PanelModule.html":{}}}],["cluster_signupmodule",{"_index":924,"title":{},"body":{"modules/SignUpModule.html":{},"overview.html":{}}}],["cluster_signupmodule_providers",{"_index":925,"title":{},"body":{"modules/SignUpModule.html":{},"overview.html":{}}}],["cluster_toolbarmodule",{"_index":990,"title":{},"body":{"modules/ToolbarModule.html":{},"overview.html":{}}}],["cluster_toolbarmodule_declarations",{"_index":991,"title":{},"body":{"modules/ToolbarModule.html":{},"overview.html":{}}}],["cluster_toolbarmodule_exports",{"_index":993,"title":{},"body":{"modules/ToolbarModule.html":{},"overview.html":{}}}],["cluster_toolbarmodule_imports",{"_index":992,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["code",{"_index":1282,"title":{},"body":{"index.html":{}}}],["color",{"_index":655,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["commonmodule",{"_index":299,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{}}}],["component",{"_index":477,"title":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":517,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["components",{"_index":478,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["config",{"_index":29,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/functions.html":{}}}],["configuration",{"_index":430,"title":{},"body":{"classes/ConfigurationService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/ProjectInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configuration/configuration.service",{"_index":206,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/SessionService.html":{}}}],["configuration/interfaces/schema",{"_index":208,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["configurationservice",{"_index":190,"title":{"classes/ConfigurationService.html":{}},"body":{"guards/AuthenticationGuardService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"injectables/SessionService.html":{},"coverage.html":{}}}],["confirmpassword",{"_index":858,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["console.clear",{"_index":452,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.debug('authentication",{"_index":269,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["console.debug('log",{"_index":548,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["console.debug(entry.tostring",{"_index":457,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.error(e",{"_index":551,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["console.error(entry.tostring",{"_index":460,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.error(error",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.info(entry.tostring",{"_index":462,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.log(action.error",{"_index":151,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log(action.type",{"_index":159,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log(entry.tostring",{"_index":465,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.log(form",{"_index":508,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["console.warn(entry.tostring",{"_index":464,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["consolelogpublisher",{"_index":438,"title":{"classes/ConsoleLogPublisher.html":{}},"body":{"classes/ConsoleLogPublisher.html":{},"injectables/LogPublisherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":97,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"guards/AuthenticationGuardService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"interfaces/ProjectInfo.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"classes/UserTransformer.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/SignUpService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(_actions",{"_index":1025,"title":{},"body":{"injectables/UserEffects.html":{}}}],["constructor(_auth",{"_index":187,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{}}}],["constructor(_authservice",{"_index":1043,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(_config",{"_index":887,"title":{},"body":{"injectables/SessionService.html":{}}}],["constructor(_http",{"_index":372,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["constructor(_session",{"_index":237,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["constructor(actions",{"_index":130,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["constructor(configuration",{"_index":427,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["constructor(fb",{"_index":495,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["constructor(id",{"_index":1009,"title":{},"body":{"classes/User.html":{}}}],["constructor(level",{"_index":558,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["constructor(private",{"_index":85,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"components/ForgottenPasswordCardComponent.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SessionService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":963,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["constructor(publisherservice",{"_index":41,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["constructor(selectlanguageservice",{"_index":956,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["content",{"_index":835,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["control",{"_index":1264,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copied",{"_index":1235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["covalent/core",{"_index":475,"title":{},"body":{"modules/CovalentModule.html":{},"dependencies.html":{}}}],["covalent/highlight",{"_index":469,"title":{},"body":{"modules/CovalentModule.html":{},"dependencies.html":{}}}],["covalent/markdown",{"_index":471,"title":{},"body":{"modules/CovalentModule.html":{},"dependencies.html":{}}}],["covalentcommonmodule",{"_index":472,"title":{},"body":{"modules/CovalentModule.html":{}}}],["covalenthighlightmodule",{"_index":468,"title":{},"body":{"modules/CovalentModule.html":{}}}],["covalentlayoutmodule",{"_index":473,"title":{},"body":{"modules/CovalentModule.html":{}}}],["covalentmarkdownmodule",{"_index":470,"title":{},"body":{"modules/CovalentModule.html":{}}}],["covalentmodule",{"_index":466,"title":{"modules/CovalentModule.html":{}},"body":{"modules/CovalentModule.html":{},"modules.html":{}}}],["covalentstepsmodule",{"_index":474,"title":{},"body":{"modules/CovalentModule.html":{}}}],["coverage",{"_index":1124,"title":{"coverage.html":{}},"body":{"coverage.html":{},"unit-test.html":{}}}],["createaction",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createchangesrecorder",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createchangesrecorder(tree",{"_index":844,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["createconfigurationcopy",{"_index":425,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["createconfigurationservice",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createeffect",{"_index":138,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["createreducer",{"_index":937,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":172,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"interfaces/Credentials.html":{},"injectables/NullAuthenticationService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["credentials).pipe",{"_index":143,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["credentials.password",{"_index":389,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["credentials.password.trim",{"_index":392,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["credentials.username",{"_index":388,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["credentials.username.trim",{"_index":391,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["cursor",{"_index":662,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["date",{"_index":555,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["debug",{"_index":32,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":50,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["declarations",{"_index":288,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}],["default",{"_index":136,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"miscellaneous/variables.html":{}}}],["default_key",{"_index":528,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["defaults",{"_index":585,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/SignUpService.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["deleted",{"_index":545,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["deleted.date.toisostring",{"_index":549,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["dependencies",{"_index":286,"title":{"dependencies.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":318,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["description",{"_index":357,"title":{},"body":{"interfaces/Authority.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/ProcessRole.html":{},"interfaces/Role.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{}}}],["dev",{"_index":1276,"title":{},"body":{"index.html":{}}}],["development",{"_index":1271,"title":{},"body":{"index.html":{}}}],["devkit/core",{"_index":796,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["devkit/schematics",{"_index":790,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["devkit/schematics/src/tree/interface",{"_index":793,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["directive",{"_index":515,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["directives",{"_index":523,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1286,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1291,"title":{},"body":{"index.html":{}}}],["dist",{"_index":1290,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":481,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["dragdropmodule",{"_index":701,"title":{},"body":{"modules/MaterialModule.html":{}}}],["drop",{"_index":703,"title":{},"body":{"modules/MaterialModule.html":{}}}],["dynamic",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":544,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["e2e",{"_index":1303,"title":{},"body":{"index.html":{}}}],["effectsmodule.forfeature([authenticationeffects",{"_index":309,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["eg",{"_index":1253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["element",{"_index":514,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["email",{"_index":361,"title":{},"body":{"interfaces/Authority.html":{},"components/ForgottenPasswordCardComponent.html":{},"interfaces/ProcessRole.html":{},"components/RegistrationCardComponent.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{}}}],["emitcollapse",{"_index":745,"title":{},"body":{"components/PanelComponent.html":{}}}],["emitexpand",{"_index":746,"title":{},"body":{"components/PanelComponent.html":{}}}],["empty",{"_index":393,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"injectables/UserService.html":{}}}],["encoding",{"_index":840,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["end",{"_index":1302,"title":{},"body":{"index.html":{}}}],["engine",{"_index":829,"title":{},"body":{"interfaces/ProjectInfo.html":{},"index.html":{}}}],["engine/schematics/create",{"_index":1128,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["engine/schematics/initialize",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["engine/schematics/modifiedlibraryfunctions.ts",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["engine/schematics/utilityfunctions.ts",{"_index":780,"title":{},"body":{"interfaces/ProjectInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["engine/src/lib/authentication/authentication.factory.ts",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/authentication.module.ts",{"_index":297,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["engine/src/lib/authentication/models/credentials.ts",{"_index":476,"title":{},"body":{"interfaces/Credentials.html":{},"coverage.html":{}}}],["engine/src/lib/authentication/models/transformer.ts",{"_index":997,"title":{},"body":{"interfaces/Transformer.html":{},"coverage.html":{}}}],["engine/src/lib/authentication/models/transformer.ts:2",{"_index":1001,"title":{},"body":{"interfaces/Transformer.html":{}}}],["engine/src/lib/authentication/models/user.transformer.ts",{"_index":1077,"title":{},"body":{"classes/UserTransformer.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/models/user.transformer.ts:12",{"_index":1089,"title":{},"body":{"classes/UserTransformer.html":{}}}],["engine/src/lib/authentication/models/user.transformer.ts:20",{"_index":1091,"title":{},"body":{"classes/UserTransformer.html":{}}}],["engine/src/lib/authentication/models/user.transformer.ts:28",{"_index":1083,"title":{},"body":{"classes/UserTransformer.html":{}}}],["engine/src/lib/authentication/models/user.transformer.ts:47",{"_index":1085,"title":{},"body":{"classes/UserTransformer.html":{}}}],["engine/src/lib/authentication/models/user.transformer.ts:8",{"_index":1087,"title":{},"body":{"classes/UserTransformer.html":{}}}],["engine/src/lib/authentication/models/user.ts",{"_index":354,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{},"coverage.html":{}}}],["engine/src/lib/authentication/services/authentication",{"_index":234,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts:16",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts:18",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts:24",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts:37",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts:47",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts:51",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["engine/src/lib/authentication/services/guard/authentication",{"_index":180,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/services/methods/basic",{"_index":369,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/services/methods/null",{"_index":717,"title":{},"body":{"injectables/NullAuthenticationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts",{"_index":723,"title":{},"body":{"classes/NullStorage.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:1",{"_index":741,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:13",{"_index":735,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:17",{"_index":737,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:20",{"_index":739,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:4",{"_index":730,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:6",{"_index":731,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:9",{"_index":733,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts",{"_index":879,"title":{},"body":{"injectables/SessionService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:11",{"_index":896,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:12",{"_index":894,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:14",{"_index":891,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:15",{"_index":892,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:16",{"_index":888,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:27",{"_index":898,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:31",{"_index":902,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:37",{"_index":900,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:41",{"_index":904,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:45",{"_index":889,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:50",{"_index":890,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/sign",{"_index":927,"title":{},"body":{"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/store/actions/authentication.actions.ts",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/authentication/store/authentication.state.ts",{"_index":112,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/authentication/store/effects/authentication.effects.ts",{"_index":125,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"coverage.html":{}}}],["engine/src/lib/authentication/store/effects/authentication.effects.ts:11",{"_index":135,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["engine/src/lib/authentication/store/effects/authentication.effects.ts:16",{"_index":148,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["engine/src/lib/authentication/store/effects/authentication.effects.ts:26",{"_index":157,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["engine/src/lib/authentication/store/effects/authentication.effects.ts:35",{"_index":152,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["engine/src/lib/authentication/store/effects/authentication.effects.ts:42",{"_index":161,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["engine/src/lib/authentication/store/reducers/authentication.redurcers.ts",{"_index":1156,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/authentication/store/selectors/authentication.selectors.ts",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/card/abstract",{"_index":8,"title":{},"body":{"classes/AbstractCard.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/card/card.module.ts",{"_index":412,"title":{},"body":{"modules/CardModule.html":{}}}],["engine/src/lib/card/forgotten",{"_index":483,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/card/login",{"_index":642,"title":{},"body":{"components/LoginCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/card/registration",{"_index":850,"title":{},"body":{"components/RegistrationCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"unit-test.html":{}}}],["engine/src/lib/configuration/configuration.service.ts",{"_index":424,"title":{},"body":{"classes/ConfigurationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/configuration/configuration.service.ts:13",{"_index":432,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["engine/src/lib/configuration/configuration.service.ts:17",{"_index":431,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["engine/src/lib/configuration/configuration.service.ts:4",{"_index":429,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["engine/src/lib/configuration/configuration.service.ts:9",{"_index":433,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["engine/src/lib/covalent/covalent.module.ts",{"_index":467,"title":{},"body":{"modules/CovalentModule.html":{}}}],["engine/src/lib/logger/models/log",{"_index":553,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/publishers/console",{"_index":439,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/publishers/local",{"_index":526,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/publishers/log",{"_index":595,"title":{},"body":{"classes/LogPublisher.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/services/log",{"_index":601,"title":{},"body":{"injectables/LogPublisherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/logger/services/logger.service.ts",{"_index":26,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:12",{"_index":49,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:13",{"_index":43,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:24",{"_index":75,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:28",{"_index":67,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:32",{"_index":73,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:40",{"_index":61,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:44",{"_index":54,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:48",{"_index":70,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:52",{"_index":59,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:56",{"_index":65,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:64",{"_index":632,"title":{},"body":{"injectables/LoggerService.html":{}}}],["engine/src/lib/material/material.module.ts",{"_index":664,"title":{},"body":{"modules/MaterialModule.html":{}}}],["engine/src/lib/panel/panel.component.ts",{"_index":742,"title":{},"body":{"components/PanelComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/panel/panel.component.ts:10",{"_index":754,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.component.ts:11",{"_index":757,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.component.ts:12",{"_index":756,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.component.ts:13",{"_index":753,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.component.ts:18",{"_index":761,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.component.ts:21",{"_index":760,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.component.ts:25",{"_index":759,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.module.ts",{"_index":777,"title":{},"body":{"modules/PanelModule.html":{}}}],["engine/src/lib/toolbar/select",{"_index":866,"title":{},"body":{"injectables/SelectLanguageService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/toolbar/toolbar.component.ts",{"_index":951,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/toolbar/toolbar.component.ts:12",{"_index":958,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["engine/src/lib/toolbar/toolbar.component.ts:15",{"_index":957,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["engine/src/lib/toolbar/toolbar.component.ts:17",{"_index":960,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["engine/src/lib/toolbar/toolbar.component.ts:20",{"_index":959,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["engine/src/lib/toolbar/toolbar.module.ts",{"_index":994,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["engine/src/lib/user/models/role.ts",{"_index":863,"title":{},"body":{"interfaces/Role.html":{},"coverage.html":{}}}],["engine/src/lib/user/models/user.ts",{"_index":1004,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/user/models/user.ts:10",{"_index":1018,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:11",{"_index":1014,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:12",{"_index":1017,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:15",{"_index":1020,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:3",{"_index":1010,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:5",{"_index":1015,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:6",{"_index":1012,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:7",{"_index":1013,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:8",{"_index":1016,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:9",{"_index":1011,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/services/user.service.ts",{"_index":1039,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/user/services/user.service.ts:14",{"_index":1044,"title":{},"body":{"injectables/UserService.html":{}}}],["engine/src/lib/user/services/user.service.ts:19",{"_index":1063,"title":{},"body":{"injectables/UserService.html":{}}}],["engine/src/lib/user/services/user.service.ts:29",{"_index":1047,"title":{},"body":{"injectables/UserService.html":{}}}],["engine/src/lib/user/services/user.service.ts:40",{"_index":1059,"title":{},"body":{"injectables/UserService.html":{}}}],["engine/src/lib/user/services/user.service.ts:47",{"_index":1060,"title":{},"body":{"injectables/UserService.html":{}}}],["engine/src/lib/user/services/user.service.ts:53",{"_index":1061,"title":{},"body":{"injectables/UserService.html":{}}}],["engine/src/lib/user/store/actions/user.actions.ts",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/user/store/effects/user.effects.ts",{"_index":1024,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{}}}],["engine/src/lib/user/store/effects/user.effects.ts:10",{"_index":1028,"title":{},"body":{"injectables/UserEffects.html":{}}}],["engine/src/lib/user/store/reducers/user.reducers.ts",{"_index":935,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/user/store/selectors/user.selectors.ts",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["engine/src/scripts/utils.ts",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["english",{"_index":875,"title":{},"body":{"injectables/SelectLanguageService.html":{},"components/ToolbarComponent.html":{}}}],["entry",{"_index":81,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["entry.level",{"_index":454,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["entry.ts",{"_index":554,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"coverage.html":{},"unit-test.html":{}}}],["entry.ts:16",{"_index":563,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:17",{"_index":564,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:18",{"_index":565,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:19",{"_index":566,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:20",{"_index":559,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:42",{"_index":577,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:50",{"_index":567,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:61",{"_index":571,"title":{},"body":{"classes/LogEntry.html":{}}}],["enumerations",{"_index":1202,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":33,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/LoggerService.html":{},"interfaces/State.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('login",{"_index":386,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["error('logout",{"_index":400,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["error('user\\'s",{"_index":390,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["error(e.message",{"_index":552,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["error(message",{"_index":58,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["errorevent",{"_index":266,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["errorevent.status",{"_index":267,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["event",{"_index":261,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["event.headers.get(this._session.sessionheader",{"_index":264,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["event.headers.has(this._session.sessionheader",{"_index":263,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["eventemitter",{"_index":758,"title":{},"body":{"components/PanelComponent.html":{}}}],["exact",{"_index":1254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["execute",{"_index":1299,"title":{},"body":{"index.html":{}}}],["exhaustmap",{"_index":168,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["exhaustmap(action",{"_index":141,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["exit_to_app",{"_index":966,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["expansion",{"_index":766,"title":{},"body":{"components/PanelComponent.html":{}}}],["expansiondisabled",{"_index":748,"title":{},"body":{"components/PanelComponent.html":{}}}],["experimental",{"_index":794,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["experimental.workspace.workspaceschema",{"_index":810,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["export",{"_index":20,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["exportrecorder",{"_index":846,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["exportrecorder.insertleft(change.pos",{"_index":848,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["exports",{"_index":291,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}],["extends",{"_index":84,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"components/RegistrationCardComponent.html":{}}}],["extra",{"_index":562,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["failure",{"_index":1212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":120,"title":{},"body":{"interfaces/AuthState.html":{},"components/PanelComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":498,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["fb.group",{"_index":506,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"unit-test.html":{}}}],["file.content.tostring(encoding",{"_index":843,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["fileentry",{"_index":791,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["fileentrytotssource",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fileentrytotssource(file",{"_index":839,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["files",{"_index":1281,"title":{},"body":{"index.html":{}}}],["find",{"_index":804,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["firstname",{"_index":1005,"title":{},"body":{"classes/User.html":{}}}],["flag",{"_index":1293,"title":{},"body":{"index.html":{}}}],["flexlayoutmodule",{"_index":421,"title":{},"body":{"modules/CardModule.html":{},"modules/MaterialModule.html":{},"modules/ToolbarModule.html":{}}}],["flexmodule",{"_index":778,"title":{},"body":{"modules/PanelModule.html":{}}}],["font",{"_index":978,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["forgotten",{"_index":417,"title":{},"body":{"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["forgottenpasswordcardcomponent",{"_index":408,"title":{"components/ForgottenPasswordCardComponent.html":{}},"body":{"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":12,"title":{},"body":{"classes/AbstractCard.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["formbuilder",{"_index":496,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["formgroup",{"_index":15,"title":{},"body":{"classes/AbstractCard.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["freedom",{"_index":1242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fullname",{"_index":363,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{}}}],["function",{"_index":121,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/ProjectInfo.html":{},"interfaces/State.html":{},"coverage.html":{}}}],["functions",{"_index":1220,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"unit-test.html":{}}}],["further",{"_index":1305,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1284,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1268,"title":{},"body":{"index.html":{}}}],["getasync",{"_index":426,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["getauthenticated",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getfullname",{"_index":1019,"title":{},"body":{"classes/User.html":{}}}],["getinitial",{"_index":122,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getitem",{"_index":725,"title":{},"body":{"classes/NullStorage.html":{}}}],["getitem(key",{"_index":732,"title":{},"body":{"classes/NullStorage.html":{}}}],["getlevel",{"_index":74,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["getlevelstring",{"_index":576,"title":{},"body":{"classes/LogEntry.html":{}}}],["getnaeconfiguration",{"_index":1142,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnaeconfiguration(tree",{"_index":832,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["getnaeconfigurationstring",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnaeconfigurationstring(tree",{"_index":825,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["getprojectinfo",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getprojectinfo(tree",{"_index":800,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["getpublishers",{"_index":616,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["getsession",{"_index":897,"title":{},"body":{"injectables/SessionService.html":{}}}],["getsessionheader",{"_index":903,"title":{},"body":{"injectables/SessionService.html":{}}}],["getsessiontoken",{"_index":899,"title":{},"body":{"injectables/SessionService.html":{}}}],["getting",{"_index":1266,"title":{"index.html":{}},"body":{}}],["gettssource",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettssource(file.path",{"_index":842,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["gettssource(path",{"_index":834,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["getuser",{"_index":1062,"title":{},"body":{"injectables/UserService.html":{}}}],["go",{"_index":1307,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1312,"title":{},"body":{"modules.html":{}}}],["groups",{"_index":364,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"classes/UserTransformer.html":{}}}],["guard",{"_index":177,"title":{"guards/AuthenticationGuardService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service.ts",{"_index":181,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"coverage.html":{},"unit-test.html":{}}}],["guard.service.ts:15",{"_index":192,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["guard.service.ts:24",{"_index":204,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["guard.service.ts:44",{"_index":198,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["guards",{"_index":179,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["hammerjs",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["hasauthority",{"_index":1041,"title":{},"body":{"injectables/UserService.html":{}}}],["hasauthority(authority",{"_index":1046,"title":{},"body":{"injectables/UserService.html":{}}}],["hasrole",{"_index":1042,"title":{},"body":{"injectables/UserService.html":{}}}],["hasrole(role",{"_index":1058,"title":{},"body":{"injectables/UserService.html":{}}}],["header",{"_index":767,"title":{},"body":{"components/PanelComponent.html":{}}}],["headers",{"_index":257,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"injectables/BasicAuthenticationService.html":{}}}],["height",{"_index":971,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["help",{"_index":1306,"title":{},"body":{"index.html":{}}}],["hidepassword",{"_index":644,"title":{},"body":{"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["hiderepeatpassword",{"_index":851,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["html",{"_index":513,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["http",{"_index":1261,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http://localhost:4200",{"_index":1278,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":301,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["httpclient",{"_index":302,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/BasicAuthenticationService.html":{}}}],["httpclientmodule",{"_index":303,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["httperrorresponse",{"_index":248,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["httpevent",{"_index":249,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["httphandler",{"_index":244,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["httpheaders",{"_index":381,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["httpheaders().set('authorization",{"_index":395,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["httpinterceptor",{"_index":250,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["httprequest",{"_index":242,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["httpresponse",{"_index":251,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["icon",{"_index":977,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["icon.main",{"_index":976,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["id",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/Role.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"classes/UserTransformer.html":{}}}],["identification_attribute",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["identifier",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["img",{"_index":973,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["implements",{"_index":211,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"classes/UserTransformer.html":{}}}],["import",{"_index":18,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{}}}],["importpath",{"_index":1233,"title":{},"body":{"miscellaneous/functions.html":{}}}],["imports",{"_index":306,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{}}}],["include",{"_index":574,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["included",{"_index":1256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["includeloglevel",{"_index":581,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":740,"title":{},"body":{"classes/NullStorage.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/enumerations.html":{}}}],["info(message",{"_index":60,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["inherited",{"_index":378,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"components/RegistrationCardComponent.html":{}}}],["initializeconfigurationservice",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initialstate",{"_index":119,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":76,"title":{"injectables/AuthenticationEffects.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"injectables/NullAuthenticationService.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/SignUpService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/NullAuthenticationService.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/SignUpService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":124,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"injectables/NullAuthenticationService.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/SignUpService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":762,"title":{},"body":{"components/PanelComponent.html":{},"components/ToolbarComponent.html":{}}}],["inputs",{"_index":747,"title":{},"body":{"components/PanelComponent.html":{},"components/ToolbarComponent.html":{}}}],["insertchange",{"_index":798,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["insertedtext",{"_index":1244,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instance",{"_index":621,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["instanceof",{"_index":262,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/ProjectInfo.html":{},"injectables/UserService.html":{}}}],["instead",{"_index":1259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["intercept",{"_index":236,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["intercept(req",{"_index":241,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["interceptor",{"_index":231,"title":{"interceptors/AuthenticationInterceptor.html":{}},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":235,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"coverage.html":{},"unit-test.html":{}}}],["interceptor.ts:14",{"_index":245,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["interceptor.ts:9",{"_index":239,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["interceptors",{"_index":233,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["interface",{"_index":83,"title":{"interfaces/AuthState.html":{},"interfaces/Authority.html":{},"interfaces/Credentials.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"interfaces/Role.html":{},"interfaces/State.html":{},"interfaces/Transformer.html":{},"interfaces/UserProcessRole.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"interfaces/Authority.html":{},"interfaces/Credentials.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"interfaces/Role.html":{},"interfaces/State.html":{},"interfaces/Transformer.html":{},"interfaces/UserProcessRole.html":{},"coverage.html":{}}}],["interfaces",{"_index":111,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/Authority.html":{},"interfaces/Credentials.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"interfaces/Role.html":{},"interfaces/State.html":{},"interfaces/Transformer.html":{},"interfaces/UserProcessRole.html":{},"overview.html":{}}}],["interfaces/schema",{"_index":434,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["intersection",{"_index":1053,"title":{},"body":{"injectables/UserService.html":{}}}],["invalid",{"_index":271,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["isauthenticated",{"_index":113,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["isn't",{"_index":1056,"title":{},"body":{"injectables/UserService.html":{}}}],["json",{"_index":570,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"dependencies.html":{}}}],["json.parse(getnaeconfigurationstring(tree",{"_index":833,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["json.parse(json.stringify(this.configuration",{"_index":437,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["json.parse(logstring",{"_index":538,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["json.parse(workspacecontent",{"_index":811,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["json.stringify(log",{"_index":542,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["json.stringify(this.params",{"_index":588,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["karma",{"_index":1301,"title":{},"body":{"index.html":{}}}],["key",{"_index":726,"title":{},"body":{"classes/NullStorage.html":{},"injectables/SelectLanguageService.html":{}}}],["key(index",{"_index":734,"title":{},"body":{"classes/NullStorage.html":{}}}],["keyboard_arrow_left",{"_index":967,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["language",{"_index":873,"title":{},"body":{"injectables/SelectLanguageService.html":{},"components/ToolbarComponent.html":{}}}],["language.service",{"_index":962,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["language.service.ts",{"_index":867,"title":{},"body":{"injectables/SelectLanguageService.html":{},"coverage.html":{},"unit-test.html":{}}}],["language.service.ts:11",{"_index":870,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["language.service.ts:16",{"_index":872,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["language.service.ts:8",{"_index":876,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["languages",{"_index":868,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["lastname",{"_index":1006,"title":{},"body":{"classes/User.html":{}}}],["layout",{"_index":220,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"modules/CardModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["layout.name",{"_index":223,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["legend",{"_index":287,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"components/RegistrationCardComponent.html":{},"modules/SignUpModule.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}],["length",{"_index":724,"title":{},"body":{"classes/NullStorage.html":{},"miscellaneous/functions.html":{}}}],["letters",{"_index":510,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["level",{"_index":39,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["level.ts",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["levelstring",{"_index":557,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["lib",{"_index":822,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["lines",{"_index":1320,"title":{},"body":{"unit-test.html":{}}}],["literal",{"_index":202,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"miscellaneous/functions.html":{}}}],["load",{"_index":884,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage",{"_index":550,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"injectables/SessionService.html":{}}}],["localstorage.getitem(this.location",{"_index":537,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstorage.removeitem(this.location",{"_index":535,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstorage.setitem(this.location",{"_index":541,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstoragelogpublisher",{"_index":525,"title":{"classes/LocalStorageLogPublisher.html":{}},"body":{"classes/LocalStorageLogPublisher.html":{},"injectables/LogPublisherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localstoragelogpublisher.default_key",{"_index":534,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["location",{"_index":442,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["log",{"_index":34,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"unit-test.html":{}}}],["log(entry",{"_index":447,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["log(level",{"_index":62,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["log.push(entry",{"_index":539,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["log.splice(0",{"_index":546,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["logentry",{"_index":78,"title":{"classes/LogEntry.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logentry(level",{"_index":99,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["logentryconfiguration",{"_index":79,"title":{"interfaces/LogEntryConfiguration.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logged",{"_index":984,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["loggeduser",{"_index":955,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["loggerconfiguration",{"_index":48,"title":{"interfaces/LoggerConfiguration.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["loggerservice",{"_index":108,"title":{"injectables/LoggerService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["login",{"_index":126,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["login(credentials",{"_index":279,"title":{},"body":{"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{},"injectables/UserService.html":{}}}],["login_component",{"_index":184,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["login_failure",{"_index":1211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["login_success",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logincardcomponent",{"_index":409,"title":{"components/LoginCardComponent.html":{}},"body":{"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginfailure",{"_index":127,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interfaces/State.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginsuccess",{"_index":128,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginsuccess(user",{"_index":145,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["loginuser",{"_index":939,"title":{},"body":{"interfaces/State.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginuser({user",{"_index":1038,"title":{},"body":{"injectables/UserEffects.html":{}}}],["loginview",{"_index":213,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["logkey",{"_index":529,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["loglevel",{"_index":63,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.all",{"_index":91,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["loglevel.debug",{"_index":456,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel.error",{"_index":459,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel.info",{"_index":461,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel.off",{"_index":95,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["loglevel.warn",{"_index":463,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel[this.level.tostring",{"_index":586,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["logo",{"_index":969,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["logonly",{"_index":313,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["logout",{"_index":129,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["logoutuser",{"_index":940,"title":{},"body":{"interfaces/State.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logpublisher",{"_index":441,"title":{"classes/LogPublisher.html":{}},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"coverage.html":{}}}],["logpublisher:18",{"_index":450,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["logpublisher:20",{"_index":449,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["logpublisher:6",{"_index":445,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["logpublisherservice",{"_index":42,"title":{"injectables/LogPublisherService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logpublisherservice.instance",{"_index":622,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["logstring",{"_index":536,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["logwithdate",{"_index":88,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["main",{"_index":968,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["make",{"_index":1052,"title":{},"body":{"injectables/UserService.html":{}}}],["map",{"_index":169,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/AuthenticationService.html":{},"injectables/UserEffects.html":{}}}],["map((user",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["map(user",{"_index":144,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["margin",{"_index":652,"title":{},"body":{"components/LoginCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["mat",{"_index":765,"title":{},"body":{"components/PanelComponent.html":{},"components/ToolbarComponent.html":{}}}],["matautocompletemodule",{"_index":665,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbadgemodule",{"_index":666,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":667,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":668,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":669,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":670,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":861,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["matcheckboxmodule",{"_index":671,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":23,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":672,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":673,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogmodule",{"_index":674,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":675,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material/material.module",{"_index":420,"title":{},"body":{"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/ToolbarModule.html":{}}}],["materialmodule",{"_index":411,"title":{"modules/MaterialModule.html":{}},"body":{"modules/CardModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/ToolbarModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":676,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":677,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":678,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":679,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":680,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":681,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":682,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":683,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":684,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":685,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":686,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodule",{"_index":687,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":688,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":689,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":690,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":691,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodule",{"_index":692,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":693,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":694,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":695,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":696,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":697,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":698,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":699,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":970,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["maxage",{"_index":311,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["menu",{"_index":985,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mergablerole.description",{"_index":1112,"title":{},"body":{"classes/UserTransformer.html":{}}}],["mergablerole.id",{"_index":1108,"title":{},"body":{"classes/UserTransformer.html":{}}}],["mergablerole.name",{"_index":1114,"title":{},"body":{"classes/UserTransformer.html":{}}}],["mergablerole.net",{"_index":1110,"title":{},"body":{"classes/UserTransformer.html":{}}}],["mergemap",{"_index":1030,"title":{},"body":{"injectables/UserEffects.html":{}}}],["mergemap(action",{"_index":1036,"title":{},"body":{"injectables/UserEffects.html":{}}}],["mergeroles",{"_index":1078,"title":{},"body":{"classes/UserTransformer.html":{}}}],["mergeroles(roles",{"_index":1082,"title":{},"body":{"classes/UserTransformer.html":{}}}],["message",{"_index":55,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["metadata",{"_index":486,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["metadatafield",{"_index":1248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["method",{"_index":1051,"title":{},"body":{"injectables/UserService.html":{}}}],["method.service",{"_index":175,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{}}}],["method.service.ts",{"_index":277,"title":{},"body":{"classes/AuthenticationMethodService.html":{},"coverage.html":{},"unit-test.html":{}}}],["method.service.ts:10",{"_index":280,"title":{},"body":{"classes/AuthenticationMethodService.html":{}}}],["method.service.ts:12",{"_index":281,"title":{},"body":{"classes/AuthenticationMethodService.html":{}}}],["method.service.ts:5",{"_index":278,"title":{},"body":{"classes/AuthenticationMethodService.html":{}}}],["methods",{"_index":31,"title":{},"body":{"classes/AbstractLoggerService.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["miscellaneous",{"_index":1201,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":806,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["models/credentials",{"_index":173,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{}}}],["models/log",{"_index":80,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["models/role",{"_index":1064,"title":{},"body":{"injectables/UserService.html":{}}}],["models/user",{"_index":283,"title":{},"body":{"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{},"interfaces/State.html":{},"injectables/UserService.html":{}}}],["models/user.transformer",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["modified",{"_index":1250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":284,"title":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["modulepath",{"_index":1231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":285,"title":{"modules.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["multi",{"_index":316,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["nae",{"_index":117,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["nae.json",{"_index":830,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["nae.providers.auth.endpoints.login",{"_index":387,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["nae.providers.auth.endpoints.logout",{"_index":401,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["naeconfig",{"_index":826,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["naeconfig.tostring",{"_index":831,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["naet",{"_index":895,"title":{},"body":{"injectables/SessionService.html":{}}}],["name",{"_index":45,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"interfaces/ProcessRole.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1277,"title":{},"body":{"index.html":{}}}],["net",{"_index":864,"title":{},"body":{"interfaces/Role.html":{},"classes/UserTransformer.html":{}}}],["netgrif",{"_index":828,"title":{},"body":{"interfaces/ProjectInfo.html":{},"index.html":{}}}],["netgrifapplicationengine",{"_index":428,"title":{},"body":{"classes/ConfigurationService.html":{},"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["netid",{"_index":360,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{}}}],["new",{"_index":98,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/PanelComponent.html":{},"interfaces/ProjectInfo.html":{},"injectables/SessionService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"index.html":{},"unit-test.html":{}}}],["next",{"_index":243,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":259,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["ng",{"_index":1274,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":298,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{}}}],["ngmodulepath",{"_index":1247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ngoninit",{"_index":493,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["ngrx/effects",{"_index":163,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["ngrx/store",{"_index":938,"title":{},"body":{"interfaces/State.html":{}}}],["none",{"_index":1257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["null",{"_index":115,"title":{},"body":{"interfaces/AuthState.html":{},"guards/AuthenticationGuardService.html":{},"classes/NullStorage.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nullauthenticationservice",{"_index":716,"title":{"injectables/NullAuthenticationService.html":{}},"body":{"injectables/NullAuthenticationService.html":{},"coverage.html":{}}}],["nullstorage",{"_index":722,"title":{"classes/NullStorage.html":{}},"body":{"classes/NullStorage.html":{},"injectables/SessionService.html":{},"coverage.html":{}}}],["number",{"_index":729,"title":{},"body":{"classes/NullStorage.html":{}}}],["obj",{"_index":1002,"title":{},"body":{"interfaces/Transformer.html":{}}}],["object",{"_index":72,"title":{},"body":{"classes/AbstractLoggerService.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["object.keys(publishers).foreach(key",{"_index":626,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["object.keys(routes",{"_index":225,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["object.keys(routes).find(routekey",{"_index":219,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["object.keys(routes).length",{"_index":217,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["object.keys(this.languages).foreach((key",{"_index":877,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["observable",{"_index":247,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"injectables/LogPublisherService.html":{},"injectables/NullAuthenticationService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["of(error",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["of(loginfailure({error",{"_index":147,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["of(null",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LogPublisherService.html":{},"injectables/NullAuthenticationService.html":{}}}],["of(this.get",{"_index":435,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["oftype",{"_index":162,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["oftype(login",{"_index":140,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(loginfailure",{"_index":149,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(loginsuccess",{"_index":153,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(loginuser",{"_index":1035,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(logout",{"_index":158,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["on(login",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loginfailure",{"_index":946,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["on(loginsuccess",{"_index":945,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["on(loginuser",{"_index":944,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["on(logout",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(logoutuser",{"_index":947,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":485,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["onsubmit",{"_index":494,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["onsubmit(form",{"_index":500,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["optional",{"_index":46,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"interfaces/ProcessRole.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{}}}],["original",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1057,"title":{},"body":{"injectables/UserService.html":{}}}],["out",{"_index":296,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":763,"title":{},"body":{"components/PanelComponent.html":{}}}],["outputs",{"_index":751,"title":{},"body":{"components/PanelComponent.html":{}}}],["overview",{"_index":1314,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1178,"title":{"dependencies.html":{}},"body":{}}],["panel",{"_index":488,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["panel'},{'name",{"_index":518,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["panel.component",{"_index":419,"title":{},"body":{"modules/CardModule.html":{},"modules/PanelModule.html":{}}}],["panel.component.html",{"_index":744,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel.component.scss",{"_index":743,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel.component.ts",{"_index":484,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["panel.component.ts:10",{"_index":497,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{}}}],["panel.component.ts:20",{"_index":499,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{}}}],["panel.component.ts:23",{"_index":501,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{}}}],["panelcomponent",{"_index":519,"title":{"components/PanelComponent.html":{}},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["panelcontent",{"_index":749,"title":{},"body":{"components/PanelComponent.html":{}}}],["panelheader",{"_index":750,"title":{},"body":{"components/PanelComponent.html":{}}}],["panelmodule",{"_index":772,"title":{"modules/PanelModule.html":{}},"body":{"modules/PanelModule.html":{},"modules.html":{},"overview.html":{}}}],["param",{"_index":64,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/UserService.html":{}}}],["parameter",{"_index":1245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":52,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["parsing",{"_index":1115,"title":{},"body":{"classes/UserTransformer.html":{}}}],["password",{"_index":376,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["password.validator",{"_index":857,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["passwords",{"_index":860,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["passwordvalidator",{"_index":856,"title":{},"body":{"components/RegistrationCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordvalidator(control",{"_index":1263,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":781,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["pipe",{"_index":1034,"title":{},"body":{"injectables/UserEffects.html":{}}}],["pointer",{"_index":663,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["portalmodule",{"_index":712,"title":{},"body":{"modules/MaterialModule.html":{}}}],["preferences",{"_index":1007,"title":{},"body":{"classes/User.html":{}}}],["present",{"_index":579,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["private",{"_index":176,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"injectables/SessionService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["processrole",{"_index":355,"title":{"interfaces/ProcessRole.html":{}},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{},"classes/UserTransformer.html":{},"coverage.html":{}}}],["processroles",{"_index":366,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{}}}],["prod",{"_index":1292,"title":{},"body":{"index.html":{}}}],["production",{"_index":1294,"title":{},"body":{"index.html":{}}}],["profile",{"_index":965,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["project",{"_index":818,"title":{},"body":{"interfaces/ProjectInfo.html":{},"index.html":{}}}],["project.projecttype",{"_index":821,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["project.sourceroot}/${projecttype",{"_index":824,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["projectinfo",{"_index":779,"title":{"interfaces/ProjectInfo.html":{}},"body":{"interfaces/ProjectInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projectname",{"_index":782,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["projectnameclassified",{"_index":783,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["projectnamedasherized",{"_index":784,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["projects/.../authentication.actions.ts",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../authentication.factory.ts",{"_index":1222,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../authentication.redurcers.ts",{"_index":1228,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../authentication.selectors.ts",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../authentication.state.ts",{"_index":1225,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../index.ts",{"_index":1224,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../log",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../modifiedlibraryfunctions.ts",{"_index":1221,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../password.validator.ts",{"_index":1226,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../user.actions.ts",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../user.reducers.ts",{"_index":1229,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../user.selectors.ts",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../utilityfunctions.ts",{"_index":1223,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../utils.ts",{"_index":1227,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/[name]/src/app",{"_index":785,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["projects/netgrif",{"_index":6,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["projecttype",{"_index":820,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"classes/ConsoleLogPublisher.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"classes/NullStorage.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{}}}],["props",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protected",{"_index":27,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/AuthenticationMethodService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/SessionService.html":{}}}],["protractor",{"_index":1304,"title":{},"body":{"index.html":{}}}],["provide",{"_index":314,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["provided",{"_index":1050,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["providedin",{"_index":106,"title":{},"body":{"classes/AbstractLoggerService.html":{},"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":290,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}],["providertext",{"_index":1234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["public",{"_index":212,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"classes/ConfigurationService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["publish",{"_index":606,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publish(entry",{"_index":611,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher",{"_index":30,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["publisher.clear",{"_index":631,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service",{"_index":82,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["publisher.service.ts",{"_index":602,"title":{},"body":{"injectables/LogPublisherService.html":{},"coverage.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["publisher.service.ts:20",{"_index":615,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:21",{"_index":609,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:30",{"_index":617,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:34",{"_index":614,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:42",{"_index":612,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:49",{"_index":610,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.ts",{"_index":440,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"coverage.html":{},"unit-test.html":{}}}],["publisher.ts:13",{"_index":446,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["publisher.ts:14",{"_index":531,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["publisher.ts:17",{"_index":448,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["publisher.ts:18",{"_index":532,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["publisher.ts:20",{"_index":597,"title":{},"body":{"classes/LogPublisher.html":{}}}],["publisher.ts:6",{"_index":596,"title":{},"body":{"classes/LogPublisher.html":{}}}],["publisher.ts:7",{"_index":444,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["publishers",{"_index":608,"title":{},"body":{"injectables/LogPublisherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["publishers/console",{"_index":619,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publishers/local",{"_index":620,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publishers/log",{"_index":618,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publishers[key](this",{"_index":627,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisherservice",{"_index":47,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["r",{"_index":1003,"title":{},"body":{"interfaces/Transformer.html":{},"injectables/UserService.html":{}}}],["r.description",{"_index":1098,"title":{},"body":{"classes/UserTransformer.html":{}}}],["r.id",{"_index":1107,"title":{},"body":{"classes/UserTransformer.html":{}}}],["r.name",{"_index":1097,"title":{},"body":{"classes/UserTransformer.html":{}}}],["r.netid",{"_index":1100,"title":{},"body":{"classes/UserTransformer.html":{}}}],["r.roleid",{"_index":1099,"title":{},"body":{"classes/UserTransformer.html":{}}}],["r.stringid",{"_index":1096,"title":{},"body":{"classes/UserTransformer.html":{}}}],["randomstring",{"_index":1175,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["randomstring(length",{"_index":1265,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rc.6",{"_index":1270,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":423,"title":{},"body":{"modules/CardModule.html":{}}}],["readme",{"_index":1308,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":28,"title":{},"body":{"classes/AbstractLoggerService.html":{},"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"classes/NullStorage.html":{},"injectables/SessionService.html":{}}}],["reducer",{"_index":308,"title":{},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":948,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["register",{"_index":607,"title":{},"body":{"injectables/LogPublisherService.html":{},"components/RegistrationCardComponent.html":{}}}],["register(publisher",{"_index":613,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["register(this",{"_index":598,"title":{},"body":{"classes/LogPublisher.html":{}}}],["registration",{"_index":413,"title":{},"body":{"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["registrationcardcomponent",{"_index":410,"title":{"components/RegistrationCardComponent.html":{}},"body":{"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reload",{"_index":1280,"title":{},"body":{"index.html":{}}}],["remove_user",{"_index":1219,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["removeitem",{"_index":727,"title":{},"body":{"classes/NullStorage.html":{}}}],["removeitem(key",{"_index":736,"title":{},"body":{"classes/NullStorage.html":{}}}],["req",{"_index":246,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["req.clone",{"_index":256,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["req.headers.set(this._session.sessionheader",{"_index":258,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["reset",{"_index":295,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}],["resolved",{"_index":226,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["resolveloginpath",{"_index":186,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["resolveloginpath(routes",{"_index":201,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["result",{"_index":22,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["result.findindex(r",{"_index":1106,"title":{},"body":{"classes/UserTransformer.html":{}}}],["result.path",{"_index":823,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["result.projectname",{"_index":812,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["result.projectnameclassified",{"_index":814,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["result.projectnamedasherized",{"_index":816,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["result[roleindex].description",{"_index":1111,"title":{},"body":{"classes/UserTransformer.html":{}}}],["result[roleindex].name",{"_index":1113,"title":{},"body":{"classes/UserTransformer.html":{}}}],["result[roleindex].net",{"_index":1109,"title":{},"body":{"classes/UserTransformer.html":{}}}],["results",{"_index":24,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":92,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"interfaces/ProjectInfo.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["returns",{"_index":56,"title":{},"body":{"classes/AbstractLoggerService.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{}}}],["rgba(0",{"_index":660,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["rgba(0,0,0,.03",{"_index":771,"title":{},"body":{"components/PanelComponent.html":{}}}],["rgba(117",{"_index":656,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["right",{"_index":982,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["role",{"_index":862,"title":{"interfaces/Role.html":{}},"body":{"interfaces/Role.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{}}}],["rolearray.foreach(mergablerole",{"_index":1104,"title":{},"body":{"classes/UserTransformer.html":{}}}],["roleid",{"_index":359,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{}}}],["roleindex",{"_index":1105,"title":{},"body":{"classes/UserTransformer.html":{}}}],["roles",{"_index":1008,"title":{},"body":{"classes/User.html":{},"classes/UserTransformer.html":{}}}],["roles.foreach(rolearray",{"_index":1103,"title":{},"body":{"classes/UserTransformer.html":{}}}],["roles.map(r",{"_index":1095,"title":{},"body":{"classes/UserTransformer.html":{}}}],["roles.splice(0",{"_index":1102,"title":{},"body":{"classes/UserTransformer.html":{}}}],["roles[0",{"_index":1101,"title":{},"body":{"classes/UserTransformer.html":{}}}],["root",{"_index":107,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["route",{"_index":199,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["route).layout",{"_index":222,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["route).routes",{"_index":228,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["routekey",{"_index":224,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["router",{"_index":134,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{}}}],["routerstatesnapshot",{"_index":197,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["routes",{"_index":205,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["routes[routekey",{"_index":221,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["rule",{"_index":1262,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":1273,"title":{},"body":{"index.html":{}}}],["running",{"_index":1295,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":166,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"injectables/LogPublisherService.html":{},"injectables/NullAuthenticationService.html":{},"injectables/SessionService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":171,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["scaffolding",{"_index":1283,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["schematics/angular",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["schematics/angular/third_party/github.com/microsoft/typescript/lib/typescript",{"_index":787,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["schematics/angular/utility/ast",{"_index":1237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["schematics/angular/utility/change",{"_index":799,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["schematicsexception",{"_index":788,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["schematicsexception('could",{"_index":803,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["scrollingmodule",{"_index":714,"title":{},"body":{"modules/MaterialModule.html":{}}}],["searchedlayout",{"_index":203,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["select",{"_index":961,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["selectauthentication",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectisauthenticated",{"_index":1160,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectlanguageservice",{"_index":865,"title":{"injectables/SelectLanguageService.html":{}},"body":{"injectables/SelectLanguageService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["selectloggeduser",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":487,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["selectuser",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serialization",{"_index":568,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["serialized",{"_index":569,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["serializeparams",{"_index":90,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["serve",{"_index":1275,"title":{},"body":{"index.html":{}}}],["server",{"_index":1272,"title":{},"body":{"index.html":{}}}],["service/index.ts",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["services/authentication",{"_index":174,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"modules/AuthenticationModule.html":{}}}],["services/log",{"_index":451,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{}}}],["services/sign",{"_index":930,"title":{},"body":{"modules/SignUpModule.html":{}}}],["services/user.service",{"_index":1031,"title":{},"body":{"injectables/UserEffects.html":{}}}],["session",{"_index":114,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/SessionService.html":{},"miscellaneous/variables.html":{}}}],["session/services/session.service",{"_index":254,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["session_bearer_header_default",{"_index":882,"title":{},"body":{"injectables/SessionService.html":{}}}],["session_token_storage_key",{"_index":883,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionconfig",{"_index":905,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionconfig.store",{"_index":908,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionheader",{"_index":886,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionservice",{"_index":238,"title":{"injectables/SessionService.html":{}},"body":{"interceptors/AuthenticationInterceptor.html":{},"injectables/SessionService.html":{},"coverage.html":{}}}],["sessionservice.session_bearer_header_default",{"_index":911,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessiontoken",{"_index":885,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessiontoken(sessiontoken",{"_index":914,"title":{},"body":{"injectables/SessionService.html":{}}}],["set",{"_index":580,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/SessionService.html":{}}}],["set_user",{"_index":1216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["set_user_failure",{"_index":1218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["set_user_success",{"_index":1217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["setitem",{"_index":728,"title":{},"body":{"classes/NullStorage.html":{}}}],["setitem(key",{"_index":738,"title":{},"body":{"classes/NullStorage.html":{}}}],["setsessiontoken(sessiontoken",{"_index":901,"title":{},"body":{"injectables/SessionService.html":{}}}],["shouldlog",{"_index":35,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LoggerService.html":{}}}],["shouldlog(level",{"_index":66,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["sign",{"_index":650,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["signupmodule",{"_index":923,"title":{"modules/SignUpModule.html":{}},"body":{"modules/SignUpModule.html":{},"modules.html":{},"overview.html":{}}}],["signupservice",{"_index":926,"title":{"injectables/SignUpService.html":{}},"body":{"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"coverage.html":{},"overview.html":{}}}],["size",{"_index":979,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["slovak",{"_index":874,"title":{},"body":{"injectables/SelectLanguageService.html":{},"components/ToolbarComponent.html":{}}}],["solid",{"_index":770,"title":{},"body":{"components/PanelComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["specified",{"_index":1049,"title":{},"body":{"injectables/UserService.html":{}}}],["src/lib/configuration/interfaces/schema",{"_index":797,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["started",{"_index":1267,"title":{"index.html":{}},"body":{}}],["state",{"_index":196,"title":{"interfaces/State.html":{}},"body":{"guards/AuthenticationGuardService.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.isauthenticated",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.user",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state[authentication_feature_key",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state[user_feature_key",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1127,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["static",{"_index":183,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/LocalStorageLogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/SessionService.html":{}}}],["stoploading",{"_index":752,"title":{},"body":{"components/PanelComponent.html":{}}}],["storage",{"_index":527,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"injectables/LogPublisherService.html":{},"classes/NullStorage.html":{},"injectables/SessionService.html":{},"coverage.html":{},"unit-test.html":{}}}],["stored",{"_index":1289,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule.instrument",{"_index":310,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["storemodule.forfeature(authentication_feature_key",{"_index":307,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["str",{"_index":589,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["stream",{"_index":273,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["string",{"_index":51,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"classes/ConsoleLogPublisher.html":{},"interfaces/Credentials.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"classes/NullStorage.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stringid",{"_index":356,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{}}}],["stringify",{"_index":572,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["strings",{"_index":795,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["strings.classify(result.projectname",{"_index":815,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["strings.dasherize(result.projectname",{"_index":817,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["styles",{"_index":480,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["styleurls",{"_index":489,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["submit",{"_index":512,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{}}}],["subscribe(entry",{"_index":599,"title":{},"body":{"classes/LogPublisher.html":{}}}],["success",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successful",{"_index":160,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["super",{"_index":382,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"components/RegistrationCardComponent.html":{}}}],["super(publisherservice",{"_index":109,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["support",{"_index":1309,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":362,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{}}}],["svg",{"_index":1310,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":453,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["symbol",{"_index":1251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["symbolname",{"_index":1249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["t",{"_index":1000,"title":{},"body":{"interfaces/Transformer.html":{}}}],["table",{"_index":1177,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1176,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tap",{"_index":170,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["tap((authuser",{"_index":1075,"title":{},"body":{"injectables/UserService.html":{}}}],["tap((user",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tap(action",{"_index":150,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["tap(event",{"_index":260,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["template",{"_index":479,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["templateref",{"_index":755,"title":{},"body":{"components/PanelComponent.html":{}}}],["templateurl",{"_index":491,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["test",{"_index":1298,"title":{"unit-test.html":{}},"body":{"index.html":{},"unit-test.html":{}}}],["tests",{"_index":1297,"title":{},"body":{"index.html":{}}}],["text",{"_index":1255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["this._actions",{"_index":1033,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this._auth.authenticated$.next(false",{"_index":275,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["this._auth.isauthenticated",{"_index":229,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["this._auth.login(credentials).pipe",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._auth.logout().pipe",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._authenticated",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._authenticated$.getvalue",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._authenticated$.next(!!user[authenticationservice.identification_attribute",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._authenticated$.next(false",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._authservice.login(credentials).pipe",{"_index":1074,"title":{},"body":{"injectables/UserService.html":{}}}],["this._authservice.logout().pipe",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{}}}],["this._config.get().providers.auth.endpoints['login",{"_index":384,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["this._config.get().providers.auth.endpoints['logout",{"_index":398,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["this._config.get().providers.auth.session",{"_index":906,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._config.get().providers.auth.sessionbearer",{"_index":910,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._http.get(url",{"_index":394,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["this._http.post(url",{"_index":402,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["this._log",{"_index":623,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._log.next(entry",{"_index":629,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._loginurl",{"_index":214,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["this._publishers",{"_index":625,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._publishers.foreach(publisher",{"_index":630,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._publishers.push(publisher",{"_index":628,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._router.parseurl(this._loginurl",{"_index":230,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["this._session",{"_index":912,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._session$.getvalue",{"_index":918,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._session$.next(sessiontoken",{"_index":915,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._session.clear",{"_index":274,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["this._session.sessiontoken",{"_index":255,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["this._sessionheader",{"_index":909,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._storage",{"_index":907,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._storage.getitem(sessionservice.session_token_storage_key",{"_index":921,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._storage.removeitem(sessionservice.session_token_storage_key",{"_index":920,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._storage.setitem(sessionservice.session_token_storage_key",{"_index":916,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._user",{"_index":1066,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.authorities",{"_index":1067,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.authorities.some(a",{"_index":1071,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.authorities.some(u",{"_index":1069,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.roles",{"_index":1072,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.roles.some(r",{"_index":1073,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userservice.login(credentials",{"_index":1037,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.actions$.pipe",{"_index":139,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.login(action",{"_index":142,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.token",{"_index":154,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.config",{"_index":87,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.config.includeloglevel",{"_index":592,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.config.level",{"_index":93,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.config.logwithdate",{"_index":590,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.config.serializeparams",{"_index":587,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.createconfigurationcopy",{"_index":436,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["this.date",{"_index":582,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.date.toisostring",{"_index":591,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.firstname",{"_index":1021,"title":{},"body":{"classes/User.html":{}}}],["this.form",{"_index":505,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["this.languages[key",{"_index":878,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["this.lastname",{"_index":1022,"title":{},"body":{"classes/User.html":{}}}],["this.level",{"_index":94,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.load",{"_index":913,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.location",{"_index":533,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["this.log(entry",{"_index":600,"title":{},"body":{"classes/LogPublisher.html":{}}}],["this.mergeroles",{"_index":1121,"title":{},"body":{"classes/UserTransformer.html":{}}}],["this.message",{"_index":583,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.params",{"_index":584,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.params.length",{"_index":593,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.publisher",{"_index":86,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.publisher.publish(entry",{"_index":100,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.resolveloginpath((routes[routekey",{"_index":227,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["this.resolveloginpath(this._config.get().views.routes",{"_index":215,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["this.router.navigatebyurl('/').then(r",{"_index":156,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.serializeparams",{"_index":594,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.sessiontoken",{"_index":919,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.shouldlog(level",{"_index":96,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.stoploading.emit",{"_index":764,"title":{},"body":{"components/PanelComponent.html":{}}}],["this.transformauthorities(user.authorities",{"_index":1120,"title":{},"body":{"classes/UserTransformer.html":{}}}],["this.transformprocessroles(user.processroles",{"_index":1122,"title":{},"body":{"classes/UserTransformer.html":{}}}],["this.transformuserprocessroles(user.userprocessroles",{"_index":1123,"title":{},"body":{"classes/UserTransformer.html":{}}}],["this.writetolog(level",{"_index":105,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.debug",{"_index":102,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.error",{"_index":104,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.info",{"_index":101,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.warn",{"_index":103,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["throw",{"_index":399,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"classes/LocalStorageLogPublisher.html":{},"interfaces/ProjectInfo.html":{}}}],["throwerror",{"_index":253,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"injectables/BasicAuthenticationService.html":{}}}],["throwerror(errorevent",{"_index":276,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["throwerror(new",{"_index":385,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["time",{"_index":575,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["todo",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/UserTransformer.html":{}}}],["token",{"_index":270,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"injectables/SessionService.html":{}}}],["toolbar",{"_index":522,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar.component",{"_index":995,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["toolbar.component.html",{"_index":953,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":952,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":521,"title":{"components/ToolbarComponent.html":{}},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"coverage.html":{},"overview.html":{}}}],["toolbarmodule",{"_index":989,"title":{"modules/ToolbarModule.html":{}},"body":{"modules/ToolbarModule.html":{},"modules.html":{},"overview.html":{}}}],["tostring",{"_index":556,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["transform",{"_index":998,"title":{},"body":{"interfaces/Transformer.html":{},"classes/UserTransformer.html":{}}}],["transform(obj",{"_index":999,"title":{},"body":{"interfaces/Transformer.html":{}}}],["transform(user",{"_index":1084,"title":{},"body":{"classes/UserTransformer.html":{}}}],["transformauthorities",{"_index":1079,"title":{},"body":{"classes/UserTransformer.html":{}}}],["transformauthorities(authorities",{"_index":1086,"title":{},"body":{"classes/UserTransformer.html":{}}}],["transformer",{"_index":996,"title":{"interfaces/Transformer.html":{}},"body":{"interfaces/Transformer.html":{},"classes/UserTransformer.html":{},"coverage.html":{}}}],["transformprocessroles",{"_index":1080,"title":{},"body":{"classes/UserTransformer.html":{}}}],["transformprocessroles(roles",{"_index":1088,"title":{},"body":{"classes/UserTransformer.html":{}}}],["transformuserprocessroles",{"_index":1081,"title":{},"body":{"classes/UserTransformer.html":{}}}],["transformuserprocessroles(roles",{"_index":1090,"title":{},"body":{"classes/UserTransformer.html":{}}}],["tree",{"_index":482,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["tree.beginupdate(file.path",{"_index":847,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["tree.read('/angular.json",{"_index":802,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["tree.read('/nae.json",{"_index":827,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["true",{"_index":89,"title":{},"body":{"classes/AbstractLoggerService.html":{},"modules/AuthenticationModule.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":540,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["ts",{"_index":786,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["ts.createsourcefile(path",{"_index":837,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["ts.scripttarget.latest",{"_index":838,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["ts.sourcefile",{"_index":836,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["tslib",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":1070,"title":{},"body":{"injectables/UserService.html":{}}}],["undefined",{"_index":949,"title":{},"body":{"interfaces/State.html":{}}}],["unit",{"_index":1296,"title":{"unit-test.html":{}},"body":{"index.html":{},"unit-test.html":{}}}],["up",{"_index":651,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["up.module.ts",{"_index":929,"title":{},"body":{"modules/SignUpModule.html":{}}}],["up.service",{"_index":931,"title":{},"body":{"modules/SignUpModule.html":{}}}],["up.service.ts",{"_index":933,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{},"unit-test.html":{}}}],["up.service.ts:4",{"_index":934,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up/services/sign",{"_index":932,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{},"unit-test.html":{}}}],["up/sign",{"_index":928,"title":{},"body":{"modules/SignUpModule.html":{}}}],["updaterecorder",{"_index":792,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["url",{"_index":383,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["urltree",{"_index":200,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["use",{"_index":1285,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":315,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["used",{"_index":1258,"title":{},"body":{"miscellaneous/functions.html":{}}}],["usefactory",{"_index":317,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["user",{"_index":282,"title":{"classes/User.html":{}},"body":{"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{},"interfaces/ProcessRole.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1054,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email",{"_index":1117,"title":{},"body":{"classes/UserTransformer.html":{}}}],["user.id",{"_index":1116,"title":{},"body":{"classes/UserTransformer.html":{}}}],["user.name",{"_index":1118,"title":{},"body":{"classes/UserTransformer.html":{}}}],["user.surname",{"_index":1119,"title":{},"body":{"classes/UserTransformer.html":{}}}],["user/models/role",{"_index":1092,"title":{},"body":{"classes/UserTransformer.html":{}}}],["user/models/user",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/UserTransformer.html":{}}}],["user_feature_key",{"_index":942,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractiontypes",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useractiontypes.remove_user",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useractiontypes.set_user",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useractiontypes.set_user_failure",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useractiontypes.set_user_success",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usereffects",{"_index":1023,"title":{"injectables/UserEffects.html":{}},"body":{"injectables/UserEffects.html":{},"coverage.html":{}}}],["username",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"interfaces/Credentials.html":{}}}],["userprocessrole",{"_index":358,"title":{"interfaces/UserProcessRole.html":{}},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{},"classes/UserTransformer.html":{},"coverage.html":{}}}],["userprocessroles",{"_index":367,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{}}}],["userreducer",{"_index":943,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userreducer(state",{"_index":950,"title":{},"body":{"interfaces/State.html":{}}}],["userservice",{"_index":1027,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userstate",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usertransformer",{"_index":335,"title":{"classes/UserTransformer.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/UserTransformer.html":{},"coverage.html":{}}}],["usertransformer().transform(user",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["utf8",{"_index":841,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["utils",{"_index":1238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":511,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["validator",{"_index":859,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["validators",{"_index":503,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["validators.email",{"_index":507,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["value",{"_index":137,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"components/LoginCardComponent.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":516,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["variable",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1417,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1239,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["via",{"_index":1300,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":649,"title":{},"body":{"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["visibility_off",{"_index":648,"title":{},"body":{"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["void",{"_index":57,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{}}}],["warn",{"_index":36,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":69,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["width",{"_index":974,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["workspace",{"_index":805,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["workspace.defaultproject",{"_index":813,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["workspace.projects[result.projectname",{"_index":819,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["workspaceconfig",{"_index":801,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["workspaceconfig.tostring",{"_index":809,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["workspacecontent",{"_index":808,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["write",{"_index":560,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["writetolog",{"_index":37,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LoggerService.html":{}}}],["writetolog(level",{"_index":71,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["x",{"_index":893,"title":{},"body":{"injectables/SessionService.html":{}}}],["yes",{"_index":530,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":294,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractCard.html":{"url":"classes/AbstractCard.html","title":"class - AbstractCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/card/abstract-card.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/card/abstract-card.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {FormGroup} from '@angular/forms';\n\nexport abstract class AbstractCard {\n    form: FormGroup;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractLoggerService.html":{"url":"classes/AbstractLoggerService.html","title":"class - AbstractLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                config\n                            \n                            \n                                    Protected\n                                    Readonly\n                                publisher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Protected\n                                shouldLog\n                            \n                            \n                                warn\n                            \n                            \n                                    Protected\n                                writeToLog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    level\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogPublisherService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(level: LogLevel, message: string, ...param: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            shouldLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            writeToLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(level: LogLevel, message: string, params: object)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n\n                \n                    \n                        getlevel()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogEntry, LogEntryConfiguration} from '../models/log-entry';\nimport {LogPublisherService} from './log-publisher.service';\nimport {LogLevel} from './log-level';\n\nexport interface LoggerConfiguration extends LogEntryConfiguration {\n    level?: LogLevel;\n}\n\nexport abstract class AbstractLoggerService {\n\n    protected readonly config: LoggerConfiguration;\n    protected readonly publisher: LogPublisherService;\n\n    protected constructor(private publisherService: LogPublisherService) {\n        this.publisher = publisherService;\n        this.config = {\n            logWithDate: true,\n            serializeParams: true,\n            level: LogLevel.ALL\n        };\n    }\n\n    get level() {\n        return this.config.level;\n    }\n\n    protected shouldLog(level: LogLevel): boolean {\n        return (level >= this.level && level !== LogLevel.OFF) || this.level === LogLevel.ALL;\n    }\n\n    protected writeToLog(level: LogLevel, message: string, params: object): void {\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        const entry = new LogEntry(level, message, params, this.config);\n        this.publisher.publish(entry);\n    }\n\n    info(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.INFO, message, params);\n    }\n\n    debug(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.DEBUG, message, params);\n    }\n\n    warn(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.WARN, message, params);\n    }\n\n    error(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.ERROR, message, params);\n    }\n\n    log(level: LogLevel, message: string, ...param: Array): void {\n        this.writeToLog(level, message, param);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggerService extends AbstractLoggerService {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        isAuthenticated\n                                \n                                \n                                        session\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthenticated\n                                    \n                                \n                                \n                                    \n                                        isAuthenticated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const AUTHENTICATION_FEATURE_KEY = 'nae-auth';\n\nexport interface AuthState {\n    isAuthenticated: boolean;\n    session: string;\n    error: string | null;\n}\n\nexport const initialState: AuthState = {\n    isAuthenticated: false,\n    session: null,\n    error: null\n};\n\nexport function getInitial(): AuthState {\n    return initialState;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationEffects.html":{"url":"injectables/AuthenticationEffects.html","title":"injectable - AuthenticationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login$\n                            \n                            \n                                loginFailure$\n                            \n                            \n                                loginSuccess$\n                            \n                            \n                                logout$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthenticationMethodService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationMethodService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n        ofType(login),\n        exhaustMap(action =>\n            this.authService.login(action as Credentials).pipe(\n                map(user => loginSuccess(user),\n                    catchError(error => of(loginFailure({error})))\n                )\n            )\n        ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginFailure$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n        ofType(loginFailure),\n        tap(action => {\n            console.log(action.error);\n        })\n    ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n        ofType(loginSuccess),\n        tap(action => {\n            this.authService.token = action.user.email;\n            this.router.navigateByUrl('/').then(r => {\n            });\n        })\n    ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n        ofType(logout),\n        tap(action => {\n            this.authService.token = '';\n            console.log(action.type + ': Logout successful');\n        })\n    ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {Router} from '@angular/router';\nimport {login, loginFailure, loginSuccess, logout} from '../actions/authentication.actions';\nimport {of} from 'rxjs';\nimport {catchError, exhaustMap, map, tap} from 'rxjs/operators';\nimport Credentials from '../../models/credentials';\nimport {AuthenticationMethodService} from '../../services/authentication-method.service';\n\n@Injectable()\nexport class AuthenticationEffects {\n\n    constructor(private actions$: Actions, private authService: AuthenticationMethodService, private router: Router) {\n    }\n\n    login$ = createEffect(() => this.actions$.pipe(\n        ofType(login),\n        exhaustMap(action =>\n            this.authService.login(action as Credentials).pipe(\n                map(user => loginSuccess(user),\n                    catchError(error => of(loginFailure({error})))\n                )\n            )\n        ));\n\n    loginSuccess$ = createEffect(() => this.actions$.pipe(\n        ofType(loginSuccess),\n        tap(action => {\n            this.authService.token = action.user.email;\n            this.router.navigateByUrl('/').then(r => {\n            });\n        })\n    ));\n\n    loginFailure$ = createEffect(() => this.actions$.pipe(\n        ofType(loginFailure),\n        tap(action => {\n            console.log(action.error);\n        })\n    ));\n\n    logout$ = createEffect(() => this.actions$.pipe(\n        ofType(logout),\n        tap(action => {\n            this.authService.token = '';\n            console.log(action.type + ': Logout successful');\n        })\n    ));\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuardService.html":{"url":"guards/AuthenticationGuardService.html","title":"guard - AuthenticationGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/netgrif-application-engine/src/lib/authentication/services/guard/authentication-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _loginUrl\n                            \n                            \n                                    Static\n                                    Readonly\n                                LOGIN_COMPONENT\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                resolveLoginPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthenticationService, _config: ConfigurationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/services/guard/authentication-guard.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/guard/authentication-guard.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveLoginPath\n                        \n                        \n                    \n                \n            \n            \n                \nresolveLoginPath(routes: literal type, searchedLayout: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/guard/authentication-guard.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchedLayout\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {ConfigurationService} from '../../../configuration/configuration.service';\nimport {AuthenticationService} from '../authentication/authentication.service';\nimport {Route} from '../../../configuration/interfaces/schema';\nimport {AuthenticationModule} from '../../authentication.module';\n\n@Injectable({\n    providedIn: AuthenticationModule\n})\nexport class AuthenticationGuardService implements CanActivate {\n\n    public static readonly LOGIN_COMPONENT = 'loginview';\n\n    private readonly _loginUrl: string;\n\n    constructor(private _auth: AuthenticationService,\n                private _config: ConfigurationService,\n                private _router: Router) {\n        this._loginUrl = '/' + this.resolveLoginPath(this._config.get().views.routes, AuthenticationGuardService.LOGIN_COMPONENT);\n    }\n\n\n    resolveLoginPath(routes: {}, searchedLayout: string): string {\n        if (!routes || Object.keys(routes).length === 0) {\n            return null;\n        }\n        const route = Object.keys(routes).find(routeKey => {\n            const layout = (routes[routeKey] as Route).layout;\n            return layout.name === searchedLayout;\n        });\n        if (route) {\n            return route;\n        }\n        for (const routeKey of Object.keys(routes)) {\n            const resolved = this.resolveLoginPath((routes[routeKey] as Route).routes, searchedLayout);\n            if (resolved) {\n                return routeKey + '/' + resolved;\n            }\n        }\n        return null;\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\n        if (!this._auth.isAuthenticated()) {\n            return this._router.parseUrl(this._loginUrl);\n        }\n        return this._auth.isAuthenticated();\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthenticationInterceptor.html":{"url":"interceptors/AuthenticationInterceptor.html","title":"interceptor - AuthenticationInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthenticationInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/services/authentication-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_session: SessionService, _auth: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication-interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _session\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication-interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {SessionService} from '../session/services/session.service';\nimport {AuthenticationService} from './authentication/authentication.service';\n\n@Injectable()\nexport class AuthenticationInterceptor implements HttpInterceptor {\n\n    constructor(private _session: SessionService, private _auth: AuthenticationService) {\n    }\n\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        if (this._session.sessionToken) {\n            req = req.clone({\n                headers: req.headers.set(this._session.sessionHeader, this._session.sessionToken)\n            });\n        }\n        return next.handle(req).pipe(\n            tap(event => {\n                if (event instanceof HttpResponse) {\n                    if (event.headers.has(this._session.sessionHeader)) {\n                        this._session.sessionToken = event.headers.get(this._session.sessionHeader);\n                    }\n                }\n            }),\n            catchError(errorEvent => {\n                if (errorEvent instanceof HttpErrorResponse && errorEvent.status === 401) {\n                    console.debug('Authentication token is invalid. Clearing stream');\n                    this._session.clear();\n                    this._auth.authenticated$.next(false);\n                }\n                return throwError(errorEvent);\n            })\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthenticationMethodService.html":{"url":"classes/AuthenticationMethodService.html","title":"class - AuthenticationMethodService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthenticationMethodService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/services/authentication-method.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                login\n                            \n                            \n                                    Abstract\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication-method.service.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication-method.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication-method.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '../models/user';\nimport {Observable} from 'rxjs';\nimport {Credentials} from '../models/credentials';\n\nexport abstract class AuthenticationMethodService {\n\n    protected constructor() {\n    }\n\n    abstract login(credentials: Credentials): Observable;\n\n    abstract logout(): Observable;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nAuthenticationInterceptor\n\nAuthenticationInterceptor\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationInterceptor->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/authentication.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationInterceptor\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from '@angular/common/http';\nimport {AuthenticationInterceptor} from './services/authentication-interceptor';\nimport {authenticationServiceFactory} from './authentication.factory';\nimport {ConfigurationService} from '../configuration/configuration.service';\nimport {AuthenticationMethodService} from './services/authentication-method.service';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        HttpClientModule\n        // StoreModule.forFeature(AUTHENTICATION_FEATURE_KEY, reducer),\n        // EffectsModule.forFeature([AuthenticationEffects]),\n        // StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: true }),\n    ],\n    providers: [\n        {provide: HTTP_INTERCEPTORS, useClass: AuthenticationInterceptor, multi: true},\n        {provide: AuthenticationMethodService, useFactory: authenticationServiceFactory, deps: [ConfigurationService, HttpClient]},\n        // AuthenticationEffects\n    ]\n})\nexport class AuthenticationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authenticated$\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                IDENTIFICATION_ATTRIBUTE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    authenticated$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthenticationMethodService, _config: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthenticationMethodService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _authenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            IDENTIFICATION_ATTRIBUTE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'username'\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        authenticated$\n                    \n                \n\n                \n                    \n                        getauthenticated$()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Credentials} from '../../models/credentials';\nimport {Injectable} from '@angular/core';\nimport {AuthenticationMethodService} from '../authentication-method.service';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {User as AuthUser} from '../../models/user';\nimport {ConfigurationService} from '../../../configuration/configuration.service';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {User} from '../../../user/models/user';\nimport {UserTransformer} from '../../models/user.transformer';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticationService {\n\n    private static readonly IDENTIFICATION_ATTRIBUTE = 'username'; // TODO change for ID\n\n    private _authenticated$: BehaviorSubject;\n\n    constructor(private _auth: AuthenticationMethodService, private _config: ConfigurationService) {\n        this._authenticated$ = new BehaviorSubject(false);\n    }\n\n    login(credentials: Credentials): Observable {\n        return this._auth.login(credentials).pipe(\n            tap((user: AuthUser) => {\n                this._authenticated$.next(!!user[AuthenticationService.IDENTIFICATION_ATTRIBUTE]);\n            }),\n            map((user: AuthUser) => new UserTransformer().transform(user)),\n            catchError(error => {\n                console.error(error);\n                return of(null);\n            })\n        );\n    }\n\n    logout(): Observable {\n        return this._auth.logout().pipe(\n            tap(() => this._authenticated$.next(false)),\n            catchError(error => {\n                console.error(error);\n                return of(error);\n            })\n        );\n    }\n\n    isAuthenticated(): boolean {\n        return this._authenticated$.getValue();\n    }\n\n    get authenticated$(): BehaviorSubject {\n        return this._authenticated$;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Authority.html":{"url":"interfaces/Authority.html","title":"interface - Authority","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Authority\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authority\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authority\n                                    \n                                \n                                \n                                    \n                                        authority:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Authority {\n    authority: string;\n}\n\nexport interface ProcessRole {\n    stringId: string;\n    name: string;\n    description?: string;\n}\n\nexport interface UserProcessRole {\n    roleId: string;\n    netId?: string;\n}\n\nexport interface User {\n    id: string;\n    email: string;\n    name: string;\n    surname: string;\n    fullName?: string;\n    groups?: Array;\n    authorities?: Array;\n    processRoles?: Array;\n    userProcessRoles?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicAuthenticationService.html":{"url":"injectables/BasicAuthenticationService.html","title":"injectable - BasicAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BasicAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/services/methods/basic-authentication/basic-authentication.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthenticationMethodService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Abstract\n                                login\n                            \n                            \n                                    Abstract\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient, _config: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/services/methods/basic-authentication/basic-authentication.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/methods/basic-authentication/basic-authentication.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {username: '', password: ''}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/methods/basic-authentication/basic-authentication.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthenticationMethodService\n\n                \n            \n            \n                \n                        Defined in         AuthenticationMethodService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Inherited from         AuthenticationMethodService\n\n                \n            \n            \n                \n                        Defined in         AuthenticationMethodService:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {User} from '../../../models/user';\nimport {AuthenticationMethodService} from '../../authentication-method.service';\nimport {Credentials} from '../../../models/credentials';\nimport {ConfigurationService} from '../../../../configuration/configuration.service';\n\n@Injectable()\nexport class BasicAuthenticationService extends AuthenticationMethodService {\n\n    constructor(private _http: HttpClient, private _config: ConfigurationService) {\n        super();\n    }\n\n    login(credentials: Credentials = {username: '', password: ''}): Observable {\n        const url = this._config.get().providers.auth.endpoints['login'];\n        if (!url) {\n            throwError(new Error('Login URL is not defined in the config [nae.providers.auth.endpoints.login]'));\n        }\n        if (!credentials.username || !credentials.password) {\n            throwError(new Error('User\\'s credentials are not defined!'));\n        }\n        credentials.username = credentials.username.trim();\n        credentials.password = credentials.password.trim();\n        if (credentials.username === '' || credentials.password === '') {\n            throwError(new Error('User\\'s credentials are empty!'));\n        }\n\n        return this._http.get(url, {\n            headers: new HttpHeaders().set('Authorization', `Basic ${btoa(`${credentials.username}:${credentials.password}`)}`)\n        });\n    }\n\n    logout(): Observable {\n        const url = this._config.get().providers.auth.endpoints['logout'];\n        if (!url) {\n            throw new Error('Logout URL is not defined in the config [nae.providers.auth.endpoints.logout]');\n        }\n\n        return this._http.post(url, {});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardModule.html":{"url":"modules/CardModule.html","title":"module - CardModule","body":"\n                   \n\n\n\n\n    Modules\n    CardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardModule\n\n\n\ncluster_CardModule_declarations\n\n\n\ncluster_CardModule_imports\n\n\n\ncluster_CardModule_exports\n\n\n\n\nForgottenPasswordCardComponent\n\nForgottenPasswordCardComponent\n\n\n\nCardModule\n\nCardModule\n\nCardModule -->\n\nForgottenPasswordCardComponent->CardModule\n\n\n\n\n\nLoginCardComponent\n\nLoginCardComponent\n\nCardModule -->\n\nLoginCardComponent->CardModule\n\n\n\n\n\nRegistrationCardComponent\n\nRegistrationCardComponent\n\nCardModule -->\n\nRegistrationCardComponent->CardModule\n\n\n\n\n\nForgottenPasswordCardComponent \n\nForgottenPasswordCardComponent \n\nForgottenPasswordCardComponent  -->\n\nCardModule->ForgottenPasswordCardComponent \n\n\n\n\n\nLoginCardComponent \n\nLoginCardComponent \n\nLoginCardComponent  -->\n\nCardModule->LoginCardComponent \n\n\n\n\n\nRegistrationCardComponent \n\nRegistrationCardComponent \n\nRegistrationCardComponent  -->\n\nCardModule->RegistrationCardComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCardModule -->\n\nMaterialModule->CardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/card/card.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForgottenPasswordCardComponent\n                        \n                        \n                            LoginCardComponent\n                        \n                        \n                            RegistrationCardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ForgottenPasswordCardComponent\n                        \n                        \n                            LoginCardComponent\n                        \n                        \n                            RegistrationCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RegistrationCardComponent} from './registration-card/registration-card.component';\nimport {LoginCardComponent} from './login-card/login-card.component';\nimport {ForgottenPasswordCardComponent} from './forgotten-password-card/forgotten-password-panel.component';\nimport {MaterialModule} from '../material/material.module';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    declarations: [RegistrationCardComponent, LoginCardComponent, ForgottenPasswordCardComponent],\n    exports: [RegistrationCardComponent, LoginCardComponent, ForgottenPasswordCardComponent],\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        ReactiveFormsModule,\n    ]\n})\nexport class CardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigurationService.html":{"url":"classes/ConfigurationService.html","title":"class - ConfigurationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigurationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createConfigurationCopy\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(configuration: NetgrifApplicationEngine)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                    NetgrifApplicationEngine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createConfigurationCopy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createConfigurationCopy()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NetgrifApplicationEngine\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAsync()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {NetgrifApplicationEngine} from './interfaces/schema';\nimport {Observable, of} from 'rxjs';\n\nexport abstract class ConfigurationService {\n\n    protected constructor(private configuration: NetgrifApplicationEngine) {\n    }\n\n    public getAsync(): Observable {\n        return of(this.get());\n    }\n\n    public get(): NetgrifApplicationEngine {\n        return this.createConfigurationCopy();\n    }\n\n    private createConfigurationCopy(): any {\n        return JSON.parse(JSON.stringify(this.configuration));\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleLogPublisher.html":{"url":"classes/ConsoleLogPublisher.html","title":"class - ConsoleLogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleLogPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LogPublisher\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                log\n                            \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LogPublisher\n\n                                \n                            \n                        \n                            \n                                    Defined in         LogPublisher:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LogPublisher} from './log-publisher';\nimport {LogEntry} from '../models/log-entry';\nimport {LogPublisherService} from '../services/log-publisher.service';\nimport {LogLevel} from '../services/log-level';\n\n\nexport class ConsoleLogPublisher extends LogPublisher {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n\n    clear(): void {\n        console.clear();\n    }\n\n    log(entry: LogEntry): void {\n        if (!entry) {\n            return;\n        }\n        switch (entry.level) {\n            case LogLevel.DEBUG:\n                console.debug(entry.toString());\n                break;\n            case LogLevel.ERROR:\n                console.error(entry.toString());\n                break;\n            case LogLevel.INFO:\n                console.info(entry.toString());\n                break;\n            case LogLevel.WARN:\n                console.warn(entry.toString());\n                break;\n            default:\n                console.log(entry.toString());\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CovalentModule.html":{"url":"modules/CovalentModule.html","title":"module - CovalentModule","body":"\n                   \n\n\n\n\n    Modules\n    CovalentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/covalent/covalent.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CovalentHighlightModule} from '@covalent/highlight';\nimport {CovalentMarkdownModule} from '@covalent/markdown';\nimport {CovalentCommonModule, CovalentLayoutModule, CovalentStepsModule} from '@covalent/core';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        CovalentHighlightModule,\n        CovalentMarkdownModule\n    ],\n    exports: [\n        CovalentHighlightModule,\n        CovalentMarkdownModule,\n        CovalentLayoutModule,\n        CovalentStepsModule,\n        CovalentCommonModule\n    ]\n})\nexport class CovalentModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/models/credentials.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Credentials {\n    username: string;\n    password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgottenPasswordCardComponent.html":{"url":"components/ForgottenPasswordCardComponent.html","title":"component - ForgottenPasswordCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgottenPasswordCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/netgrif-application-engine/src/lib/card/forgotten-password-card/forgotten-password-panel.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractCard\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nae-forgotten-password-panel\n            \n\n            \n                styleUrls\n                ./forgotten-password-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgotten-password-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/card/forgotten-password-card/forgotten-password-panel.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/card/forgotten-password-card/forgotten-password-panel.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: object)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/card/forgotten-password-card/forgotten-password-panel.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCard\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCard:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {AbstractCard} from '../abstract-card';\n\n@Component({\n    selector: 'nae-forgotten-password-panel',\n    templateUrl: './forgotten-password-card.component.html',\n    styleUrls: ['./forgotten-password-card.component.scss']\n})\nexport class ForgottenPasswordCardComponent extends AbstractCard implements OnInit {\n\n    constructor(private fb: FormBuilder) {\n        super();\n        this.form = fb.group({\n            login: [''],\n            email: ['', Validators.email]\n        });\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit(form: object) {\n        console.log(form);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                            \n                            \n                                The login name must have at least 4 letters\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Not a valid email\n                            \n                        \n                    \n                    \n                        Submit\n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./forgotten-password-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            The login name must have at least 4 letters                                                                                                                                                                                                            Not a valid email                                                                                                                    Submit                                                            '\n    var COMPONENTS = [{'name': 'ForgottenPasswordCardComponent', 'selector': 'nae-forgotten-password-panel'},{'name': 'LoginCardComponent', 'selector': 'nae-login-panel'},{'name': 'PanelComponent', 'selector': 'nae-app-panel'},{'name': 'RegistrationCardComponent', 'selector': 'nae-registration-panel'},{'name': 'ToolbarComponent', 'selector': 'nae-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgottenPasswordCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalStorageLogPublisher.html":{"url":"classes/LocalStorageLogPublisher.html","title":"class - LocalStorageLogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalStorageLogPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LogPublisher\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                DEFAULT_KEY\n                            \n                            \n                                    Protected\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                log\n                            \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService, logKey?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DEFAULT_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'application-log'\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LogPublisher\n\n                                \n                            \n                        \n                            \n                                    Defined in         LogPublisher:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LogPublisher} from './log-publisher';\nimport {LogEntry} from '../models/log-entry';\nimport {LogPublisherService} from '../services/log-publisher.service';\n\nexport class LocalStorageLogPublisher extends LogPublisher {\n\n    public static readonly DEFAULT_KEY = 'application-log';\n\n    constructor(publisherService: LogPublisherService, logKey?: string) {\n        super(publisherService);\n        this.location = !logKey ? LocalStorageLogPublisher.DEFAULT_KEY : logKey;\n    }\n\n    clear(): void {\n        localStorage.removeItem(this.location);\n    }\n\n    log(entry: LogEntry): void {\n        if (!entry) {\n            return;\n        }\n        const logString: string = localStorage.getItem(this.location);\n        let log: LogEntry[];\n        if (!logString) {\n            log = [];\n        } else {\n            log = JSON.parse(logString);\n        }\n        log.push(entry);\n        try {\n            localStorage.setItem(this.location, JSON.stringify(log));\n        } catch (e) {\n            const deleted: LogEntry = log.splice(0, 1)[0];\n            console.debug('Log entry from ' + deleted.date.toISOString() + ' was deleted from the LocalStorage \\'' + this.location + '\\'');\n            try {\n                localStorage.setItem(this.location, JSON.stringify(log));\n            } catch (e) {\n                console.error(e);\n                throw new Error(e.message);\n            }\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogEntry.html":{"url":"classes/LogEntry.html","title":"class - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                config\n                            \n                            \n                                    Public\n                                    Readonly\n                                date\n                            \n                            \n                                    Public\n                                    Readonly\n                                level\n                            \n                            \n                                    Public\n                                    Readonly\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                serializeParams\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    levelString\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(level: LogLevel, message: string, params?: object, config?: LogEntryConfiguration)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:20\n                            \n                        \n\n                \n                    \n                            Log entry class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        LogLevel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nLog level of this entry\n\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nmessage to write to the log\n\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nadditional parameters to write into the log\n\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        LogEntryConfiguration\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nextra class configuration\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogEntryConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogLevel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            serializeParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serializeParams()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:50\n                \n            \n\n\n            \n                \n                    Serialization of additional parameters of the entry.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Serialized JSON\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:61\n                \n            \n\n\n            \n                \n                    Stringify log entry. According to configuration entry can include time, log level and extra parameters\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Log string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        levelString\n                    \n                \n\n                \n                    \n                        getlevelString()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {LogLevel} from '../services/log-level';\n\n/**\n * Log entry configuration.\n * All attributes are optional.\n * Attributes that are not present in the configuration object are set to their default value.\n */\nexport interface LogEntryConfiguration {\n    logWithDate?: boolean;\n    serializeParams?: boolean;\n    includeLogLevel?: boolean;\n}\n\nexport class LogEntry {\n\n    public readonly date: Date;\n    public readonly level: LogLevel;\n    public readonly message: string;\n    public readonly params: object;\n    public readonly config: LogEntryConfiguration;\n\n    /**\n     * Log entry class\n     * @param level - Log level of this entry\n     * @param message - message to write to the log\n     * @param params - additional parameters to write into the log\n     * @param config - extra class configuration\n     */\n    constructor(level: LogLevel, message: string, params?: object, config?: LogEntryConfiguration) {\n        this.date = new Date();\n        this.level = level;\n        this.message = message;\n        this.params = params;\n        const defaults: LogEntryConfiguration = {\n            logWithDate: true,\n            serializeParams: true,\n            includeLogLevel: true\n        };\n        this.config = {...defaults, ...config};\n    }\n\n    get levelString(): string {\n        return LogLevel[this.level.toString()];\n    }\n\n    /**\n     * Serialization of additional parameters of the entry.\n     * @return Serialized JSON\n     */\n    private serializeParams(): string {\n        if (!this.config.serializeParams) {\n            return '';\n        }\n        return JSON.stringify(this.params);\n    }\n\n    /**\n     * Stringify log entry. According to configuration entry can include time, log level and extra parameters\n     * @return Log string\n     */\n    toString(): string {\n        let str = '';\n        if (this.config.logWithDate) {\n            str += '[' + this.date.toISOString() + '] ';\n        }\n        if (this.config.includeLogLevel) {\n            str += ' ';\n        }\n        str += this.message;\n        if (this.config.serializeParams && this.params) {\n            if (this.params instanceof Array) {\n                if (this.params.length !== 0) {\n                    str += ' , params: ' + this.serializeParams();\n                }\n            } else {\n                str += ' , params: ' + this.serializeParams();\n            }\n        }\n        return str;\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntryConfiguration.html":{"url":"interfaces/LogEntryConfiguration.html","title":"interface - LogEntryConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LogEntryConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts\n        \n\n            \n                Description\n            \n            \n                Log entry configuration.\nAll attributes are optional.\nAttributes that are not present in the configuration object are set to their default value.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        includeLogLevel\n                                \n                                \n                                            Optional\n                                        logWithDate\n                                \n                                \n                                            Optional\n                                        serializeParams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        includeLogLevel\n                                    \n                                \n                                \n                                    \n                                        includeLogLevel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logWithDate\n                                    \n                                \n                                \n                                    \n                                        logWithDate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serializeParams\n                                    \n                                \n                                \n                                    \n                                        serializeParams:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {LogLevel} from '../services/log-level';\n\n/**\n * Log entry configuration.\n * All attributes are optional.\n * Attributes that are not present in the configuration object are set to their default value.\n */\nexport interface LogEntryConfiguration {\n    logWithDate?: boolean;\n    serializeParams?: boolean;\n    includeLogLevel?: boolean;\n}\n\nexport class LogEntry {\n\n    public readonly date: Date;\n    public readonly level: LogLevel;\n    public readonly message: string;\n    public readonly params: object;\n    public readonly config: LogEntryConfiguration;\n\n    /**\n     * Log entry class\n     * @param level - Log level of this entry\n     * @param message - message to write to the log\n     * @param params - additional parameters to write into the log\n     * @param config - extra class configuration\n     */\n    constructor(level: LogLevel, message: string, params?: object, config?: LogEntryConfiguration) {\n        this.date = new Date();\n        this.level = level;\n        this.message = message;\n        this.params = params;\n        const defaults: LogEntryConfiguration = {\n            logWithDate: true,\n            serializeParams: true,\n            includeLogLevel: true\n        };\n        this.config = {...defaults, ...config};\n    }\n\n    get levelString(): string {\n        return LogLevel[this.level.toString()];\n    }\n\n    /**\n     * Serialization of additional parameters of the entry.\n     * @return Serialized JSON\n     */\n    private serializeParams(): string {\n        if (!this.config.serializeParams) {\n            return '';\n        }\n        return JSON.stringify(this.params);\n    }\n\n    /**\n     * Stringify log entry. According to configuration entry can include time, log level and extra parameters\n     * @return Log string\n     */\n    toString(): string {\n        let str = '';\n        if (this.config.logWithDate) {\n            str += '[' + this.date.toISOString() + '] ';\n        }\n        if (this.config.includeLogLevel) {\n            str += ' ';\n        }\n        str += this.message;\n        if (this.config.serializeParams && this.params) {\n            if (this.params instanceof Array) {\n                if (this.params.length !== 0) {\n                    str += ' , params: ' + this.serializeParams();\n                }\n            } else {\n                str += ' , params: ' + this.serializeParams();\n            }\n        }\n        return str;\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogPublisher.html":{"url":"classes/LogPublisher.html","title":"class - LogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LogEntry} from '../models/log-entry';\nimport {LogPublisherService} from '../services/log-publisher.service';\n\nexport abstract class LogPublisher {\n\n    protected location: string;\n\n    constructor(publisherService: LogPublisherService) {\n        publisherService\n            .register(this)\n            .subscribe(entry => {\n                if (entry) {\n                    this.log(entry);\n                }\n            });\n    }\n\n    abstract log(entry: LogEntry): void;\n\n    abstract clear(): void;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogPublisherService.html":{"url":"injectables/LogPublisherService.html","title":"injectable - LogPublisherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogPublisherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _log\n                            \n                            \n                                    Private\n                                    Readonly\n                                _publishers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearAll\n                            \n                            \n                                publish\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    publishers\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \nclearAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            publish\n                        \n                        \n                    \n                \n            \n            \n                \npublish(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(publisher: LogPublisher)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                LogPublisher\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _log\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _publishers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogPublisher[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        publishers\n                    \n                \n\n                \n                    \n                        getpublishers()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:30\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogPublisher} from '../publishers/log-publisher';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {LogEntry} from '../models/log-entry';\nimport {ConsoleLogPublisher} from '../publishers/console-log-publisher';\nimport {LocalStorageLogPublisher} from '../publishers/local-storage-log-publisher';\n\nexport const PUBLISHERS = {\n    ConsoleLogPublisher,\n    LocalStorageLogPublisher\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogPublisherService {\n\n    // public static instance: LogPublisherService;\n\n    private readonly _log: BehaviorSubject;\n    private readonly _publishers: LogPublisher[];\n\n    constructor() {\n        // LogPublisherService.instance = this;\n        this._log = new BehaviorSubject(null);\n        this._publishers = [];\n        Object.keys(PUBLISHERS).forEach(key => new PUBLISHERS[key](this));\n    }\n\n    get publishers(): LogPublisher[] {\n        return this._publishers;\n    }\n\n    register(publisher: LogPublisher): Observable {\n        if (!publisher) {\n            return of(null);\n        }\n        this._publishers.push(publisher);\n        return this._log;\n    }\n\n    publish(entry: LogEntry): void {\n        if (!entry) {\n            return;\n        }\n        this._log.next(entry);\n    }\n\n    clearAll(): void {\n        this._publishers.forEach(publisher => publisher.clear());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggerConfiguration.html":{"url":"interfaces/LoggerConfiguration.html","title":"interface - LoggerConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggerConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LogEntryConfiguration\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        level\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         LogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogEntry, LogEntryConfiguration} from '../models/log-entry';\nimport {LogPublisherService} from './log-publisher.service';\nimport {LogLevel} from './log-level';\n\nexport interface LoggerConfiguration extends LogEntryConfiguration {\n    level?: LogLevel;\n}\n\nexport abstract class AbstractLoggerService {\n\n    protected readonly config: LoggerConfiguration;\n    protected readonly publisher: LogPublisherService;\n\n    protected constructor(private publisherService: LogPublisherService) {\n        this.publisher = publisherService;\n        this.config = {\n            logWithDate: true,\n            serializeParams: true,\n            level: LogLevel.ALL\n        };\n    }\n\n    get level() {\n        return this.config.level;\n    }\n\n    protected shouldLog(level: LogLevel): boolean {\n        return (level >= this.level && level !== LogLevel.OFF) || this.level === LogLevel.ALL;\n    }\n\n    protected writeToLog(level: LogLevel, message: string, params: object): void {\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        const entry = new LogEntry(level, message, params, this.config);\n        this.publisher.publish(entry);\n    }\n\n    info(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.INFO, message, params);\n    }\n\n    debug(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.DEBUG, message, params);\n    }\n\n    warn(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.WARN, message, params);\n    }\n\n    error(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.ERROR, message, params);\n    }\n\n    log(level: LogLevel, message: string, ...param: Array): void {\n        this.writeToLog(level, message, param);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggerService extends AbstractLoggerService {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractLoggerService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                config\n                            \n                            \n                                    Protected\n                                    Readonly\n                                publisher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Protected\n                                shouldLog\n                            \n                            \n                                warn\n                            \n                            \n                                    Protected\n                                writeToLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(level: LogLevel, message: string, ...param: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            shouldLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            writeToLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(level: LogLevel, message: string, params: object)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerConfiguration\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLoggerService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLoggerService:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogPublisherService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLoggerService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLoggerService:13\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogEntry, LogEntryConfiguration} from '../models/log-entry';\nimport {LogPublisherService} from './log-publisher.service';\nimport {LogLevel} from './log-level';\n\nexport interface LoggerConfiguration extends LogEntryConfiguration {\n    level?: LogLevel;\n}\n\nexport abstract class AbstractLoggerService {\n\n    protected readonly config: LoggerConfiguration;\n    protected readonly publisher: LogPublisherService;\n\n    protected constructor(private publisherService: LogPublisherService) {\n        this.publisher = publisherService;\n        this.config = {\n            logWithDate: true,\n            serializeParams: true,\n            level: LogLevel.ALL\n        };\n    }\n\n    get level() {\n        return this.config.level;\n    }\n\n    protected shouldLog(level: LogLevel): boolean {\n        return (level >= this.level && level !== LogLevel.OFF) || this.level === LogLevel.ALL;\n    }\n\n    protected writeToLog(level: LogLevel, message: string, params: object): void {\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        const entry = new LogEntry(level, message, params, this.config);\n        this.publisher.publish(entry);\n    }\n\n    info(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.INFO, message, params);\n    }\n\n    debug(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.DEBUG, message, params);\n    }\n\n    warn(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.WARN, message, params);\n    }\n\n    error(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.ERROR, message, params);\n    }\n\n    log(level: LogLevel, message: string, ...param: Array): void {\n        this.writeToLog(level, message, param);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggerService extends AbstractLoggerService {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginCardComponent.html":{"url":"components/LoginCardComponent.html","title":"component - LoginCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractCard\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nae-login-panel\n            \n\n            \n                styleUrls\n                ./login-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hidePassword\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: object)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCard\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCard:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {AbstractCard} from '../abstract-card';\n\n@Component({\n    selector: 'nae-login-panel',\n    templateUrl: './login-card.component.html',\n    styleUrls: ['./login-card.component.scss']\n})\nexport class LoginCardComponent extends AbstractCard implements OnInit {\n    hidePassword = true;\n\n    constructor(private fb: FormBuilder) {\n        super();\n        this.form = fb.group({\n            login: [''],\n            password: ['']\n        });\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit(form: object) {\n        console.log(form);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                            \n                            \n                                The login name must have at least 4 letters\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                {{hidePassword ? 'visibility_off' : 'visibility'}}\n                            \n                        \n                    \n                    \n                        Forgotten password?\n                    \n                    \n                        \n                            Sign up\n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./login-card.component.scss\n                \n                .forgotten-password {\n    margin-bottom: 10px;\n}\n\na {\n    color: rgba(117, 117, 117, 1);\n}\n\na:hover {\n    color: rgba(0, 0, 0, .87);\n    cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            The login name must have at least 4 letters                                                                                                                                                                                                            {{hidePassword ? \\'visibility_off\\' : \\'visibility\\'}}                                                                                                                    Forgotten password?                                                                                            Sign up                                                                                    '\n    var COMPONENTS = [{'name': 'ForgottenPasswordCardComponent', 'selector': 'nae-forgotten-password-panel'},{'name': 'LoginCardComponent', 'selector': 'nae-login-panel'},{'name': 'PanelComponent', 'selector': 'nae-app-panel'},{'name': 'RegistrationCardComponent', 'selector': 'nae-registration-panel'},{'name': 'ToolbarComponent', 'selector': 'nae-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/material/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n} from '@angular/material';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        FlexLayoutModule\n    ],\n    exports: [\n        FlexLayoutModule,\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule\n    ]\n})\nexport class MaterialModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NullAuthenticationService.html":{"url":"injectables/NullAuthenticationService.html","title":"injectable - NullAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NullAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/services/methods/null-authentication/null-authentication.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthenticationMethodService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Abstract\n                                login\n                            \n                            \n                                    Abstract\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/services/methods/null-authentication/null-authentication.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/methods/null-authentication/null-authentication.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/methods/null-authentication/null-authentication.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthenticationMethodService\n\n                \n            \n            \n                \n                        Defined in         AuthenticationMethodService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Inherited from         AuthenticationMethodService\n\n                \n            \n            \n                \n                        Defined in         AuthenticationMethodService:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AuthenticationMethodService} from '../../authentication-method.service';\nimport {Credentials} from '../../../models/credentials';\nimport {Observable, of} from 'rxjs';\nimport {User} from '../../../models/user';\n\n@Injectable()\nexport class NullAuthenticationService extends AuthenticationMethodService {\n\n    constructor() {\n        super();\n    }\n\n    login(credentials: Credentials): Observable {\n        return of(null);\n    }\n\n    logout(): Observable {\n        return of({});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NullStorage.html":{"url":"classes/NullStorage.html","title":"class - NullStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NullStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Storage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                length\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            length\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            key\n                        \n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeItem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:1\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class NullStorage implements Storage {\n    [name: string]: any;\n\n    readonly length: number;\n\n    clear(): void {\n    }\n\n    getItem(key: string): string | null {\n        return null;\n    }\n\n    key(index: number): string | null {\n        return null;\n    }\n\n    removeItem(key: string): void {\n    }\n\n    setItem(key: string, value: string): void {\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PanelComponent.html":{"url":"components/PanelComponent.html","title":"component - PanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/netgrif-application-engine/src/lib/panel/panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nae-app-panel\n            \n\n            \n                styleUrls\n                ./panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitCollapse\n                            \n                            \n                                emitExpand\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expansionDisabled\n                            \n                            \n                                panelContent\n                            \n                            \n                                panelHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                stopLoading\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expansionDisabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panelContent\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panelHeader\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        stopLoading\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitCollapse\n                        \n                        \n                    \n                \n            \n            \n                \nemitCollapse()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitExpand\n                        \n                        \n                    \n                \n            \n            \n                \nemitExpand()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\n\n@Component({\n    selector: 'nae-app-panel',\n    templateUrl: './panel.component.html',\n    styleUrls: ['./panel.component.scss']\n})\nexport class PanelComponent implements OnInit {\n\n    @Input() expansionDisabled = false;\n    @Input() panelHeader: TemplateRef;\n    @Input() panelContent: TemplateRef;\n    @Output() stopLoading: EventEmitter = new EventEmitter();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    emitExpand() {\n        this.stopLoading.emit();\n    }\n\n    emitCollapse() {\n        this.stopLoading.emit();\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n        \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./panel.component.scss\n                \n                .mat-expansion-panel-header {\n    border-bottom: 1px solid rgba(0,0,0,.03);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                '\n    var COMPONENTS = [{'name': 'ForgottenPasswordCardComponent', 'selector': 'nae-forgotten-password-panel'},{'name': 'LoginCardComponent', 'selector': 'nae-login-panel'},{'name': 'PanelComponent', 'selector': 'nae-app-panel'},{'name': 'RegistrationCardComponent', 'selector': 'nae-registration-panel'},{'name': 'ToolbarComponent', 'selector': 'nae-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PanelModule.html":{"url":"modules/PanelModule.html","title":"module - PanelModule","body":"\n                   \n\n\n\n\n    Modules\n    PanelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PanelModule\n\n\n\ncluster_PanelModule_declarations\n\n\n\ncluster_PanelModule_imports\n\n\n\ncluster_PanelModule_exports\n\n\n\n\nPanelComponent\n\nPanelComponent\n\n\n\nPanelModule\n\nPanelModule\n\nPanelModule -->\n\nPanelComponent->PanelModule\n\n\n\n\n\nPanelComponent \n\nPanelComponent \n\nPanelComponent  -->\n\nPanelModule->PanelComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nPanelModule -->\n\nMaterialModule->PanelModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/panel/panel.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PanelComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PanelComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PanelComponent} from './panel.component';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MaterialModule} from '../material/material.module';\n\n@NgModule({\n    declarations: [\n        PanelComponent,\n    ],\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexModule\n    ],\n    exports: [\n        PanelComponent,\n    ]\n})\nexport class PanelModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessRole.html":{"url":"interfaces/ProcessRole.html","title":"interface - ProcessRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProcessRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                        stringId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stringId\n                                    \n                                \n                                \n                                    \n                                        stringId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Authority {\n    authority: string;\n}\n\nexport interface ProcessRole {\n    stringId: string;\n    name: string;\n    description?: string;\n}\n\nexport interface UserProcessRole {\n    roleId: string;\n    netId?: string;\n}\n\nexport interface User {\n    id: string;\n    email: string;\n    name: string;\n    surname: string;\n    fullName?: string;\n    groups?: Array;\n    authorities?: Array;\n    processRoles?: Array;\n    userProcessRoles?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectInfo.html":{"url":"interfaces/ProjectInfo.html","title":"interface - ProjectInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProjectInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/schematics/utilityFunctions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        path\n                                \n                                \n                                        projectName\n                                \n                                \n                                        projectNameClassified\n                                \n                                \n                                        projectNameDasherized\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    projects/[name]/src/app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectName\n                                    \n                                \n                                \n                                    \n                                        projectName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectNameClassified\n                                    \n                                \n                                \n                                    \n                                        projectNameClassified:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectNameDasherized\n                                    \n                                \n                                \n                                    \n                                        projectNameDasherized:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as ts from '@schematics/angular/third_party/github.com/Microsoft/TypeScript/lib/typescript';\n\nimport {SchematicsException, Tree, } from '@angular-devkit/schematics';\nimport {FileEntry, UpdateRecorder} from '@angular-devkit/schematics/src/tree/interface';\nimport {experimental, strings} from '@angular-devkit/core';\nimport {NetgrifApplicationEngine} from '../src/lib/configuration/interfaces/schema';\nimport {Change, InsertChange} from '@schematics/angular/utility/change';\n\ninterface ProjectInfo {\n    /**\n     * projects/[name]/src/app\n     */\n    path: string;\n    projectName: string;\n    projectNameClassified: string;\n    projectNameDasherized: string;\n}\n\n\nexport function getProjectInfo(tree: Tree): ProjectInfo {\n    const workspaceConfig = tree.read('/angular.json');\n    if (!workspaceConfig) {\n        throw new SchematicsException('Could not find Angular workspace configuration. Missing \\'angular.json\\'.');\n    }\n\n    const workspaceContent = workspaceConfig.toString();\n\n    const workspace: experimental.workspace.WorkspaceSchema = JSON.parse(workspaceContent);\n\n    const result = {\n        path: '',\n        projectName: '',\n        projectNameClassified: '',\n        projectNameDasherized: ''\n    };\n\n    result.projectName = workspace.defaultProject as string;\n    result.projectNameClassified = strings.classify(result.projectName);\n    result.projectNameDasherized = strings.dasherize(result.projectName);\n\n    const project = workspace.projects[result.projectName];\n\n    const projectType = project.projectType === 'application' ? 'app' : 'lib';\n\n    result.path = `${project.sourceRoot}/${projectType}`;\n\n    return result;\n}\n\nexport function getNaeConfigurationString(tree: Tree): string {\n    const naeConfig = tree.read('/nae.json');\n    if (!naeConfig) {\n        throw new SchematicsException('Could not find Netgrif Application Engine workspace configuration.  Missing \\'nae.json\\'.');\n    }\n\n    return naeConfig.toString();\n}\n\nexport function getNaeConfiguration(tree: Tree): NetgrifApplicationEngine {\n    return JSON.parse(getNaeConfigurationString(tree));\n}\n\nexport function getTsSource(path: string, content: string): ts.SourceFile {\n    return ts.createSourceFile(path, content, ts.ScriptTarget.Latest, true);\n}\n\nexport function fileEntryToTsSource(file: FileEntry, encoding: string = 'utf8'): ts.SourceFile {\n    return getTsSource(file.path, file.content.toString(encoding));\n}\n\nexport function createChangesRecorder(tree: Tree, file: FileEntry, changes: Array): UpdateRecorder {\n    const exportRecorder = tree.beginUpdate(file.path);\n    for (const change of changes) {\n        if (change instanceof InsertChange) {\n            exportRecorder.insertLeft(change.pos, change.toAdd);\n        }\n    }\n    return exportRecorder;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationCardComponent.html":{"url":"components/RegistrationCardComponent.html","title":"component - RegistrationCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegistrationCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractCard\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nae-registration-panel\n            \n\n            \n                styleUrls\n                ./registration-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hidePassword\n                            \n                            \n                                hideRepeatPassword\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: object)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideRepeatPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCard\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCard:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {passwordValidator} from './password.validator';\nimport {AbstractCard} from '../abstract-card';\n\n@Component({\n    selector: 'nae-registration-panel',\n    templateUrl: './registration-card.component.html',\n    styleUrls: ['./registration-card.component.scss']\n})\nexport class RegistrationCardComponent extends AbstractCard implements OnInit {\n    hidePassword = true;\n    hideRepeatPassword = true;\n\n    constructor(private fb: FormBuilder) {\n        super();\n        this.form = fb.group({\n            login: [''],\n            email: ['', Validators.email],\n            password: [''],\n            confirmPassword: ['']\n        }, {validator: passwordValidator});\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit(form: object) {\n        console.log(form);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                            \n                            \n                                The login name must have at least 4 letters\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Not a valid email\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                {{hidePassword ? 'visibility_off' : 'visibility'}}\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Passwords do not match\n                            \n                            \n                                {{hideRepeatPassword ? 'visibility_off' : 'visibility'}}\n                            \n                        \n                    \n                    \n                        Register\n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./registration-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            The login name must have at least 4 letters                                                                                                                                                                                                            Not a valid email                                                                                                                                                                                                            {{hidePassword ? \\'visibility_off\\' : \\'visibility\\'}}                                                                                                                                                                                                            Passwords do not match                                                                                        {{hideRepeatPassword ? \\'visibility_off\\' : \\'visibility\\'}}                                                                                                                    Register                                                                                    '\n    var COMPONENTS = [{'name': 'ForgottenPasswordCardComponent', 'selector': 'nae-forgotten-password-panel'},{'name': 'LoginCardComponent', 'selector': 'nae-login-panel'},{'name': 'PanelComponent', 'selector': 'nae-app-panel'},{'name': 'RegistrationCardComponent', 'selector': 'nae-registration-panel'},{'name': 'ToolbarComponent', 'selector': 'nae-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Role.html":{"url":"interfaces/Role.html","title":"interface - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/user/models/role.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        net\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        net\n                                    \n                                \n                                \n                                    \n                                        net:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface Role {\n    id: string;\n    name: string;\n    description?: string;\n    net?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SelectLanguageService.html":{"url":"injectables/SelectLanguageService.html","title":"injectable - SelectLanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SelectLanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/toolbar/select-language.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/toolbar/select-language.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLanguage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLanguage(language: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/toolbar/select-language.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            languages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        slovak: false,\n        english: true\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/toolbar/select-language.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SelectLanguageService {\n\n    public languages = {\n        slovak: false,\n        english: true\n    };\n\n    constructor() {\n    }\n\n    public changeLanguage(language: string) {\n        Object.keys(this.languages).forEach((key) => {\n            key === language ? this.languages[key] = true : this.languages[key] = false;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _session$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _sessionHeader\n                            \n                            \n                                    Private\n                                _storage\n                            \n                            \n                                    Static\n                                    Readonly\n                                SESSION_BEARER_HEADER_DEFAULT\n                            \n                            \n                                    Static\n                                    Readonly\n                                SESSION_TOKEN_STORAGE_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Protected\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    session$\n                                \n                                \n                                    sessionToken\n                                \n                                \n                                    sessionHeader\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_config: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _session$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _sessionHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SESSION_BEARER_HEADER_DEFAULT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'X-Auth-Token'\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SESSION_TOKEN_STORAGE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'naet'\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        session$\n                    \n                \n\n                \n                    \n                        getsession$()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sessionToken\n                    \n                \n\n                \n                    \n                        getsessionToken()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:37\n                                \n                            \n\n                \n                    \n                        setsessionToken(sessionToken: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            sessionToken\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        sessionHeader\n                    \n                \n\n                \n                    \n                        getsessionHeader()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {ConfigurationService} from '../../../configuration/configuration.service';\nimport {NullStorage} from '../NullStorage';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionService {\n\n    public static readonly SESSION_TOKEN_STORAGE_KEY = 'naet';\n    public static readonly SESSION_BEARER_HEADER_DEFAULT = 'X-Auth-Token';\n\n    private _session$: BehaviorSubject;\n    private _storage: Storage;\n    private readonly _sessionHeader: string;\n\n    constructor(private _config: ConfigurationService) {\n        const sessionConfig = this._config.get().providers.auth.session;\n        this._storage = sessionConfig && sessionConfig.store ? localStorage : new NullStorage();\n        this._sessionHeader = this._config.get().providers.auth.sessionBearer ?\n            this._config.get().providers.auth.sessionBearer : SessionService.SESSION_BEARER_HEADER_DEFAULT;\n        this._session$ = new BehaviorSubject(null);\n        this.load();\n    }\n\n    get session$(): Observable {\n        return this._session$;\n    }\n\n    set sessionToken(sessionToken: string) {\n        this._session$.next(sessionToken);\n        this._storage.setItem(SessionService.SESSION_TOKEN_STORAGE_KEY,\n            btoa(SessionService.SESSION_TOKEN_STORAGE_KEY + ':' + sessionToken));\n    }\n\n    get sessionToken(): string {\n        return this._session$.getValue();\n    }\n\n    get sessionHeader(): string {\n        return this._sessionHeader;\n    }\n\n    clear(): void {\n        this.sessionToken = null;\n        this._storage.removeItem(SessionService.SESSION_TOKEN_STORAGE_KEY);\n    }\n\n    protected load(): void {\n        const token = this._storage.getItem(SessionService.SESSION_TOKEN_STORAGE_KEY);\n        if (token) {\n            this.sessionToken = atob(token).split(':')[1];\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SignUpModule.html":{"url":"modules/SignUpModule.html","title":"module - SignUpModule","body":"\n                   \n\n\n\n\n    Modules\n    SignUpModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SignUpModule\n\n\n\ncluster_SignUpModule_providers\n\n\n\n\nSignUpService\n\nSignUpService\n\n\n\nSignUpModule\n\nSignUpModule\n\nSignUpModule -->\n\nSignUpService->SignUpModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/sign-up/sign-up.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SignUpService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SignUpService} from './services/sign-up.service';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        SignUpService\n    ]\n})\nexport class SignUpModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignUpService.html":{"url":"injectables/SignUpService.html","title":"injectable - SignUpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SignUpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/sign-up/services/sign-up.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/sign-up/services/sign-up.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class SignUpService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Action, createReducer, on} from '@ngrx/store';\nimport {\n    loginFailure,\n    loginSuccess,\n    loginUser,\n    logoutUser,\n} from '../actions/user.actions';\nimport {User} from '../../models/user';\n\nexport const USER_FEATURE_KEY = 'nae-user';\n\nexport interface State {\n    user: User | null;\n    error: string | null;\n}\n\nexport const initialState: State = {\n    user: null,\n    error: null\n};\n\nconst userReducer = createReducer(\n    initialState,\n    on(loginUser, (state, {user}) => ({...state, user})),\n    on(loginSuccess, (state, {user}) => ({...state, user, error: null})),\n    on(loginFailure, (state, {error}) => ({...state, user: null, error})),\n    on(logoutUser, (state) => initialState),\n);\n\nexport function reducer(state: State | undefined, action: Action) {\n    return userReducer(state, action);\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nae-toolbar\n            \n\n            \n                styleUrls\n                ./toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selectLanguageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appName\n                            \n                            \n                                loggedUser\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(selectLanguageService: SelectLanguageService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectLanguageService\n                                                  \n                                                        \n                                                                        SelectLanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        appName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loggedUser\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectLanguageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectLanguageService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {SelectLanguageService} from './select-language.service';\n\n@Component({\n    selector: 'nae-toolbar',\n    templateUrl: './toolbar.component.html',\n    styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\n    @Input()\n    public loggedUser: string;\n\n    @Input()\n    public appName: string;\n\n    constructor(public selectLanguageService: SelectLanguageService) {\n    }\n\n    ngOnInit() {\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n        \n        \n            {{appName}}\n        \n        \n            \n                {{loggedUser}}\n                account_circle\n                \n                \n                    \n                        \n                            language\n                        \n                        Language\n                    \n                    \n                        \n                            account_circle\n                        \n                        Profile\n                    \n                    \n                        \n                            exit_to_app\n                        \n                        Logout\n                    \n                \n                \n                    English\n                        keyboard_arrow_left\n                        \n                    \n                    Slovak\n                        keyboard_arrow_left\n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./toolbar.component.scss\n                \n                .main-toolbar-logo {\n    max-height: 60%;\n}\n\n.main-toolbar-logo img {\n    width: 120px;\n}\n\nmat-icon.main-toolbar-icon {\n    font-size: 48px;\n    height: 100%;\n    margin-right: 15px;\n}\n\n.main-toolbar-logged-user {\n    margin-right: 15px;\n}\n\n.main-toolbar-menu, .main-toolbar-menu-button {\n    font-size: 20px;\n    height: 100%;\n}\n\n.main-toolbar-menu-icon {\n    font-size: 23px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                {{appName}}                                            {{loggedUser}}                account_circle                                                                                                        language                                                Language                                                                                            account_circle                                                Profile                                                                                            exit_to_app                                                Logout                                                                        English                        keyboard_arrow_left                                                                Slovak                        keyboard_arrow_left                                                                                    '\n    var COMPONENTS = [{'name': 'ForgottenPasswordCardComponent', 'selector': 'nae-forgotten-password-panel'},{'name': 'LoginCardComponent', 'selector': 'nae-login-panel'},{'name': 'PanelComponent', 'selector': 'nae-app-panel'},{'name': 'RegistrationCardComponent', 'selector': 'nae-registration-panel'},{'name': 'ToolbarComponent', 'selector': 'nae-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolbarModule.html":{"url":"modules/ToolbarModule.html","title":"module - ToolbarModule","body":"\n                   \n\n\n\n\n    Modules\n    ToolbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolbarModule\n\n\n\ncluster_ToolbarModule_declarations\n\n\n\ncluster_ToolbarModule_imports\n\n\n\ncluster_ToolbarModule_exports\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\n\n\nToolbarModule\n\nToolbarModule\n\nToolbarModule -->\n\nToolbarComponent->ToolbarModule\n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nToolbarModule->ToolbarComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nToolbarModule -->\n\nMaterialModule->ToolbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/toolbar/toolbar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ToolbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ToolbarComponent} from './toolbar.component';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MaterialModule} from '../material/material.module';\n\n\n@NgModule({\n    declarations: [ToolbarComponent],\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule\n    ],\n    exports: [\n        ToolbarComponent,\n        FlexLayoutModule\n    ]\n})\nexport class ToolbarModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transformer.html":{"url":"interfaces/Transformer.html","title":"interface - Transformer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Transformer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/models/transformer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    transform\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(obj: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/models/transformer.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     R\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Transformer {\n    transform(obj: T): R;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/user/models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authorities\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                    Optional\n                                groups\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                    Optional\n                                preferences\n                            \n                            \n                                    Public\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, email: string, firstName: string, lastName: string, authorities: Array, roles: Array, groups?: Array, preferences?: object)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorities\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roles\n                                                  \n                                                        \n                                                                        Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groups\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        preferences\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authorities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            preferences\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import Role from './role';\n\nexport class User {\n    constructor(\n        public id: string,\n        public email: string,\n        public firstName: string,\n        public lastName: string,\n        public authorities: Array,\n        public roles: Array,\n        public groups?: Array,\n        public preferences?: object) {\n    }\n\n    get fullName() {\n        return this.firstName + ' ' + this.lastName;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/user/store/effects/user.effects.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_actions$: Actions, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/user/store/effects/user.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {of} from 'rxjs';\nimport {catchError, map, mergeMap, tap} from 'rxjs/operators';\nimport {UserService} from '../../services/user.service';\nimport {logoutUser, loginUser, loginFailure} from '../actions/user.actions';\nimport Credentials from '../../../authentication/models/credentials';\n\n@Injectable()\nexport class UserEffects {\n\n    constructor(private _actions$: Actions, private _userService: UserService) {\n    }\n\n    // loginUser$ = createEffect(() => this._actions$\n    //     .pipe(\n    //         ofType(loginUser),\n    //         mergeMap(action => this._userService.login(credentials as Credentials)\n    //         .pipe(\n    //             map(user => loginUser({user})),\n    //             catchError(error => of(loginFailure({error})))\n    //         )\n    //     )\n    // ));\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProcessRole.html":{"url":"interfaces/UserProcessRole.html","title":"interface - UserProcessRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserProcessRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        netId\n                                \n                                \n                                        roleId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        netId\n                                    \n                                \n                                \n                                    \n                                        netId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Authority {\n    authority: string;\n}\n\nexport interface ProcessRole {\n    stringId: string;\n    name: string;\n    description?: string;\n}\n\nexport interface UserProcessRole {\n    roleId: string;\n    netId?: string;\n}\n\nexport interface User {\n    id: string;\n    email: string;\n    name: string;\n    surname: string;\n    fullName?: string;\n    groups?: Array;\n    authorities?: Array;\n    processRoles?: Array;\n    userProcessRoles?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/user/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasAuthority\n                            \n                            \n                                    Public\n                                hasRole\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasAuthority\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasAuthority(authority: Array | string)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:29\n                \n            \n\n\n            \n                \n                    Check if user has specified authority.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    authority\n                                    \n                                            Array | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nIf provided authority is array of authorities.\n Method make intersection of the provided authorities and user's authorities.\n If calculated intersection isn't empty returns true, otherwise false.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRole(role: Role)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                Role\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport Role from '../models/role';\nimport {User} from '../models/user';\nimport {Credentials} from '../../authentication/models/credentials';\nimport {tap} from 'rxjs/operators';\nimport {AuthenticationService} from '../../authentication/services/authentication/authentication.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n\n    private _user: User;\n\n    constructor(private _authService: AuthenticationService) {\n    }\n\n    get user() {\n        return this._user;\n    }\n\n    /**\n     * Check if user has specified authority.\n     * @param authority - If provided authority is array of authorities.\n     *                    Method make intersection of the provided authorities and user's authorities.\n     *                    If calculated intersection isn't empty returns true, otherwise false.\n     */\n    public hasAuthority(authority: Array | string): boolean {\n        if (!authority || !this._user.authorities) {\n            return false;\n        }\n        if (authority instanceof Array) {\n            return authority.some(a => this._user.authorities.some(u => u === a));\n        } else {\n            return this._user.authorities.some(a => a === authority);\n        }\n    }\n\n    public hasRole(role: Role): boolean {\n        if (!role || !this._user.roles) {\n            return false;\n        }\n        return this._user.roles.some(r => r === role);\n    }\n\n    public login(credentials: Credentials): Observable {\n        return this._authService.login(credentials).pipe(\n            tap((authUser: User) => this._user = authUser)\n        );\n    }\n\n    public logout(): Observable {\n        return this._authService.logout().pipe(\n            tap(() => this._user = null)\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserTransformer.html":{"url":"classes/UserTransformer.html","title":"class - UserTransformer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserTransformer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Transformer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mergeRoles\n                            \n                            \n                                    Public\n                                transform\n                            \n                            \n                                    Private\n                                transformAuthorities\n                            \n                            \n                                    Private\n                                transformProcessRoles\n                            \n                            \n                                    Private\n                                transformUserProcessRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mergeRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeRoles(roles: Array>)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                                Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(user: AuthUser)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            transformAuthorities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transformAuthorities(authorities: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorities\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            transformProcessRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transformProcessRoles(roles: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            transformUserProcessRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transformUserProcessRoles(roles: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Authority, ProcessRole, User as AuthUser, UserProcessRole} from './user';\nimport {User} from '../../user/models/user';\nimport Role from '../../user/models/role';\nimport {Transformer} from './transformer';\n\nexport class UserTransformer implements Transformer {\n\n    private transformAuthorities(authorities: Array): Array {\n        return !authorities ? [] : authorities.map(a => a.authority);\n    }\n\n    private transformProcessRoles(roles: Array): Array {\n        return !roles ? [] : roles.map(r => ({\n            id: r.stringId,\n            name: r.name,\n            description: r.description\n        }));\n    }\n\n    private transformUserProcessRoles(roles: Array): Array {\n        return !roles ? [] : roles.map(r => ({\n            id: r.roleId,\n            net: r.netId,\n            name: null\n        }));\n    }\n\n    private mergeRoles(roles: Array>): Array {\n        const result = roles[0];\n\n        roles.splice(0, 1);\n        roles.forEach(roleArray => {\n            roleArray.forEach(mergableRole => {\n                const roleIndex = result.findIndex(r => r.id === mergableRole.id);\n                if (roleIndex === -1) {\n                    return;\n                }\n                result[roleIndex].net = mergableRole.net ? mergableRole.net : result[roleIndex].net;\n                result[roleIndex].description = mergableRole.description ? mergableRole.description : result[roleIndex].description;\n                result[roleIndex].name = mergableRole.name ? mergableRole.name : result[roleIndex].name;\n            });\n        });\n\n        return result;\n    }\n\n    public transform(user: AuthUser): User {\n        const groups: Array = []; // TODO groups parsing\n\n        return new User(\n            user.id,\n            user.email,\n            user.name,\n            user.surname,\n            this.transformAuthorities(user.authorities),\n            this.mergeRoles([\n                this.transformProcessRoles(user.processRoles),\n                this.transformUserProcessRoles(user.userProcessRoles)]),\n            groups);\n\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/netgrif-application-engine/schematics/create-configuration-service/index.ts\n            \n            function\n            createConfigurationService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/initialize-configuration-service/index.ts\n            \n            function\n            initializeConfigurationService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/modifiedLibraryFunctions.ts\n            \n            function\n            addProviderToModule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/modifiedLibraryFunctions.ts\n            \n            function\n            addSymbolToNgModuleMetadata\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            interface\n            ProjectInfo\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            function\n            createChangesRecorder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            function\n            fileEntryToTsSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            function\n            getNaeConfiguration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            function\n            getNaeConfigurationString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            function\n            getProjectInfo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            function\n            getTsSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/authentication.factory.ts\n            \n            function\n            authenticationServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/credentials.ts\n            \n            interface\n            Credentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/transformer.ts\n            \n            interface\n            Transformer\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts\n            \n            class\n            UserTransformer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n            \n            interface\n            Authority\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n            \n            interface\n            ProcessRole\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n            \n            interface\n            UserProcessRole\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/services/authentication-interceptor.ts\n            \n            interceptor\n            AuthenticationInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/services/authentication-method.service.ts\n            \n            class\n            AuthenticationMethodService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/services/guard/authentication-guard.service.ts\n            \n            guard\n            AuthenticationGuardService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/services/methods/basic-authentication/basic-authentication.service.ts\n            \n            injectable\n            BasicAuthenticationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/services/methods/null-authentication/null-authentication.service.ts\n            \n            injectable\n            NullAuthenticationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts\n            \n            class\n            NullStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts\n            \n            injectable\n            SessionService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/sign-up/services/sign-up.service.ts\n            \n            injectable\n            SignUpService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/actions/authentication.actions.ts\n            \n            variable\n            login\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/actions/authentication.actions.ts\n            \n            variable\n            loginFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/actions/authentication.actions.ts\n            \n            variable\n            loginSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/actions/authentication.actions.ts\n            \n            variable\n            logout\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n            \n            interface\n            AuthState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n            \n            function\n            getInitial\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n            \n            variable\n            AUTHENTICATION_FEATURE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts\n            \n            injectable\n            AuthenticationEffects\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/reducers/authentication.redurcers.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/reducers/authentication.redurcers.ts\n            \n            variable\n            authReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectAuthentication\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectIsAuthenticated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectLoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/card/abstract-card.ts\n            \n            class\n            AbstractCard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/card/forgotten-password-card/forgotten-password-panel.component.ts\n            \n            component\n            ForgottenPasswordCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts\n            \n            component\n            LoginCardComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/card/registration-card/password.validator.ts\n            \n            function\n            passwordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts\n            \n            component\n            RegistrationCardComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts\n            \n            class\n            ConfigurationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts\n            \n            class\n            LogEntry\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts\n            \n            interface\n            LogEntryConfiguration\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts\n            \n            class\n            ConsoleLogPublisher\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts\n            \n            class\n            LocalStorageLogPublisher\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts\n            \n            class\n            LogPublisher\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts\n            \n            injectable\n            LogPublisherService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts\n            \n            variable\n            PUBLISHERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n            \n            class\n            AbstractLoggerService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n            \n            interface\n            LoggerConfiguration\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/panel/panel.component.ts\n            \n            component\n            PanelComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/toolbar/select-language.service.ts\n            \n            injectable\n            SelectLanguageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/models/role.ts\n            \n            interface\n            Role\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/actions/user.actions.ts\n            \n            variable\n            loginFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/actions/user.actions.ts\n            \n            variable\n            loginSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/actions/user.actions.ts\n            \n            variable\n            loginUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/actions/user.actions.ts\n            \n            variable\n            logoutUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/effects/user.effects.ts\n            \n            injectable\n            UserEffects\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n            \n            variable\n            USER_FEATURE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n            \n            variable\n            userReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/selectors/user.selectors.ts\n            \n            variable\n            selectLoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/selectors/user.selectors.ts\n            \n            variable\n            selectUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/scripts/Utils.ts\n            \n            function\n            randomString\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.0.5\n        \n            @angular/cdk : ~8.2.3\n        \n            @angular/common : ^9.0.5\n        \n            @angular/compiler : ^9.0.5\n        \n            @angular/core : ^9.0.5\n        \n            @angular/forms : ^9.0.5\n        \n            @angular/flex-layout : ^9.0.0-beta.29\n        \n            @angular/material : ~8.2.3\n        \n            @angular/platform-browser : ^9.0.5\n        \n            @angular/platform-browser-dynamic : ^9.0.5\n        \n            @angular/router : ^9.0.5\n        \n            @covalent/core : ^2.1.1\n        \n            @covalent/highlight : ^2.1.1\n        \n            @covalent/markdown : ^2.1.1\n        \n            @schematics/angular : ^9.0.5\n        \n            hammerjs : ^2.0.8\n        \n            json-schema-to-typescript : ^8.1.0\n        \n            rxjs : ^6.5.4\n        \n            tslib : ^1.11.1\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationActionTypes   (projects/.../authentication.actions.ts)\n                        \n                        \n                            LogLevel   (projects/.../log-level.ts)\n                        \n                        \n                            UserActionTypes   (projects/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/netgrif-application-engine/src/lib/authentication/store/actions/authentication.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationActionTypes\n                    \n                \n                        \n                            \n                                 LOGIN\n                            \n                        \n                        \n                            \n                                Value : [AUTH] Login\n                            \n                        \n                        \n                            \n                                 LOGIN_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [AUTH] Login success\n                            \n                        \n                        \n                            \n                                 LOGIN_FAILURE\n                            \n                        \n                        \n                            \n                                Value : [AUTH] Login failure\n                            \n                        \n                        \n                            \n                                 LOGOUT\n                            \n                        \n                        \n                            \n                                Value : [AUTH] Logout\n                            \n                        \n            \n        \n\n    projects/netgrif-application-engine/src/lib/logger/services/log-level.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/netgrif-application-engine/src/lib/user/store/actions/user.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UserActionTypes\n                    \n                \n                        \n                            \n                                 SET_USER\n                            \n                        \n                        \n                            \n                                Value : [USER] Login user\n                            \n                        \n                        \n                            \n                                 SET_USER_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [USER] Login user success\n                            \n                        \n                        \n                            \n                                 SET_USER_FAILURE\n                            \n                        \n                        \n                            \n                                Value : [USER] Login user failure\n                            \n                        \n                        \n                            \n                                 REMOVE_USER\n                            \n                        \n                        \n                            \n                                Value : [USER] Logout user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addProviderToModule   (projects/.../modifiedLibraryFunctions.ts)\n                        \n                        \n                            addSymbolToNgModuleMetadata   (projects/.../modifiedLibraryFunctions.ts)\n                        \n                        \n                            authenticationServiceFactory   (projects/.../authentication.factory.ts)\n                        \n                        \n                            createChangesRecorder   (projects/.../utilityFunctions.ts)\n                        \n                        \n                            createConfigurationService   (projects/.../index.ts)\n                        \n                        \n                            fileEntryToTsSource   (projects/.../utilityFunctions.ts)\n                        \n                        \n                            getInitial   (projects/.../authentication.state.ts)\n                        \n                        \n                            getNaeConfiguration   (projects/.../utilityFunctions.ts)\n                        \n                        \n                            getNaeConfigurationString   (projects/.../utilityFunctions.ts)\n                        \n                        \n                            getProjectInfo   (projects/.../utilityFunctions.ts)\n                        \n                        \n                            getTsSource   (projects/.../utilityFunctions.ts)\n                        \n                        \n                            initializeConfigurationService   (projects/.../index.ts)\n                        \n                        \n                            passwordValidator   (projects/.../password.validator.ts)\n                        \n                        \n                            randomString   (projects/.../Utils.ts)\n                        \n                        \n                            reducer   (projects/.../authentication.redurcers.ts)\n                        \n                        \n                            reducer   (projects/.../user.reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/netgrif-application-engine/schematics/modifiedLibraryFunctions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addProviderToModule\n                        \n                        \n                    \n                \n            \n            \n                \naddProviderToModule(source, modulePath, classifiedName, importPath, providerText?)\n                \n            \n\n\n\n\n            \n                \n                    copied from original at @schematics/angular/utility/ast-utils\nour version allows for more freedom by adding the insertedText parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modulePath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    classifiedName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    importPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    providerText\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Change[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSymbolToNgModuleMetadata\n                        \n                        \n                    \n                \n            \n            \n                \naddSymbolToNgModuleMetadata(source, ngModulePath, metadataField, symbolName, insertedText?, importPath)\n                \n            \n\n\n\n\n            \n                \n                    copied from original at @schematics/angular/utility/ast-utils\nour version allows for more freedom by adding the insertedText parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmodified file\n\n\n                                    \n                                \n                                \n                                    ngModulePath\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \npath to module file\n\n\n                                    \n                                \n                                \n                                    metadataField\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nname of the array, where the symbol is added\n\n\n                                    \n                                \n                                \n                                    symbolName\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nname of the symbol eg. class name\n\n\n                                    \n                                \n                                \n                                    insertedText\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nthe exact text that should be included in the array. If none is provided symbolName is used instead\n\n\n                                    \n                                \n                                \n                                    importPath\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \npath for the import\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Change[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/src/lib/authentication/authentication.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            authenticationServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticationServiceFactory(config, http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/schematics/utilityFunctions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createChangesRecorder\n                        \n                        \n                    \n                \n            \n            \n                \ncreateChangesRecorder(tree, file, changes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     UpdateRecorder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fileEntryToTsSource\n                        \n                        \n                    \n                \n            \n            \n                \nfileEntryToTsSource(file, encoding)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encoding\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ts.SourceFile\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNaeConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \ngetNaeConfiguration(tree)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NetgrifApplicationEngine\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNaeConfigurationString\n                        \n                        \n                    \n                \n            \n            \n                \ngetNaeConfigurationString(tree)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProjectInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetProjectInfo(tree)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProjectInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTsSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetTsSource(path, content)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ts.SourceFile\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/schematics/create-configuration-service/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createConfigurationService\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConfigurationService()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getInitial\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitial()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         AuthState\n\n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/schematics/initialize-configuration-service/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            initializeConfigurationService\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeConfigurationService()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/src/lib/card/registration-card/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            passwordValidator\n                        \n                        \n                    \n                \n            \n            \n                \npasswordValidator(control)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/src/scripts/Utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            randomString\n                        \n                        \n                    \n                \n            \n            \n                \nrandomString(length)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/src/lib/authentication/store/reducers/authentication.redurcers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNetgrif Application Engine\nThis project was generated with Angular CLI version 9.0.0-rc.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CovalentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PanelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SignUpModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_CardModule\n\n\n\ncluster_CardModule_declarations\n\n\n\ncluster_CardModule_imports\n\n\n\ncluster_CardModule_exports\n\n\n\ncluster_PanelModule\n\n\n\ncluster_PanelModule_declarations\n\n\n\ncluster_PanelModule_exports\n\n\n\ncluster_SignUpModule\n\n\n\ncluster_SignUpModule_providers\n\n\n\ncluster_ToolbarModule\n\n\n\ncluster_ToolbarModule_declarations\n\n\n\ncluster_ToolbarModule_exports\n\n\n\n\nAuthenticationInterceptor\n\nAuthenticationInterceptor\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationInterceptor->AuthenticationModule\n\n\n\n\n\nForgottenPasswordCardComponent\n\nForgottenPasswordCardComponent\n\n\n\nCardModule\n\nCardModule\n\nCardModule -->\n\nForgottenPasswordCardComponent->CardModule\n\n\n\n\n\nLoginCardComponent\n\nLoginCardComponent\n\nCardModule -->\n\nLoginCardComponent->CardModule\n\n\n\n\n\nRegistrationCardComponent\n\nRegistrationCardComponent\n\nCardModule -->\n\nRegistrationCardComponent->CardModule\n\n\n\n\n\nForgottenPasswordCardComponent \n\nForgottenPasswordCardComponent \n\nForgottenPasswordCardComponent  -->\n\nCardModule->ForgottenPasswordCardComponent \n\n\n\n\n\nLoginCardComponent \n\nLoginCardComponent \n\nLoginCardComponent  -->\n\nCardModule->LoginCardComponent \n\n\n\n\n\nRegistrationCardComponent \n\nRegistrationCardComponent \n\nRegistrationCardComponent  -->\n\nCardModule->RegistrationCardComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCardModule -->\n\nMaterialModule->CardModule\n\n\n\n\n\nPanelModule\n\nPanelModule\n\nPanelModule -->\n\nMaterialModule->PanelModule\n\n\n\n\n\nToolbarModule\n\nToolbarModule\n\nToolbarModule -->\n\nMaterialModule->ToolbarModule\n\n\n\n\n\nPanelComponent\n\nPanelComponent\n\nPanelModule -->\n\nPanelComponent->PanelModule\n\n\n\n\n\nPanelComponent \n\nPanelComponent \n\nPanelComponent  -->\n\nPanelModule->PanelComponent \n\n\n\n\n\nSignUpService\n\nSignUpService\n\n\n\nSignUpModule\n\nSignUpModule\n\nSignUpModule -->\n\nSignUpService->SignUpModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nToolbarModule -->\n\nToolbarComponent->ToolbarModule\n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nToolbarModule->ToolbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"unit-test.html":{"url":"unit-test.html","title":"unit-test - unit-test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n  Unit test coverage\n\n\n\n    \n    \n    \n    \n\n\n\n    \n        \n            File\n            Statements\n            Branches\n            Functions\n            Lines\n        \n    \n    \n        \n            \n                \n                    projects/netgrif-application-engine/src/lib/authentication/authentication.factory.ts\n            \n            \n                0 %\n                (0/7)\n            \n            \n                0 %\n                (0/6)\n            \n            \n                0 %\n                (0/1)\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts\n            \n            \n                26 %\n                (7/27)\n            \n            \n                0 %\n                (0/14)\n            \n            \n                8 %\n                (1/12)\n            \n            \n                30 %\n                (7/23)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/services/authentication-interceptor.ts\n            \n            \n                22 %\n                (4/18)\n            \n            \n                0 %\n                (0/10)\n            \n            \n                20 %\n                (1/5)\n            \n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/services/authentication-method.service.ts\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                50 %\n                (1/2)\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts\n            \n            \n                36 %\n                (9/25)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                9 %\n                (1/11)\n            \n            \n                35 %\n                (7/20)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/services/guard/authentication-guard.service.ts\n            \n            \n                24 %\n                (7/29)\n            \n            \n                0 %\n                (0/10)\n            \n            \n                20 %\n                (1/5)\n            \n            \n                21 %\n                (5/24)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/services/methods/basic-authentication/basic-authentication.service.ts\n            \n            \n                25 %\n                (6/24)\n            \n            \n                0 %\n                (0/16)\n            \n            \n                25 %\n                (1/4)\n            \n            \n                20 %\n                (4/20)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/services/methods/null-authentication/null-authentication.service.ts\n            \n            \n                67 %\n                (6/9)\n            \n            \n                0 %\n                (0/2)\n            \n            \n                25 %\n                (1/4)\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts\n            \n            \n                78 %\n                (7/9)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                17 %\n                (1/6)\n            \n            \n                78 %\n                (7/9)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts\n            \n            \n                41 %\n                (11/27)\n            \n            \n                0 %\n                (0/8)\n            \n            \n                13 %\n                (1/8)\n            \n            \n                36 %\n                (9/25)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/sign-up/services/sign-up.service.ts\n            \n            \n                100 %\n                (3/3)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                50 %\n                (1/2)\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/card/abstract-card.ts\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (1/1)\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/card/forgotten-password-card/forgotten-password-panel.component.ts\n            \n            \n                60 %\n                (6/10)\n            \n            \n                0 %\n                (0/2)\n            \n            \n                25 %\n                (1/4)\n            \n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts\n            \n            \n                55 %\n                (6/11)\n            \n            \n                0 %\n                (0/2)\n            \n            \n                25 %\n                (1/4)\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                    projects/netgrif-application-engine/src/lib/card/registration-card/password.validator.ts\n            \n            \n                0 %\n                (0/8)\n            \n            \n                0 %\n                (0/9)\n            \n            \n                0 %\n                (0/1)\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts\n            \n            \n                50 %\n                (6/12)\n            \n            \n                0 %\n                (0/2)\n            \n            \n                25 %\n                (1/4)\n            \n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts\n            \n            \n                56 %\n                (5/9)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                20 %\n                (1/5)\n            \n            \n                56 %\n                (5/9)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts\n            \n            \n                93 %\n                (25/27)\n            \n            \n                71 %\n                (10/14)\n            \n            \n                100 %\n                (5/5)\n            \n            \n                93 %\n                (25/27)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts\n            \n            \n                95 %\n                (18/19)\n            \n            \n                89 %\n                (8/9)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts\n            \n            \n                71 %\n                (17/24)\n            \n            \n                75 %\n                (6/8)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                70 %\n                (16/23)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts\n            \n            \n                100 %\n                (6/6)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (3/3)\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts\n            \n            \n                91 %\n                (21/23)\n            \n            \n                50 %\n                (2/4)\n            \n            \n                100 %\n                (8/8)\n            \n            \n                90 %\n                (18/20)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n            \n            \n                97 %\n                (33/34)\n            \n            \n                71 %\n                (5/7)\n            \n            \n                100 %\n                (12/12)\n            \n            \n                96 %\n                (26/27)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/panel/panel.component.ts\n            \n            \n                71 %\n                (10/14)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                20 %\n                (1/5)\n            \n            \n                82 %\n                (9/11)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/toolbar/select-language.service.ts\n            \n            \n                63 %\n                (5/8)\n            \n            \n                0 %\n                (0/2)\n            \n            \n                50 %\n                (2/4)\n            \n            \n                67 %\n                (4/6)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts\n            \n            \n                86 %\n                (6/7)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                33 %\n                (1/3)\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/user/models/user.ts\n            \n            \n                25 %\n                (3/12)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                33 %\n                (1/3)\n            \n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/user/services/user.service.ts\n            \n            \n                28 %\n                (8/29)\n            \n            \n                0 %\n                (0/10)\n            \n            \n                8 %\n                (1/13)\n            \n            \n                33 %\n                (7/21)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTHENTICATION_FEATURE_KEY   (projects/.../authentication.state.ts)\n                        \n                        \n                            authReducer   (projects/.../authentication.redurcers.ts)\n                        \n                        \n                            initialState   (projects/.../user.reducers.ts)\n                        \n                        \n                            initialState   (projects/.../authentication.state.ts)\n                        \n                        \n                            login   (projects/.../authentication.actions.ts)\n                        \n                        \n                            loginFailure   (projects/.../authentication.actions.ts)\n                        \n                        \n                            loginFailure   (projects/.../user.actions.ts)\n                        \n                        \n                            loginSuccess   (projects/.../authentication.actions.ts)\n                        \n                        \n                            loginSuccess   (projects/.../user.actions.ts)\n                        \n                        \n                            loginUser   (projects/.../user.actions.ts)\n                        \n                        \n                            logout   (projects/.../authentication.actions.ts)\n                        \n                        \n                            logoutUser   (projects/.../user.actions.ts)\n                        \n                        \n                            PUBLISHERS   (projects/.../log-publisher.service.ts)\n                        \n                        \n                            selectAuthentication   (projects/.../authentication.selectors.ts)\n                        \n                        \n                            selectIsAuthenticated   (projects/.../authentication.selectors.ts)\n                        \n                        \n                            selectLoggedUser   (projects/.../user.selectors.ts)\n                        \n                        \n                            selectLoggedUser   (projects/.../authentication.selectors.ts)\n                        \n                        \n                            selectUser   (projects/.../user.selectors.ts)\n                        \n                        \n                            USER_FEATURE_KEY   (projects/.../user.reducers.ts)\n                        \n                        \n                            userReducer   (projects/.../user.reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHENTICATION_FEATURE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nae-auth'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isAuthenticated: false,\n    session: null,\n    error: null\n}\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/authentication/store/reducers/authentication.redurcers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n    initialState,\n    // on(login, (state) => ({...state, isAuthenticated: true})),\n    on(loginSuccess, (state, {user}) => ({...state, isAuthenticated: true, user, error: null})),\n    on(loginFailure, (state, {error}) => ({...state, isAuthenticated: true, user: null, error})),\n    on(logout, (state) => initialState),\n)\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    user: null,\n    error: null\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_FEATURE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nae-user'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n    initialState,\n    on(loginUser, (state, {user}) => ({...state, user})),\n    on(loginSuccess, (state, {user}) => ({...state, user, error: null})),\n    on(loginFailure, (state, {error}) => ({...state, user: null, error})),\n    on(logoutUser, (state) => initialState),\n)\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/authentication/store/actions/authentication.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    AuthenticationActionTypes.LOGIN,\n    props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    AuthenticationActionTypes.LOGIN_FAILURE,\n    props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    AuthenticationActionTypes.LOGIN_SUCCESS,\n    props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    AuthenticationActionTypes.LOGOUT,\n)\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/user/store/actions/user.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loginFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    UserActionTypes.SET_USER_FAILURE,\n    props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    UserActionTypes.SET_USER_SUCCESS,\n    props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    UserActionTypes.SET_USER,\n    props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logoutUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    UserActionTypes.REMOVE_USER,\n)\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PUBLISHERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ConsoleLogPublisher,\n    LocalStorageLogPublisher\n}\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/authentication/store/selectors/authentication.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : state => state[AUTHENTICATION_FEATURE_KEY]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIsAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n    selectAuthentication,\n    (state: AuthState) => state.isAuthenticated\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLoggedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n    selectAuthentication,\n    (state: AuthState) => state.user\n)\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/user/store/selectors/user.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectLoggedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n    selectUser,\n    (state: UserState) => state.user\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : state => state[USER_FEATURE_KEY]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
