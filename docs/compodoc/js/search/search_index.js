var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AbstractLoggerService.html",[0,0.205,1,1.379]],["body/classes/AbstractLoggerService.html",[0,0.186,1,1.537,2,0.698,3,0.744,4,0.344,5,0.292,6,0.463,7,0.349,8,0.698,9,0.244,10,0.721,11,2.093,12,1.516,13,1.537,14,1.338,15,0.95,16,1.776,17,1.776,18,0.744,19,2.014,20,1.776,21,2.014,22,1.688,23,2.264,24,0.609,25,1.089,26,1.201,27,1.753,28,2.509,29,1.243,30,0.054,31,1.243,32,0.971,33,1.076,34,1.338,35,1.537,36,1.608,37,1.688,38,1.435,39,2.52,40,2.428,41,1.608,42,2.451,43,1.381,44,1.781,45,1.688,46,1.608,47,1.688,48,1.608,49,1.688,50,1.753,51,1.736,52,1.608,53,1.688,54,1.608,55,1.25,56,1.688,57,1.608,58,1.688,59,1.338,60,1.608,61,1.608,62,1.608,63,0.767,64,0.95,65,0.698,66,0.344,67,0.95,68,0.721,69,0.698,70,0.867,71,1.082,72,0.609,73,0.802,74,0.802,75,0.926,76,0.926,77,0.926,78,0.531,79,1.25,80,0.698,81,1.082,82,1.082,83,1.25,84,0.802,85,1.25,86,0.802,87,1.688,88,1.019,89,1.082,90,1.25,91,1.082,92,1.082,93,0.609,94,0.4,95,1.082,96,1.082,97,1.082,98,1.082,99,1.082,100,1.082,101,1.082,102,0.926,103,0.926,104,0.802,105,0.802,106,0.016,107,0.025,108,0.016]],["title/classes/ConsoleLogPublisher.html",[0,0.205,109,1.379]],["body/classes/ConsoleLogPublisher.html",[0,0.188,2,1.101,3,0.542,4,0.542,5,0.461,6,0.428,7,0.323,9,0.385,10,1.009,11,1.524,14,1.101,15,1.33,18,1.094,24,0.961,25,1.524,26,1.249,27,1.787,29,1.157,30,0.053,31,1.157,32,0.928,33,1.002,34,1.101,38,0.729,43,1.436,44,1.787,50,0.961,63,1.081,66,1.008,68,1.249,69,1.101,70,0.631,79,1.75,80,1.886,88,0.838,105,1.265,106,0.025,107,0.034,108,0.025,109,1.75,110,2.924,111,1.265,112,2.048,113,2.363,114,3.255,115,2.038,116,2.71,117,2.038,118,2.538,119,2.71,120,2.538,121,2.038,122,2.038,123,1.708,124,2.538,125,2.538,126,2.538,127,4.346,128,2.538,129,2.538,130,4.346,131,2.538,132,2.538,133,2.538,134,2.538,135,2.538,136,2.538,137,1.265,138,2.538]],["title/classes/LocalStorageLogPublisher.html",[0,0.205,139,1.379]],["body/classes/LocalStorageLogPublisher.html",[0,0.158,2,0.922,3,0.454,4,0.454,5,0.385,6,0.42,7,0.341,9,0.322,10,0.889,11,1.343,12,1.382,14,0.922,15,1.172,18,1.108,24,0.804,25,1.343,26,1.153,27,1.74,29,1.049,30,0.054,31,1.049,32,0.911,33,0.908,34,0.922,38,1.279,43,1.325,44,1.685,63,0.908,66,1.006,68,1.225,69,0.922,70,0.528,79,1.542,80,1.74,88,0.702,93,1.172,94,0.528,105,1.059,106,0.021,107,0.03,108,0.021,111,1.059,112,1.931,113,2.082,114,3.091,115,2.484,116,2.456,117,1.705,119,2.456,121,1.705,122,1.705,137,1.059,139,1.542,140,2.869,141,2.455,142,2.931,143,3.65,144,4.263,145,1.705,146,1.059,147,2.124,148,1.705,149,1.223,150,3.094,151,2.124,152,2.124,153,3.094,154,2.124,155,2.124,156,2.124,157,3.094,158,3.094,159,3.094,160,3.094,161,3.094,162,3.094,163,2.124,164,2.124,165,2.124,166,2.124,167,2.124,168,2.124,169,2.124,170,2.124]],["title/classes/LogEntry.html",[0,0.205,66,0.591]],["body/classes/LogEntry.html",[0,0.279,2,0.691,3,0.34,4,0.34,5,0.289,6,0.446,7,0.336,9,0.242,10,0.715,12,1.841,13,2.148,15,0.942,18,1.039,22,1.674,23,2.258,24,0.603,27,1.677,29,1.197,30,0.054,31,0.457,32,0.851,33,0.619,38,1.348,39,2.258,40,0.793,42,2.258,43,0.822,50,1.509,51,1.726,55,1.527,59,1.729,63,0.396,66,0.532,67,1.577,68,1.327,70,0.619,72,0.603,78,0.526,83,0.793,84,1.24,85,1.527,86,1.986,88,1.316,90,0.793,93,0.603,94,0.396,106,0.016,107,0.024,108,0.016,123,1.071,137,0.793,145,1.998,146,0.793,149,2.8,171,1.965,172,0.917,173,3.199,174,2.061,175,2.781,176,2.459,177,1.998,178,2.488,179,1.278,180,2.781,181,2.781,182,2.781,183,3.199,184,1.592,185,1.592,186,1.592,187,1.592,188,1.592,189,1.998,190,1.998,191,1.998,192,1.592,193,1.998,194,1.998,195,1.998,196,1.998,197,1.592,198,1.592,199,1.998,200,1.278,201,1.278,202,1.998,203,1.278,204,1.998,205,2.459,206,1.998,207,1.278,208,1.998,209,1.278,210,3.343,211,1.278,212,1.278,213,1.278,214,1.278,215,1.278,216,1.998]],["title/interfaces/LogEntryConfiguration.html",[67,1.047,78,0.914]],["body/interfaces/LogEntryConfiguration.html",[0,0.26,3,0.423,4,0.423,5,0.36,6,0.195,7,0.147,9,0.301,10,0.845,12,1.569,13,1.934,18,1.008,23,2.065,29,1.008,30,0.054,32,0.749,33,1.148,38,1.248,39,2.164,40,0.988,42,2.065,50,1.328,51,1.934,55,2.35,59,1.683,63,0.493,66,0.423,67,1.569,68,1.292,70,0.732,72,0.75,78,0.655,83,0.988,84,2.065,85,1.748,86,2.164,88,1.434,90,0.988,93,0.75,94,0.493,106,0.019,107,0.029,108,0.019,123,1.334,137,1.466,146,1.466,149,2.387,171,0.86,172,1.141,173,2.815,174,1.334,175,1.591,176,1.591,177,1.591,179,1.591,180,2.361,181,2.361,182,2.361,183,3.485,189,1.591,190,1.591,191,1.591,193,1.591,194,1.591,195,1.591,196,1.591,199,3.115,200,2.361,201,2.361,202,3.327,203,1.591,204,2.361,205,2.815,206,2.361,207,1.591,208,2.361,209,1.591,210,3.608,211,1.591,212,1.591,213,1.591,214,1.591,215,1.591,216,2.361,217,1.334]],["title/classes/LogPublisher.html",[0,0.205,112,1.2]],["body/classes/LogPublisher.html",[0,0.219,2,1.278,3,0.629,4,0.629,5,0.534,6,0.472,7,0.357,9,0.447,10,1.116,11,1.885,15,1.47,18,0.987,24,1.115,25,1.685,26,1.327,27,1.749,29,1.116,30,0.053,31,1.116,32,0.928,33,0.966,34,1.685,38,1.116,43,1.283,44,1.749,63,0.966,66,0.987,68,1.248,69,1.278,70,0.732,80,2.181,106,0.029,107,0.038,108,0.029,111,1.467,112,1.685,113,2.923,114,3.108,119,2.613,148,2.364,218,3.23,219,3.883,220,2.944,221,2.944,222,2.944,223,2.944]],["title/injectables/LogPublisherService.html",[26,0.795,64,1.047]],["body/injectables/LogPublisherService.html",[0,0.17,3,0.489,4,0.489,5,0.415,6,0.473,7,0.357,9,0.347,10,0.938,12,1.728,14,1.905,15,1.236,18,0.813,22,2.197,24,1.441,26,1.094,27,1.779,29,0.938,30,0.054,31,0.938,32,0.887,33,0.812,43,1.258,44,1.572,63,1.135,64,1.236,65,0.993,66,0.887,68,1.094,70,0.812,88,1.371,93,0.866,94,0.812,102,1.317,103,1.317,106,0.022,107,0.032,108,0.022,109,1.627,112,2.038,139,1.627,141,1.317,142,1.837,149,1.317,171,2.084,174,3.071,224,1.539,225,1.317,226,3.807,227,3.807,228,4.151,229,3.265,230,3.265,231,2.793,232,3.265,233,2.288,234,3.265,235,2.288,236,3.265,237,2.288,238,3.807,239,3.807,240,2.288,241,2.288,242,2.288,243,2.288,244,1.837,245,2.288,246,2.288,247,2.288,248,2.288,249,3.265,250,2.288,251,3.265,252,2.288,253,2.288,254,2.288,255,2.288,256,2.288,257,2.288,258,2.288]],["title/interfaces/LoggerConfiguration.html",[35,1.379,78,0.914]],["body/interfaces/LoggerConfiguration.html",[0,0.245,1,1.642,3,0.704,4,0.495,5,0.421,6,0.228,7,0.172,8,1.006,9,0.352,10,0.947,11,1.914,12,1.248,13,1.155,14,1.006,16,1.335,17,1.335,18,0.704,20,1.335,23,2.402,25,1.006,26,1.2,30,0.054,32,0.495,33,0.82,34,1.43,35,1.911,37,1.559,38,1.317,39,2.479,40,2.199,42,2.402,44,1.736,45,1.559,47,1.559,49,1.559,50,1.786,51,1.642,53,1.559,55,1.155,56,1.559,58,1.559,59,1.006,63,0.954,64,1.248,65,1.006,66,0.495,67,1.452,68,0.947,69,1.006,70,1.039,71,1.559,72,0.878,73,1.155,74,1.155,75,1.335,76,1.335,77,1.335,78,0.766,79,1.911,80,1.006,81,1.559,82,1.559,83,1.642,84,1.155,85,1.642,86,1.155,87,2.217,88,1.267,89,1.559,90,1.642,91,1.559,92,1.559,93,0.878,94,0.577,95,1.559,96,1.559,97,1.559,98,1.559,99,1.559,100,1.559,101,1.559,102,1.335,103,1.335,104,1.155,105,1.155,106,0.023,107,0.032,108,0.023,217,1.559]],["title/injectables/LoggerService.html",[64,1.047,104,1.379]],["body/injectables/LoggerService.html",[0,0.188,1,2.35,3,0.749,4,0.348,5,0.295,6,0.249,7,0.188,8,0.706,9,0.247,10,0.728,11,2.074,12,1.523,13,1.549,14,1.349,15,0.959,16,1.79,17,1.79,18,0.749,19,2.033,20,1.79,21,2.033,23,2.164,24,0.616,25,1.099,26,1.207,27,1.726,29,1.248,30,0.054,31,1.248,32,0.974,33,1.08,34,1.349,35,1.549,37,1.704,38,1.438,39,2.525,40,2.434,42,2.456,43,1.387,44,1.786,45,1.704,47,1.704,49,1.704,50,1.758,51,1.748,53,1.704,55,1.262,56,1.704,58,1.704,59,1.349,63,0.773,64,0.959,65,0.706,66,0.348,67,0.959,68,0.728,69,0.706,70,0.872,71,1.096,72,0.616,73,0.811,74,0.811,75,0.938,76,0.938,77,0.938,78,0.538,79,1.549,80,0.706,81,1.096,82,1.096,83,1.262,84,0.811,85,1.262,86,0.811,87,1.704,88,1.027,89,1.096,90,1.262,91,1.096,92,1.096,93,0.616,94,0.405,95,1.096,96,1.096,97,1.096,98,1.096,99,1.096,100,1.096,101,1.096,102,0.938,103,0.938,104,1.262,105,0.811,106,0.016,107,0.025,108,0.016,116,3.001,224,1.096,259,1.628,260,1.628,261,1.628,262,1.628,263,1.628,264,1.628,265,1.628,266,1.628,267,1.628,268,1.628]],["title/modules/MaterialModule.html",[269,2.221,270,1.861]],["body/modules/MaterialModule.html",[0,0.207,3,0.596,4,0.596,5,0.506,6,0.275,7,0.207,30,0.051,63,1.284,65,1.211,70,0.694,106,0.027,107,0.037,108,0.027,270,2.521,271,1.878,272,2.79,273,3.746,274,3.746,275,2.24,276,3.746,277,3.746,278,3.746,279,3.746,280,3.746,281,3.746,282,3.746,283,3.746,284,3.746,285,3.746,286,3.746,287,3.746,288,3.746,289,3.746,290,3.746,291,3.746,292,3.746,293,3.746,294,3.746,295,3.746,296,3.746,297,3.746,298,3.746,299,3.746,300,3.746,301,3.746,302,3.746,303,3.746,304,3.746,305,3.746,306,3.746,307,3.746,308,3.746,309,3.746,310,3.746,311,2.24,312,3.746,313,2.79,314,2.79,315,3.746,316,2.79,317,3.746,318,2.79,319,3.746,320,2.79,321,3.746,322,2.79,323,3.746,324,2.79,325,3.746,326,2.79,327,2.24,328,2.79,329,2.24]],["title/coverage.html",[330,2.506]],["body/coverage.html",[0,0.358,1,1.492,5,0.543,6,0.518,7,0.391,8,1.9,18,0.839,26,0.86,30,0.052,32,0.64,35,1.492,64,1.486,66,0.64,67,1.134,72,1.961,78,1.297,94,0.745,104,1.492,106,0.029,107,0.038,108,0.029,109,1.492,110,2.014,111,2.183,112,1.299,139,1.492,140,2.014,141,1.724,171,2.017,172,2.26,218,2.014,225,2.26,231,2.014,330,2.014,331,2.994,332,2.994,333,2.403,334,2.994,335,2.994,336,2.994,337,2.994,338,3.925,339,2.994,340,3.925,341,3.925,342,2.994,343,2.994,344,2.994,345,2.403,346,2.994,347,2.403,348,2.403,349,2.403]],["title/dependencies.html",[350,2.335,351,2.229]],["body/dependencies.html",[30,0.054,65,1.526,106,0.034,107,0.043,108,0.034,244,2.823,275,2.823,311,2.823,351,2.366,352,3.517,353,4.246,354,5.288,355,3.517,356,4.349,357,3.517,358,3.517,359,4.349,360,4.349,361,3.517,362,3.517,363,3.517,364,3.517,365,3.517,366,3.517,367,3.517,368,3.517,369,3.517]],["title/miscellaneous/enumerations.html",[370,1.013,371,2.66]],["body/miscellaneous/enumerations.html",[3,0.813,6,0.374,7,0.283,8,1.651,9,0.577,16,2.191,17,2.191,20,2.191,30,0.052,50,1.728,72,1.441,73,1.896,74,1.896,75,2.191,76,2.191,77,2.191,106,0.037,107,0.045,108,0.037,146,2.623,370,1.651,371,3.055,372,3.805]],["title/miscellaneous/functions.html",[370,1.013,373,2.229]],["body/miscellaneous/functions.html",[6,0.393,7,0.296,9,0.605,29,1.147,30,0.05,31,1.147,33,0.993,38,1.147,43,1.318,106,0.039,107,0.046,108,0.039,345,3.203,347,3.768,370,1.731,373,2.685,374,3.99,375,3.99,376,3.99]],["title/index.html",[9,0.354,377,2.335,378,2.335]],["body/index.html",[4,0.662,7,0.23,30,0.039,31,0.89,94,0.771,106,0.03,107,0.039,108,0.03,353,2.487,379,3.098,380,3.098,381,4.014,382,3.098,383,4.453,384,4.453,385,3.098,386,3.098,387,3.098,388,4.014,389,4.879,390,5.088,391,3.098,392,3.098,393,3.098,394,3.098,395,3.098,396,3.098,397,3.098,398,3.098,399,3.098,400,3.098,401,3.098,402,4.453,403,4.453,404,4.453,405,3.098,406,4.879,407,3.098,408,3.098,409,3.098,410,3.098,411,3.098,412,3.098,413,3.098,414,4.014,415,2.701,416,4.71,417,2.085,418,4.014,419,4.014,420,3.098,421,4.71,422,3.098,423,3.098,424,3.098,425,4.453,426,3.098,427,3.098,428,3.098,429,2.487,430,3.098]],["title/modules.html",[271,2.506]],["body/modules.html",[30,0.047,106,0.041,107,0.047,108,0.041,270,2.822,271,2.822,431,4.194,432,4.194,433,4.194]],["title/overview.html",[434,2.99]],["body/overview.html",[2,1.718,30,0.046,73,1.974,74,2.329,106,0.039,107,0.046,108,0.039,217,2.665,224,2.665,269,3.752,327,3.179,329,3.179,351,2.665,429,3.179,434,3.179,435,3.961,436,3.961,437,3.961,438,4.673,439,3.961,440,3.961]],["title/unit-test.html",[415,2.008,417,2.008]],["body/unit-test.html",[5,0.54,6,0.487,7,0.367,8,1.292,18,0.836,30,0.054,94,0.741,106,0.029,107,0.038,108,0.029,110,2.003,111,2.177,140,2.003,141,1.714,171,1.697,172,1.714,218,2.003,225,1.714,330,2.003,333,2.39,348,2.39,349,2.39,373,2.003,415,2.003,417,2.003,441,2.977,442,2.977,443,3.911,444,3.911,445,3.911,446,2.977,447,5.173,448,2.977,449,2.977,450,2.977,451,2.977,452,2.977,453,2.977,454,2.977,455,2.977,456,2.977,457,2.977,458,2.977,459,2.977,460,2.977,461,2.977,462,2.977,463,2.977,464,2.977,465,2.977,466,2.977,467,3.911,468,2.977,469,2.977,470,2.977,471,2.977,472,2.977,473,2.977,474,2.977,475,3.911,476,2.977,477,2.977]],["title/miscellaneous/variables.html",[370,1.013,478,2.66]],["body/miscellaneous/variables.html",[6,0.388,7,0.293,9,0.599,30,0.052,32,0.843,59,1.712,106,0.039,107,0.046,108,0.039,109,1.967,137,1.967,139,1.967,146,1.967,171,1.712,225,2.685,231,3.138,370,1.712,478,3.168,479,3.946]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":72,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.10.2",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":73,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)[0",{"_index":164,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["1.10.0",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["10/14",{"_index":446,"title":{},"body":{"unit-test.html":{}}}],["100",{"_index":447,"title":{},"body":{"unit-test.html":{}}}],["13/13",{"_index":460,"title":{},"body":{"unit-test.html":{}}}],["16/23",{"_index":474,"title":{},"body":{"unit-test.html":{}}}],["17/18",{"_index":469,"title":{},"body":{"unit-test.html":{}}}],["17/24",{"_index":470,"title":{},"body":{"unit-test.html":{}}}],["18/19",{"_index":464,"title":{},"body":{"unit-test.html":{}}}],["18/20",{"_index":455,"title":{},"body":{"unit-test.html":{}}}],["2",{"_index":74,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["2.0.8",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":476,"title":{},"body":{"unit-test.html":{}}}],["2/4",{"_index":452,"title":{},"body":{"unit-test.html":{}}}],["21/23",{"_index":450,"title":{},"body":{"unit-test.html":{}}}],["25",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["25/27",{"_index":444,"title":{},"body":{"unit-test.html":{}}}],["3",{"_index":75,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["3/3",{"_index":477,"title":{},"body":{"unit-test.html":{}}}],["3/9",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["33/34",{"_index":462,"title":{},"body":{"unit-test.html":{}}}],["4",{"_index":76,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["4/4",{"_index":467,"title":{},"body":{"unit-test.html":{}}}],["40/41",{"_index":457,"title":{},"body":{"unit-test.html":{}}}],["5",{"_index":440,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":448,"title":{},"body":{"unit-test.html":{}}}],["50",{"_index":451,"title":{},"body":{"unit-test.html":{}}}],["6",{"_index":77,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["6.5.4",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":475,"title":{},"body":{"unit-test.html":{}}}],["6/8",{"_index":472,"title":{},"body":{"unit-test.html":{}}}],["7/9",{"_index":459,"title":{},"body":{"unit-test.html":{}}}],["70",{"_index":473,"title":{},"body":{"unit-test.html":{}}}],["71",{"_index":445,"title":{},"body":{"unit-test.html":{}}}],["75",{"_index":471,"title":{},"body":{"unit-test.html":{}}}],["78",{"_index":458,"title":{},"body":{"unit-test.html":{}}}],["8.2.3",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":453,"title":{},"body":{"unit-test.html":{}}}],["8/9",{"_index":466,"title":{},"body":{"unit-test.html":{}}}],["89",{"_index":465,"title":{},"body":{"unit-test.html":{}}}],["9.0.0",{"_index":353,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["90",{"_index":454,"title":{},"body":{"unit-test.html":{}}}],["91",{"_index":449,"title":{},"body":{"unit-test.html":{}}}],["93",{"_index":443,"title":{},"body":{"unit-test.html":{}}}],["94",{"_index":468,"title":{},"body":{"unit-test.html":{}}}],["95",{"_index":463,"title":{},"body":{"unit-test.html":{}}}],["97",{"_index":461,"title":{},"body":{"unit-test.html":{}}}],["98",{"_index":456,"title":{},"body":{"unit-test.html":{}}}],["_log",{"_index":226,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["_publishers",{"_index":227,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["a11ymodule",{"_index":315,"title":{},"body":{"modules/MaterialModule.html":{}}}],["abstract",{"_index":80,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["abstractloggerservice",{"_index":1,"title":{"classes/AbstractLoggerService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["abstractloggerservice:20",{"_index":267,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:21",{"_index":268,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:36",{"_index":264,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:40",{"_index":266,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:48",{"_index":262,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:52",{"_index":260,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:56",{"_index":265,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:60",{"_index":261,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:64",{"_index":263,"title":{},"body":{"injectables/LoggerService.html":{}}}],["accessors",{"_index":22,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"injectables/LogPublisherService.html":{}}}],["according",{"_index":194,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["additional",{"_index":181,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["angular",{"_index":383,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":316,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/drag",{"_index":313,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/portal",{"_index":324,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/scrolling",{"_index":326,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/stepper",{"_index":318,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/table",{"_index":320,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/tree",{"_index":322,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/common",{"_index":275,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":65,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":311,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":395,"title":{},"body":{"index.html":{}}}],["application",{"_index":7,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":40,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["artifacts",{"_index":407,"title":{},"body":{"index.html":{}}}],["attributes",{"_index":199,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["automatically",{"_index":396,"title":{},"body":{"index.html":{}}}],["available",{"_index":432,"title":{},"body":{"modules.html":{}}}],["behaviorsubject",{"_index":239,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["behaviorsubject(null",{"_index":250,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["boolean",{"_index":55,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["bootstrap",{"_index":436,"title":{},"body":{"overview.html":{}}}],["branches",{"_index":441,"title":{},"body":{"unit-test.html":{}}}],["break",{"_index":130,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["browse",{"_index":433,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":406,"title":{},"body":{"index.html":{}}}],["case",{"_index":127,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["catch",{"_index":160,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["cdksteppermodule",{"_index":317,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktablemodule",{"_index":319,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktreemodule",{"_index":321,"title":{},"body":{"modules/MaterialModule.html":{}}}],["change",{"_index":398,"title":{},"body":{"index.html":{}}}],["check",{"_index":428,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"overview.html":{}}}],["clear",{"_index":114,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["clearall",{"_index":228,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["cli",{"_index":384,"title":{},"body":{"index.html":{}}}],["code",{"_index":400,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":274,"title":{},"body":{"modules/MaterialModule.html":{}}}],["component",{"_index":403,"title":{},"body":{"index.html":{}}}],["config",{"_index":13,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["configuration",{"_index":183,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["console.clear",{"_index":124,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.debug('log",{"_index":165,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["console.debug(entry.tostring",{"_index":129,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.error(e",{"_index":168,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["console.error(entry.tostring",{"_index":132,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.info(entry.tostring",{"_index":134,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.log(entry.tostring",{"_index":138,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.warn(entry.tostring",{"_index":136,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["consolelogpublisher",{"_index":109,"title":{"classes/ConsoleLogPublisher.html":{}},"body":{"classes/ConsoleLogPublisher.html":{},"injectables/LogPublisherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":93,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{}}}],["constructor(level",{"_index":177,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["constructor(private",{"_index":81,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["constructor(publisherservice",{"_index":25,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["coverage",{"_index":330,"title":{"coverage.html":{}},"body":{"coverage.html":{},"unit-test.html":{}}}],["date",{"_index":173,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["debug",{"_index":16,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":37,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["declarations",{"_index":327,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["default",{"_index":137,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"miscellaneous/variables.html":{}}}],["default_key",{"_index":143,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["defaults",{"_index":206,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["defined",{"_index":27,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{}}}],["deleted",{"_index":162,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["deleted.date.toisostring",{"_index":166,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["dependencies",{"_index":351,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":179,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["dev",{"_index":392,"title":{},"body":{"index.html":{}}}],["development",{"_index":387,"title":{},"body":{"index.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":405,"title":{},"body":{"index.html":{}}}],["directory",{"_index":410,"title":{},"body":{"index.html":{}}}],["dist",{"_index":409,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["dragdropmodule",{"_index":312,"title":{},"body":{"modules/MaterialModule.html":{}}}],["drop",{"_index":314,"title":{},"body":{"modules/MaterialModule.html":{}}}],["dynamic",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":161,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["e2e",{"_index":422,"title":{},"body":{"index.html":{}}}],["end",{"_index":421,"title":{},"body":{"index.html":{}}}],["engine",{"_index":380,"title":{},"body":{"index.html":{}}}],["engine/src/lib/logger/log",{"_index":171,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"coverage.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/logger/logger.service.ts",{"_index":8,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/logger.service.ts:20",{"_index":36,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:21",{"_index":28,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:32",{"_index":62,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:36",{"_index":54,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:40",{"_index":60,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:48",{"_index":48,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:52",{"_index":41,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:56",{"_index":57,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:60",{"_index":46,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:64",{"_index":52,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/logger.service.ts:72",{"_index":259,"title":{},"body":{"injectables/LoggerService.html":{}}}],["engine/src/lib/logger/publishers/console",{"_index":110,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/publishers/local",{"_index":140,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/publishers/log",{"_index":218,"title":{},"body":{"classes/LogPublisher.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/material/material.module.ts",{"_index":272,"title":{},"body":{"modules/MaterialModule.html":{}}}],["engine/src/scripts/utils.ts",{"_index":345,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entry",{"_index":68,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["entry.level",{"_index":126,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["entry.ts",{"_index":172,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"coverage.html":{},"unit-test.html":{}}}],["entry.ts:16",{"_index":184,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:17",{"_index":185,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:18",{"_index":186,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:19",{"_index":187,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:20",{"_index":178,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:42",{"_index":198,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:50",{"_index":188,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:61",{"_index":192,"title":{},"body":{"classes/LogEntry.html":{}}}],["enum",{"_index":71,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["enumerations",{"_index":371,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":17,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["error(e.message",{"_index":170,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["error(message",{"_index":45,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["execute",{"_index":418,"title":{},"body":{"index.html":{}}}],["export",{"_index":70,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{}}}],["exports",{"_index":329,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["extends",{"_index":79,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["extra",{"_index":182,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"unit-test.html":{}}}],["files",{"_index":399,"title":{},"body":{"index.html":{}}}],["flag",{"_index":412,"title":{},"body":{"index.html":{}}}],["function",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":373,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"unit-test.html":{}}}],["further",{"_index":424,"title":{},"body":{"index.html":{}}}],["generate",{"_index":402,"title":{},"body":{"index.html":{}}}],["generated",{"_index":382,"title":{},"body":{"index.html":{}}}],["getlevel",{"_index":61,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["getlevelstring",{"_index":197,"title":{},"body":{"classes/LogEntry.html":{}}}],["getpublishers",{"_index":241,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["getting",{"_index":377,"title":{"index.html":{}},"body":{}}],["go",{"_index":427,"title":{},"body":{"index.html":{}}}],["graph",{"_index":431,"title":{},"body":{"modules.html":{}}}],["hammerjs",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":425,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":394,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":63,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{}}}],["imports",{"_index":328,"title":{},"body":{"modules/MaterialModule.html":{}}}],["include",{"_index":195,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["includeloglevel",{"_index":202,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"miscellaneous/enumerations.html":{}}}],["info(message",{"_index":47,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["inherited",{"_index":116,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"injectables/LoggerService.html":{}}}],["injectable",{"_index":64,"title":{"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["injectables",{"_index":224,"title":{},"body":{"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["instance",{"_index":247,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["instanceof",{"_index":214,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["interface",{"_index":78,"title":{"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["interfaces",{"_index":217,"title":{},"body":{"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"overview.html":{}}}],["json",{"_index":191,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["json.parse(logstring",{"_index":155,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["json.stringify(log",{"_index":159,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["json.stringify(this.params",{"_index":209,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["karma",{"_index":420,"title":{},"body":{"index.html":{}}}],["legend",{"_index":435,"title":{},"body":{"overview.html":{}}}],["length",{"_index":376,"title":{},"body":{"miscellaneous/functions.html":{}}}],["level",{"_index":23,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["levelstring",{"_index":176,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["lines",{"_index":442,"title":{},"body":{"unit-test.html":{}}}],["localstorage",{"_index":167,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstorage.getitem(this.location",{"_index":154,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstorage.removeitem(this.location",{"_index":152,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstorage.setitem(this.location",{"_index":158,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstoragelogpublisher",{"_index":139,"title":{"classes/LocalStorageLogPublisher.html":{}},"body":{"classes/LocalStorageLogPublisher.html":{},"injectables/LogPublisherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localstoragelogpublisher.default_key",{"_index":151,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["location",{"_index":113,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["log",{"_index":18,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"unit-test.html":{}}}],["log(entry",{"_index":119,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["log(level",{"_index":49,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["log.push(entry",{"_index":156,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["log.splice(0",{"_index":163,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["logentry",{"_index":66,"title":{"classes/LogEntry.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logentry(level",{"_index":95,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["logentryconfiguration",{"_index":67,"title":{"interfaces/LogEntryConfiguration.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logger.service",{"_index":123,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["loggerconfiguration",{"_index":35,"title":{"interfaces/LoggerConfiguration.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["loggerservice",{"_index":104,"title":{"injectables/LoggerService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logkey",{"_index":144,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["loglevel",{"_index":50,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.all",{"_index":87,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["loglevel.debug",{"_index":128,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel.error",{"_index":131,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel.info",{"_index":133,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel.off",{"_index":91,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["loglevel.warn",{"_index":135,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel[this.level.tostring",{"_index":207,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["logpublisher",{"_index":112,"title":{"classes/LogPublisher.html":{}},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"coverage.html":{}}}],["logpublisher:18",{"_index":122,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["logpublisher:20",{"_index":121,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["logpublisher:6",{"_index":117,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["logpublisherservice",{"_index":26,"title":{"injectables/LogPublisherService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logpublisherservice.instance",{"_index":248,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["logstring",{"_index":153,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["logwithdate",{"_index":84,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["matautocompletemodule",{"_index":276,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbadgemodule",{"_index":277,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":278,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":279,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":280,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":281,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":282,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":107,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":283,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":284,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogmodule",{"_index":285,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":286,"title":{},"body":{"modules/MaterialModule.html":{}}}],["materialmodule",{"_index":270,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules.html":{}}}],["matexpansionmodule",{"_index":287,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":288,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":289,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":290,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":291,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":292,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":293,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":294,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":295,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":296,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":297,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodule",{"_index":298,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":299,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":300,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":301,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":302,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodule",{"_index":303,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":304,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":305,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":306,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":307,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":308,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":309,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":310,"title":{},"body":{"modules/MaterialModule.html":{}}}],["message",{"_index":42,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["methods",{"_index":15,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{}}}],["miscellaneous",{"_index":370,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":269,"title":{"modules/MaterialModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":271,"title":{"modules.html":{}},"body":{"modules/MaterialModule.html":{},"modules.html":{}}}],["more",{"_index":426,"title":{},"body":{"index.html":{}}}],["name",{"_index":31,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":393,"title":{},"body":{"index.html":{}}}],["netgrif",{"_index":379,"title":{},"body":{"index.html":{}}}],["new",{"_index":94,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"index.html":{},"unit-test.html":{}}}],["ng",{"_index":390,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":273,"title":{},"body":{"modules/MaterialModule.html":{}}}],["object",{"_index":59,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(publishers).foreach(key",{"_index":252,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["observable",{"_index":238,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["of(null",{"_index":254,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["optional",{"_index":33,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":429,"title":{},"body":{"index.html":{},"overview.html":{}}}],["overview",{"_index":434,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":350,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":51,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":39,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["portalmodule",{"_index":323,"title":{},"body":{"modules/MaterialModule.html":{}}}],["present",{"_index":200,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["private",{"_index":174,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{}}}],["prod",{"_index":411,"title":{},"body":{"index.html":{}}}],["production",{"_index":413,"title":{},"body":{"index.html":{}}}],["project",{"_index":381,"title":{},"body":{"index.html":{}}}],["projects/.../log",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../logger.service.ts",{"_index":372,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../utils.ts",{"_index":374,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/netgrif",{"_index":6,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["protected",{"_index":11,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["protractor",{"_index":423,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":102,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["providers",{"_index":437,"title":{},"body":{"overview.html":{}}}],["public",{"_index":149,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{}}}],["publish",{"_index":229,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publish(entry",{"_index":234,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher",{"_index":14,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["publisher.clear",{"_index":258,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service",{"_index":69,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["publisher.service.ts",{"_index":225,"title":{},"body":{"injectables/LogPublisherService.html":{},"coverage.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["publisher.service.ts:20",{"_index":240,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:21",{"_index":232,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:30",{"_index":242,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:34",{"_index":237,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:42",{"_index":235,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:49",{"_index":233,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.ts",{"_index":111,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"coverage.html":{},"unit-test.html":{}}}],["publisher.ts:13",{"_index":118,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["publisher.ts:14",{"_index":147,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["publisher.ts:17",{"_index":120,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["publisher.ts:18",{"_index":148,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["publisher.ts:20",{"_index":220,"title":{},"body":{"classes/LogPublisher.html":{}}}],["publisher.ts:6",{"_index":219,"title":{},"body":{"classes/LogPublisher.html":{}}}],["publisher.ts:7",{"_index":115,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["publishers",{"_index":231,"title":{},"body":{"injectables/LogPublisherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["publishers/console",{"_index":245,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publishers/local",{"_index":246,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publishers/log",{"_index":243,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publishers[key](this",{"_index":253,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisherservice",{"_index":34,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["randomstring",{"_index":347,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["randomstring(length",{"_index":375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rc.6",{"_index":386,"title":{},"body":{"index.html":{}}}],["rc.8",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["readme",{"_index":430,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["register",{"_index":230,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["register(publisher",{"_index":236,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["register(this",{"_index":221,"title":{},"body":{"classes/LogPublisher.html":{}}}],["reload",{"_index":397,"title":{},"body":{"index.html":{}}}],["reset",{"_index":439,"title":{},"body":{"overview.html":{}}}],["result",{"_index":106,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":108,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":88,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":103,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["run",{"_index":389,"title":{},"body":{"index.html":{}}}],["running",{"_index":414,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":244,"title":{},"body":{"injectables/LogPublisherService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":401,"title":{},"body":{"index.html":{}}}],["scrollingmodule",{"_index":325,"title":{},"body":{"modules/MaterialModule.html":{}}}],["serialization",{"_index":189,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["serialized",{"_index":190,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["serializeparams",{"_index":86,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["serve",{"_index":391,"title":{},"body":{"index.html":{}}}],["server",{"_index":388,"title":{},"body":{"index.html":{}}}],["set",{"_index":201,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["shouldlog",{"_index":19,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LoggerService.html":{}}}],["shouldlog(level",{"_index":53,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"modules/MaterialModule.html":{},"index.html":{}}}],["started",{"_index":378,"title":{"index.html":{}},"body":{}}],["statements",{"_index":333,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["static",{"_index":142,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"injectables/LogPublisherService.html":{}}}],["storage",{"_index":141,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"injectables/LogPublisherService.html":{},"coverage.html":{},"unit-test.html":{}}}],["stored",{"_index":408,"title":{},"body":{"index.html":{}}}],["str",{"_index":210,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["string",{"_index":38,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/functions.html":{}}}],["stringify",{"_index":193,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["subscribe(entry",{"_index":222,"title":{},"body":{"classes/LogPublisher.html":{}}}],["super(publisherservice",{"_index":105,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["switch",{"_index":125,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["table",{"_index":349,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":348,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["test",{"_index":417,"title":{"unit-test.html":{}},"body":{"index.html":{},"unit-test.html":{}}}],["tests",{"_index":416,"title":{},"body":{"index.html":{}}}],["this._log",{"_index":249,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._log.next(entry",{"_index":256,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._publishers",{"_index":251,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._publishers.foreach(publisher",{"_index":257,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._publishers.push(publisher",{"_index":255,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this.config",{"_index":83,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.config.includeloglevel",{"_index":213,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.config.level",{"_index":89,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.config.logwithdate",{"_index":211,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.config.serializeparams",{"_index":208,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.date",{"_index":203,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.date.toisostring",{"_index":212,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.level",{"_index":90,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.location",{"_index":150,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["this.log(entry",{"_index":223,"title":{},"body":{"classes/LogPublisher.html":{}}}],["this.message",{"_index":204,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.params",{"_index":205,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.params.length",{"_index":215,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.publisher",{"_index":82,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.publisher.publish(entry",{"_index":96,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.serializeparams",{"_index":216,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.shouldlog(level",{"_index":92,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(level",{"_index":101,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.debug",{"_index":98,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.error",{"_index":100,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.info",{"_index":97,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.warn",{"_index":99,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["throw",{"_index":169,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["time",{"_index":196,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["tostring",{"_index":175,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["true",{"_index":85,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["try",{"_index":157,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["tslib",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":415,"title":{"unit-test.html":{}},"body":{"index.html":{},"unit-test.html":{}}}],["use",{"_index":404,"title":{},"body":{"index.html":{}}}],["value",{"_index":146,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":478,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":385,"title":{},"body":{"index.html":{}}}],["via",{"_index":419,"title":{},"body":{"index.html":{}}}],["void",{"_index":44,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["warn",{"_index":20,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":56,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["write",{"_index":180,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["writetolog",{"_index":21,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LoggerService.html":{}}}],["writetolog(level",{"_index":58,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["yes",{"_index":145,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{}}}],["zone.js",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":438,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractLoggerService.html":{"url":"classes/AbstractLoggerService.html","title":"class - AbstractLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                config\n                            \n                            \n                                    Protected\n                                    Readonly\n                                publisher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Protected\n                                shouldLog\n                            \n                            \n                                warn\n                            \n                            \n                                    Protected\n                                writeToLog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    level\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogPublisherService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(level: LogLevel, message: string, ...param: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            shouldLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            writeToLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(level: LogLevel, message: string, params: object)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n\n                \n                    \n                        getlevel()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:32\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogEntry, LogEntryConfiguration} from './log-entry';\nimport {LogPublisherService} from './log-publisher.service';\n\nexport enum LogLevel {\n    ALL = 0,\n    DEBUG = 1,\n    INFO = 2,\n    WARN = 3,\n    ERROR = 4,\n    OFF = 6\n}\n\nexport interface LoggerConfiguration extends LogEntryConfiguration {\n    level?: LogLevel;\n}\n\nexport abstract class AbstractLoggerService {\n\n    protected readonly config: LoggerConfiguration;\n    protected readonly publisher: LogPublisherService;\n\n    protected constructor(private publisherService: LogPublisherService) {\n        this.publisher = publisherService;\n        this.config = {\n            logWithDate: true,\n            serializeParams: true,\n            level: LogLevel.ALL\n        };\n    }\n\n    get level() {\n        return this.config.level;\n    }\n\n    protected shouldLog(level: LogLevel): boolean {\n        return (level >= this.level && level !== LogLevel.OFF) || this.level === LogLevel.ALL;\n    }\n\n    protected writeToLog(level: LogLevel, message: string, params: object): void {\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        const entry = new LogEntry(level, message, params, this.config);\n        this.publisher.publish(entry);\n    }\n\n    info(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.INFO, message, params);\n    }\n\n    debug(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.DEBUG, message, params);\n    }\n\n    warn(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.WARN, message, params);\n    }\n\n    error(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.ERROR, message, params);\n    }\n\n    log(level: LogLevel, message: string, ...param: Array): void {\n        this.writeToLog(level, message, param);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggerService extends AbstractLoggerService {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleLogPublisher.html":{"url":"classes/ConsoleLogPublisher.html","title":"class - ConsoleLogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleLogPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LogPublisher\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                log\n                            \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LogPublisher\n\n                                \n                            \n                        \n                            \n                                    Defined in         LogPublisher:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LogPublisher} from './log-publisher';\nimport {LogEntry} from '../log-entry';\nimport {LogLevel} from '../logger.service';\nimport {LogPublisherService} from '../log-publisher.service';\n\n\nexport class ConsoleLogPublisher extends LogPublisher {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n\n    clear(): void {\n        console.clear();\n    }\n\n    log(entry: LogEntry): void {\n        if (!entry) {\n            return;\n        }\n        switch (entry.level) {\n            case LogLevel.DEBUG:\n                console.debug(entry.toString());\n                break;\n            case LogLevel.ERROR:\n                console.error(entry.toString());\n                break;\n            case LogLevel.INFO:\n                console.info(entry.toString());\n                break;\n            case LogLevel.WARN:\n                console.warn(entry.toString());\n                break;\n            default:\n                console.log(entry.toString());\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalStorageLogPublisher.html":{"url":"classes/LocalStorageLogPublisher.html","title":"class - LocalStorageLogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalStorageLogPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LogPublisher\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                DEFAULT_KEY\n                            \n                            \n                                    Protected\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                log\n                            \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService, logKey?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DEFAULT_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'application-log'\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LogPublisher\n\n                                \n                            \n                        \n                            \n                                    Defined in         LogPublisher:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LogPublisher} from './log-publisher';\nimport {LogEntry} from '../log-entry';\nimport {LogPublisherService} from '../log-publisher.service';\n\nexport class LocalStorageLogPublisher extends LogPublisher {\n\n    public static readonly DEFAULT_KEY = 'application-log';\n\n    constructor(publisherService: LogPublisherService, logKey?: string) {\n        super(publisherService);\n        this.location = !logKey ? LocalStorageLogPublisher.DEFAULT_KEY : logKey;\n    }\n\n    clear(): void {\n        localStorage.removeItem(this.location);\n    }\n\n    log(entry: LogEntry): void {\n        if (!entry) {\n            return;\n        }\n        const logString: string = localStorage.getItem(this.location);\n        let log: LogEntry[];\n        if (!logString) {\n            log = [];\n        } else {\n            log = JSON.parse(logString);\n        }\n        log.push(entry);\n        try {\n            localStorage.setItem(this.location, JSON.stringify(log));\n        } catch (e) {\n            const deleted: LogEntry = log.splice(0, 1)[0];\n            console.debug('Log entry from ' + deleted.date.toISOString() + ' was deleted from the LocalStorage \\'' + this.location + '\\'');\n            try {\n                localStorage.setItem(this.location, JSON.stringify(log));\n            } catch (e) {\n                console.error(e);\n                throw new Error(e.message);\n            }\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogEntry.html":{"url":"classes/LogEntry.html","title":"class - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/log-entry.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                config\n                            \n                            \n                                    Public\n                                    Readonly\n                                date\n                            \n                            \n                                    Public\n                                    Readonly\n                                level\n                            \n                            \n                                    Public\n                                    Readonly\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                serializeParams\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    levelString\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(level: LogLevel, message: string, params?: object, config?: LogEntryConfiguration)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/log-entry.ts:20\n                            \n                        \n\n                \n                    \n                            Log entry class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        LogLevel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nLog level of this entry\n\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nmessage to write to the log\n\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nadditional parameters to write into the log\n\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        LogEntryConfiguration\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nextra class configuration\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogEntryConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/log-entry.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/log-entry.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogLevel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/log-entry.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/log-entry.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/log-entry.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            serializeParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serializeParams()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/log-entry.ts:50\n                \n            \n\n\n            \n                \n                    Serialization of additional parameters of the entry.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Serialized JSON\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/log-entry.ts:61\n                \n            \n\n\n            \n                \n                    Stringify log entry. According to configuration entry can include time, log level and extra parameters\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Log string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        levelString\n                    \n                \n\n                \n                    \n                        getlevelString()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/log-entry.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {LogLevel} from './logger.service';\n\n/**\n * Log entry configuration.\n * All attributes are optional.\n * Attributes that are not present in the configuration object are set to their default value.\n */\nexport interface LogEntryConfiguration {\n    logWithDate?: boolean;\n    serializeParams?: boolean;\n    includeLogLevel?: boolean;\n}\n\nexport class LogEntry {\n\n    public readonly date: Date;\n    public readonly level: LogLevel;\n    public readonly message: string;\n    public readonly params: object;\n    public readonly config: LogEntryConfiguration;\n\n    /**\n     * Log entry class\n     * @param level - Log level of this entry\n     * @param message - message to write to the log\n     * @param params - additional parameters to write into the log\n     * @param config - extra class configuration\n     */\n    constructor(level: LogLevel, message: string, params?: object, config?: LogEntryConfiguration) {\n        this.date = new Date();\n        this.level = level;\n        this.message = message;\n        this.params = params;\n        const defaults: LogEntryConfiguration = {\n            logWithDate: true,\n            serializeParams: true,\n            includeLogLevel: true\n        };\n        this.config = {...defaults, ...config};\n    }\n\n    get levelString(): string {\n        return LogLevel[this.level.toString()];\n    }\n\n    /**\n     * Serialization of additional parameters of the entry.\n     * @return Serialized JSON\n     */\n    private serializeParams(): string {\n        if (!this.config.serializeParams) {\n            return '';\n        }\n        return JSON.stringify(this.params);\n    }\n\n    /**\n     * Stringify log entry. According to configuration entry can include time, log level and extra parameters\n     * @return Log string\n     */\n    toString(): string {\n        let str = '';\n        if (this.config.logWithDate) {\n            str += '[' + this.date.toISOString() + '] ';\n        }\n        if (this.config.includeLogLevel) {\n            str += ' ';\n        }\n        str += this.message;\n        if (this.config.serializeParams && this.params) {\n            if (this.params instanceof Array) {\n                if (this.params.length !== 0) {\n                    str += ' , params: ' + this.serializeParams();\n                }\n            } else {\n                str += ' , params: ' + this.serializeParams();\n            }\n        }\n        return str;\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntryConfiguration.html":{"url":"interfaces/LogEntryConfiguration.html","title":"interface - LogEntryConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LogEntryConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/log-entry.ts\n        \n\n            \n                Description\n            \n            \n                Log entry configuration.\nAll attributes are optional.\nAttributes that are not present in the configuration object are set to their default value.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        includeLogLevel\n                                \n                                \n                                            Optional\n                                        logWithDate\n                                \n                                \n                                            Optional\n                                        serializeParams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        includeLogLevel\n                                    \n                                \n                                \n                                    \n                                        includeLogLevel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logWithDate\n                                    \n                                \n                                \n                                    \n                                        logWithDate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serializeParams\n                                    \n                                \n                                \n                                    \n                                        serializeParams:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {LogLevel} from './logger.service';\n\n/**\n * Log entry configuration.\n * All attributes are optional.\n * Attributes that are not present in the configuration object are set to their default value.\n */\nexport interface LogEntryConfiguration {\n    logWithDate?: boolean;\n    serializeParams?: boolean;\n    includeLogLevel?: boolean;\n}\n\nexport class LogEntry {\n\n    public readonly date: Date;\n    public readonly level: LogLevel;\n    public readonly message: string;\n    public readonly params: object;\n    public readonly config: LogEntryConfiguration;\n\n    /**\n     * Log entry class\n     * @param level - Log level of this entry\n     * @param message - message to write to the log\n     * @param params - additional parameters to write into the log\n     * @param config - extra class configuration\n     */\n    constructor(level: LogLevel, message: string, params?: object, config?: LogEntryConfiguration) {\n        this.date = new Date();\n        this.level = level;\n        this.message = message;\n        this.params = params;\n        const defaults: LogEntryConfiguration = {\n            logWithDate: true,\n            serializeParams: true,\n            includeLogLevel: true\n        };\n        this.config = {...defaults, ...config};\n    }\n\n    get levelString(): string {\n        return LogLevel[this.level.toString()];\n    }\n\n    /**\n     * Serialization of additional parameters of the entry.\n     * @return Serialized JSON\n     */\n    private serializeParams(): string {\n        if (!this.config.serializeParams) {\n            return '';\n        }\n        return JSON.stringify(this.params);\n    }\n\n    /**\n     * Stringify log entry. According to configuration entry can include time, log level and extra parameters\n     * @return Log string\n     */\n    toString(): string {\n        let str = '';\n        if (this.config.logWithDate) {\n            str += '[' + this.date.toISOString() + '] ';\n        }\n        if (this.config.includeLogLevel) {\n            str += ' ';\n        }\n        str += this.message;\n        if (this.config.serializeParams && this.params) {\n            if (this.params instanceof Array) {\n                if (this.params.length !== 0) {\n                    str += ' , params: ' + this.serializeParams();\n                }\n            } else {\n                str += ' , params: ' + this.serializeParams();\n            }\n        }\n        return str;\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogPublisher.html":{"url":"classes/LogPublisher.html","title":"class - LogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LogEntry} from '../log-entry';\nimport {LogPublisherService} from '../log-publisher.service';\n\nexport abstract class LogPublisher {\n\n    protected location: string;\n\n    constructor(publisherService: LogPublisherService) {\n        publisherService\n            .register(this)\n            .subscribe(entry => {\n                if (entry) {\n                    this.log(entry);\n                }\n            });\n    }\n\n    abstract log(entry: LogEntry): void;\n\n    abstract clear(): void;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogPublisherService.html":{"url":"injectables/LogPublisherService.html","title":"injectable - LogPublisherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogPublisherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _log\n                            \n                            \n                                    Private\n                                    Readonly\n                                _publishers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearAll\n                            \n                            \n                                publish\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    publishers\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \nclearAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            publish\n                        \n                        \n                    \n                \n            \n            \n                \npublish(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(publisher: LogPublisher)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                LogPublisher\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _log\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _publishers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogPublisher[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        publishers\n                    \n                \n\n                \n                    \n                        getpublishers()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts:30\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogPublisher} from './publishers/log-publisher';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {LogEntry} from './log-entry';\nimport {ConsoleLogPublisher} from './publishers/console-log-publisher';\nimport {LocalStorageLogPublisher} from './publishers/local-storage-log-publisher';\n\nexport const PUBLISHERS = {\n    ConsoleLogPublisher,\n    LocalStorageLogPublisher\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogPublisherService {\n\n    // public static instance: LogPublisherService;\n\n    private readonly _log: BehaviorSubject;\n    private readonly _publishers: LogPublisher[];\n\n    constructor() {\n        // LogPublisherService.instance = this;\n        this._log = new BehaviorSubject(null);\n        this._publishers = [];\n        Object.keys(PUBLISHERS).forEach(key => new PUBLISHERS[key](this));\n    }\n\n    get publishers(): LogPublisher[] {\n        return this._publishers;\n    }\n\n    register(publisher: LogPublisher): Observable {\n        if (!publisher) {\n            return of(null);\n        }\n        this._publishers.push(publisher);\n        return this._log;\n    }\n\n    publish(entry: LogEntry): void {\n        if (!entry) {\n            return;\n        }\n        this._log.next(entry);\n    }\n\n    clearAll(): void {\n        this._publishers.forEach(publisher => publisher.clear());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggerConfiguration.html":{"url":"interfaces/LoggerConfiguration.html","title":"interface - LoggerConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggerConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LogEntryConfiguration\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        level\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         LogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogEntry, LogEntryConfiguration} from './log-entry';\nimport {LogPublisherService} from './log-publisher.service';\n\nexport enum LogLevel {\n    ALL = 0,\n    DEBUG = 1,\n    INFO = 2,\n    WARN = 3,\n    ERROR = 4,\n    OFF = 6\n}\n\nexport interface LoggerConfiguration extends LogEntryConfiguration {\n    level?: LogLevel;\n}\n\nexport abstract class AbstractLoggerService {\n\n    protected readonly config: LoggerConfiguration;\n    protected readonly publisher: LogPublisherService;\n\n    protected constructor(private publisherService: LogPublisherService) {\n        this.publisher = publisherService;\n        this.config = {\n            logWithDate: true,\n            serializeParams: true,\n            level: LogLevel.ALL\n        };\n    }\n\n    get level() {\n        return this.config.level;\n    }\n\n    protected shouldLog(level: LogLevel): boolean {\n        return (level >= this.level && level !== LogLevel.OFF) || this.level === LogLevel.ALL;\n    }\n\n    protected writeToLog(level: LogLevel, message: string, params: object): void {\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        const entry = new LogEntry(level, message, params, this.config);\n        this.publisher.publish(entry);\n    }\n\n    info(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.INFO, message, params);\n    }\n\n    debug(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.DEBUG, message, params);\n    }\n\n    warn(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.WARN, message, params);\n    }\n\n    error(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.ERROR, message, params);\n    }\n\n    log(level: LogLevel, message: string, ...param: Array): void {\n        this.writeToLog(level, message, param);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggerService extends AbstractLoggerService {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractLoggerService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                config\n                            \n                            \n                                    Protected\n                                    Readonly\n                                publisher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Protected\n                                shouldLog\n                            \n                            \n                                warn\n                            \n                            \n                                    Protected\n                                writeToLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/logger.service.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(level: LogLevel, message: string, ...param: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            shouldLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            writeToLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(level: LogLevel, message: string, params: object)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerConfiguration\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLoggerService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLoggerService:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogPublisherService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLoggerService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLoggerService:21\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogEntry, LogEntryConfiguration} from './log-entry';\nimport {LogPublisherService} from './log-publisher.service';\n\nexport enum LogLevel {\n    ALL = 0,\n    DEBUG = 1,\n    INFO = 2,\n    WARN = 3,\n    ERROR = 4,\n    OFF = 6\n}\n\nexport interface LoggerConfiguration extends LogEntryConfiguration {\n    level?: LogLevel;\n}\n\nexport abstract class AbstractLoggerService {\n\n    protected readonly config: LoggerConfiguration;\n    protected readonly publisher: LogPublisherService;\n\n    protected constructor(private publisherService: LogPublisherService) {\n        this.publisher = publisherService;\n        this.config = {\n            logWithDate: true,\n            serializeParams: true,\n            level: LogLevel.ALL\n        };\n    }\n\n    get level() {\n        return this.config.level;\n    }\n\n    protected shouldLog(level: LogLevel): boolean {\n        return (level >= this.level && level !== LogLevel.OFF) || this.level === LogLevel.ALL;\n    }\n\n    protected writeToLog(level: LogLevel, message: string, params: object): void {\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        const entry = new LogEntry(level, message, params, this.config);\n        this.publisher.publish(entry);\n    }\n\n    info(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.INFO, message, params);\n    }\n\n    debug(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.DEBUG, message, params);\n    }\n\n    warn(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.WARN, message, params);\n    }\n\n    error(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.ERROR, message, params);\n    }\n\n    log(level: LogLevel, message: string, ...param: Array): void {\n        this.writeToLog(level, message, param);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggerService extends AbstractLoggerService {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/material/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n} from '@angular/material';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule\n    ]\n})\nexport class MaterialModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/log-entry.ts\n            \n            class\n            LogEntry\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/log-entry.ts\n            \n            interface\n            LogEntryConfiguration\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts\n            \n            injectable\n            LogPublisherService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts\n            \n            variable\n            PUBLISHERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n            \n            class\n            AbstractLoggerService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n            \n            interface\n            LoggerConfiguration\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts\n            \n            class\n            ConsoleLogPublisher\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts\n            \n            class\n            LocalStorageLogPublisher\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts\n            \n            class\n            LogPublisher\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/scripts/Utils.ts\n            \n            function\n            randomString\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.0.0-rc.8\n        \n            @angular/cdk : ~8.2.3\n        \n            @angular/common : ^9.0.0-rc.8\n        \n            @angular/compiler : ^9.0.0-rc.8\n        \n            @angular/core : ^9.0.0-rc.8\n        \n            @angular/forms : ^9.0.0-rc.8\n        \n            @angular/material : ~8.2.3\n        \n            @angular/platform-browser : ^9.0.0-rc.8\n        \n            @angular/platform-browser-dynamic : ^9.0.0-rc.8\n        \n            @angular/router : ^9.0.0-rc.8\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LogLevel   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            randomString   (projects/.../Utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/netgrif-application-engine/src/scripts/Utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            randomString\n                        \n                        \n                    \n                \n            \n            \n                \nrandomString(length)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNetgrif Application Engine\nThis project was generated with Angular CLI version 9.0.0-rc.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"unit-test.html":{"url":"unit-test.html","title":"unit-test - unit-test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n  Unit test coverage\n\n\n\n    \n    \n    \n    \n\n\n\n    \n        \n            File\n            Statements\n            Branches\n            Functions\n            Lines\n        \n    \n    \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/log-entry.ts\n            \n            \n                93 %\n                (25/27)\n            \n            \n                71 %\n                (10/14)\n            \n            \n                100 %\n                (5/5)\n            \n            \n                93 %\n                (25/27)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts\n            \n            \n                91 %\n                (21/23)\n            \n            \n                50 %\n                (2/4)\n            \n            \n                100 %\n                (8/8)\n            \n            \n                90 %\n                (18/20)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/logger.service.ts\n            \n            \n                98 %\n                (40/41)\n            \n            \n                78 %\n                (7/9)\n            \n            \n                100 %\n                (13/13)\n            \n            \n                97 %\n                (33/34)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts\n            \n            \n                95 %\n                (18/19)\n            \n            \n                89 %\n                (8/9)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts\n            \n            \n                71 %\n                (17/24)\n            \n            \n                75 %\n                (6/8)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                70 %\n                (16/23)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts\n            \n            \n                100 %\n                (6/6)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (3/3)\n            \n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PUBLISHERS   (projects/.../log-publisher.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/netgrif-application-engine/src/lib/logger/log-publisher.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PUBLISHERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ConsoleLogPublisher,\n    LocalStorageLogPublisher\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
