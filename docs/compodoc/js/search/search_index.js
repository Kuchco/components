var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AbstractCard.html",[0,0.104,1,2.225]],["body/classes/AbstractCard.html",[0,0.15,1,3.841,2,2.244,3,0.239,4,0.209,5,0.179,6,0.145,7,0.112,8,4.936,9,4.127,10,0.434,11,1.106,12,4.805,13,0.434,14,0.018,15,4.805,16,0.925,17,5.381,18,0.505,19,3.212,20,0.27,21,2.025,22,0.013,23,0.016,24,0.013]],["title/classes/AbstractLoggerService.html",[0,0.104,25,2.396]],["body/classes/AbstractLoggerService.html",[0,0.105,2,1.032,3,0.204,4,0.096,5,0.082,6,0.153,7,0.118,10,0.2,11,0.65,13,0.528,14,0.019,16,1.143,18,0.482,20,0.23,21,0.931,22,0.006,23,0.009,24,0.006,25,2.948,26,1.59,27,3.399,28,2.566,29,2.557,30,2.737,31,0.836,32,2.898,33,2.255,34,2.259,35,3.248,36,2.898,37,3.248,38,2.107,39,3.97,40,0.521,41,2.255,42,2.988,43,3.779,44,1.133,45,0.863,46,0.914,47,2.737,48,2.948,49,2.473,50,2.898,51,1.499,52,4.627,53,2.758,54,2.473,55,4.514,56,1.277,57,2.415,58,2.898,59,2.473,60,2.898,61,2.473,62,2.898,63,3.708,64,3.064,65,2.473,66,2.898,67,2.473,68,1.861,69,2.898,70,2.473,71,2.898,72,2.018,73,2.473,74,2.473,75,2.473,76,0.757,77,0.471,78,1.088,79,2.107,80,1.379,81,1.861,82,1.476,83,0.521,84,1.757,85,0.885,86,1.897,87,2.429,88,1.59,89,1.576,90,1.59,91,2.898,92,1.172,93,1.897,94,2.429,95,1.897,96,1.897,97,0.931,98,0.843,99,1.897,100,1.897,101,1.897,102,1.897,103,1.897,104,1.897,105,1.897,106,1.218,107,1.294,108,1.59,109,1.59]],["title/interfaces/AuthState.html",[83,0.785,110,2.396]],["body/interfaces/AuthState.html",[3,0.21,4,0.183,5,0.157,6,0.107,7,0.082,10,0.381,11,1.021,13,0.524,14,0.019,20,0.342,22,0.011,23,0.014,24,0.011,33,4.195,51,1.51,68,3.201,83,0.995,92,1.207,97,2.236,110,4.384,111,1.971,112,3.298,113,5.391,114,5.391,115,3.461,116,3.624,117,2.472,118,3.298,119,4.147,120,3.037,121,3.298,122,3.624]],["title/injectables/AuthenticationEffects.html",[76,0.747,123,2.602]],["body/injectables/AuthenticationEffects.html",[0,0.089,3,0.142,4,0.124,5,0.106,6,0.145,7,0.111,10,0.257,11,0.784,13,0.257,14,0.019,16,1.057,18,0.632,20,0.16,22,0.008,23,0.011,24,0.008,40,0.671,44,0.577,45,0.44,46,0.466,76,0.914,77,0.607,85,1.141,123,3.182,124,1.33,125,2.74,126,2.08,127,4.055,128,4.055,129,2.973,130,3.188,131,5.495,132,5.323,133,3.039,134,5.658,135,3.188,136,2.186,137,2.186,138,5.89,139,6.732,140,4.559,141,4.559,142,4.559,143,4.559,144,3.919,145,4.559,146,3.497,147,3.919,148,3.188,149,4.559,150,6.393,151,4.559,152,3.188,153,4.559,154,5.809,155,4.559,156,4.559,157,3.188,158,4.559,159,4.559,160,4.559,161,3.188,162,3.188,163,2.74,164,2.445,165,3.188,166,1.403,167,2.445,168,3.188,169,2.74,170,2.225,171,2.225,172,1.482,173,2.049,174,2.74,175,2.049,176,1.805]],["title/guards/AuthenticationGuardService.html",[177,2.859,178,2.859]],["body/guards/AuthenticationGuardService.html",[0,0.092,3,0.147,4,0.128,5,0.11,6,0.134,7,0.103,10,0.267,11,0.569,13,0.503,14,0.019,16,0.934,18,0.608,20,0.166,22,0.008,23,0.011,24,0.008,28,2.599,31,1.035,40,0.696,44,0.984,45,0.75,46,0.794,51,1.363,56,0.986,68,2.306,76,0.938,77,0.63,85,1.184,92,1.7,97,2.223,106,1.629,115,2.306,134,5.077,164,2.537,176,2.339,178,3.591,179,3.308,180,4.531,181,2.537,182,4.681,183,3.009,184,4.681,185,5.907,186,4.681,187,2.843,188,3.526,189,3.792,190,3.09,191,5.433,192,3.308,193,3.591,194,4.681,195,5.907,196,3.243,197,5.907,198,3.308,199,6.233,200,5.433,201,4.681,202,4.024,203,6.233,204,3.308,205,4.681,206,2.126,207,2.843,208,3.308,209,3.009,210,3.308,211,1.629,212,1.38,213,3.308,214,3.308,215,3.308,216,3.308,217,3.308,218,1.844,219,3.308,220,1.974,221,3.308,222,3.308,223,3.308,224,4.681,225,3.308,226,5.433,227,3.308,228,3.308,229,4.681,230,3.308]],["title/interceptors/AuthenticationInterceptor.html",[231,2.859,232,2.396]],["body/interceptors/AuthenticationInterceptor.html",[0,0.108,3,0.173,4,0.151,5,0.129,6,0.134,7,0.103,10,0.314,13,0.422,14,0.019,16,0.899,18,0.639,20,0.195,22,0.009,23,0.013,24,0.009,31,1.157,40,0.818,44,0.947,45,0.722,46,0.765,56,0.818,76,1.048,77,0.741,85,1.391,92,1.337,166,1.71,167,2.981,170,2.713,171,2.713,176,1.539,188,3.777,193,4.537,207,3.341,211,1.914,232,3.363,233,3.887,234,4.128,235,2.981,236,5.232,237,3.887,238,4.416,239,3.887,240,4.497,241,5.232,242,6.328,243,5.915,244,6.328,245,3.887,246,5.232,247,2.913,248,5.232,249,3.887,250,5.232,251,5.232,252,2.981,253,3.341,254,3.887,255,5.915,256,3.887,257,3.341,258,3.887,259,3.887,260,3.887,261,3.887,262,3.363,263,3.887,264,3.887,265,3.887,266,3.887,267,3.887,268,3.887,269,3.887,270,3.341,271,3.887,272,3.887,273,3.887,274,3.887,275,3.887,276,3.887]],["title/classes/AuthenticationMethodService.html",[0,0.104,133,1.95]],["body/classes/AuthenticationMethodService.html",[0,0.13,2,1.949,3,0.207,4,0.181,5,0.155,6,0.154,7,0.118,10,0.377,13,0.377,14,0.018,16,1.112,18,0.607,20,0.234,21,2.733,22,0.011,23,0.014,24,0.011,27,2.906,31,1.304,40,1.361,44,0.846,45,0.645,46,0.683,56,1.242,126,2.112,129,3.159,133,3.086,166,2.056,172,3.257,173,3.003,234,4.741,247,3.45,277,3.583,278,4.671,279,3.792,280,4.671,281,4.671,282,1.592,283,2.788]],["title/modules/AuthenticationModule.html",[209,2.396,284,1.403]],["body/modules/AuthenticationModule.html",[0,0.123,3,0.196,4,0.172,5,0.147,6,0.1,7,0.077,14,0.018,18,0.674,20,0.222,22,0.011,23,0.014,24,0.011,77,0.843,89,2.377,123,3.087,133,2.981,174,4.897,175,2.843,190,2.981,206,2.843,209,4.533,231,3.393,232,4.533,252,3.393,284,1.665,285,2.057,286,2.314,287,1.946,288,2.981,289,2.64,290,3.762,291,2.314,292,3.802,293,3.802,294,3.401,295,2.64,296,2.466,297,4.423,298,3.177,299,3.177,300,2.314,301,5.698,302,4.897,303,5.698,304,4.37,305,4.423,306,2.466,307,4.423,308,3.393,309,4.423,310,4.423,311,4.423,312,3.393,313,4.423,314,5.698,315,4.423,316,4.423,317,4.423,318,4.423]],["title/injectables/AuthenticationService.html",[76,0.747,188,2.225]],["body/injectables/AuthenticationService.html",[0,0.092,3,0.146,4,0.128,5,0.11,6,0.154,7,0.118,10,0.266,11,0.802,13,0.476,14,0.019,16,1.143,18,0.649,20,0.165,22,0.008,23,0.011,24,0.008,28,2.385,31,1.032,38,2.603,40,0.694,44,0.845,45,0.644,46,0.682,51,0.694,56,1.141,68,2.299,76,0.935,77,0.628,85,1.18,92,1.652,98,1.591,106,1.623,107,1.724,113,4.523,124,1.374,126,1.671,129,2.742,133,3.085,136,1.24,137,1.24,146,3.581,166,1.45,167,2.527,169,2.832,170,3.258,171,2.3,172,2.895,173,2.118,175,2.118,176,2.632,183,3.485,187,2.832,188,2.786,189,3.784,190,3.085,193,3.581,206,2.118,247,3.066,279,3.001,282,1.591,283,1.967,319,2.527,320,5.421,321,5.421,322,5.421,323,4.668,324,3.295,325,3.295,326,3.295,327,4.523,328,3.581,329,3.295,330,3.295,331,3.295,332,2.527,333,4.158,334,2.832,335,2.3,336,3.295,337,2.832,338,2.3,339,1.837,340,4.668,341,3.295,342,3.295,343,3.295,344,3.295,345,3.295,346,3.295,347,4.668,348,2.527,349,3.295,350,3.295,351,3.295,352,3.295]],["title/interfaces/Authority.html",[83,0.785,353,2.078]],["body/interfaces/Authority.html",[3,0.215,4,0.187,5,0.161,6,0.109,7,0.084,10,0.39,11,1.036,13,0.39,14,0.018,20,0.345,22,0.012,23,0.015,24,0.012,45,0.832,51,1.604,53,2.723,83,1.448,111,2.016,282,1.647,339,2.695,353,4.022,354,3.374,355,2.885,356,3.708,357,2.381,358,2.885,359,3.708,360,3.708,361,2.885,362,3.708,363,3.374,364,3.107,365,2.885,366,3.708,367,3.708]],["title/injectables/BasicAuthenticationService.html",[76,0.747,368,2.859]],["body/injectables/BasicAuthenticationService.html",[0,0.092,3,0.147,4,0.128,5,0.11,6,0.134,7,0.103,10,0.267,13,0.438,14,0.019,16,1.168,18,0.625,20,0.166,21,2.223,22,0.008,23,0.011,24,0.008,29,2.61,31,1.035,40,0.696,44,0.984,45,0.75,46,0.794,56,1.244,76,0.938,77,0.63,84,2.177,85,1.184,92,1.196,97,1.762,98,1.595,124,1.38,126,2.115,129,3.094,133,3.261,136,1.245,137,1.245,166,1.456,172,3.259,173,2.126,175,2.126,176,1.31,189,3.792,190,3.09,206,2.126,247,3.277,252,2.537,253,2.843,257,2.843,279,3.492,282,1.127,283,1.974,302,5.077,328,3.591,332,2.537,368,3.591,369,4.531,370,4.531,371,2.309,372,3.308,373,3.308,374,4.681,375,3.308,376,2.177,377,3.308,378,2.449,379,2.843,380,2.843,381,3.308,382,2.126,383,6.472,384,3.308,385,5.433,386,3.308,387,3.308,388,5.433,389,5.433,390,4.681,391,3.308,392,3.308,393,2.843,394,3.308,395,3.308,396,3.308,397,3.308,398,3.308,399,2.537,400,3.308,401,3.308,402,3.308]],["title/modules/CardModule.html",[284,1.403,403,2.602]],["body/modules/CardModule.html",[0,0.114,3,0.181,4,0.158,5,0.136,6,0.092,7,0.071,14,0.018,18,0.671,19,2.434,20,0.204,22,0.01,23,0.013,24,0.01,77,0.777,126,1.46,220,2.434,284,1.534,285,1.896,286,2.133,287,1.794,288,3.169,289,2.434,290,2.434,291,3.169,294,3.224,295,2.434,296,2.273,298,3.012,299,3.012,300,2.133,306,3.012,376,2.512,403,5.249,404,3.504,405,3.504,406,3.504,407,3.504,408,3.649,409,3.649,410,3.649,411,3.845,412,4.077,413,2.434,414,2.846,415,5.402,416,2.846,417,2.434,418,2.846,419,3.504,420,3.127,421,4.144,422,2.621,423,5.402]],["title/classes/ConfigurationService.html",[0,0.104,190,1.95]],["body/classes/ConfigurationService.html",[0,0.125,2,1.87,3,0.199,4,0.174,5,0.149,6,0.156,7,0.12,10,0.362,13,0.362,14,0.018,16,1.15,18,0.54,20,0.225,21,1.687,22,0.011,23,0.014,24,0.011,27,2.831,31,1.271,40,0.944,44,0.812,45,0.619,46,0.655,56,1.335,85,1.605,92,1.621,166,1.973,176,2.511,190,3.006,212,2.952,247,3.124,424,3.439,425,6.69,426,6.69,427,4.483,428,5.428,429,4.483,430,3.43,431,4.483,432,4.483,433,4.483,434,4.483,435,4.483,436,4.483,437,4.483]],["title/classes/ConsoleLogPublisher.html",[0,0.104,438,2.396]],["body/classes/ConsoleLogPublisher.html",[0,0.104,2,1.549,3,0.165,4,0.144,5,0.124,6,0.14,7,0.108,10,0.3,11,0.872,13,0.501,14,0.018,16,1.154,18,0.583,20,0.186,21,2.337,22,0.009,23,0.012,24,0.009,27,2.499,30,2.217,31,1.122,34,3.121,39,2.217,40,0.782,41,3.028,42,3.059,44,1.046,45,0.798,46,0.844,47,2.217,51,0.782,56,1.307,57,2.402,63,2.07,78,2.953,80,2.07,81,3.059,82,2.217,84,2.359,92,0.949,109,2.387,136,1.397,378,3.023,438,3.261,439,4.763,440,2.387,441,4.006,442,3.891,443,4.416,444,3.192,445,3.192,446,3.713,447,4.432,448,3.713,449,3.192,450,3.192,451,3.261,452,3.713,453,3.713,454,3.713,455,6.21,456,3.713,457,3.713,458,6.21,459,3.713,460,3.713,461,3.713,462,3.713,463,3.713,464,3.713,465,3.713]],["title/modules/CovalentModule.html",[284,1.403,466,2.859]],["body/modules/CovalentModule.html",[0,0.143,3,0.228,4,0.199,5,0.171,6,0.116,7,0.089,14,0.018,18,0.676,20,0.257,22,0.012,23,0.015,24,0.012,77,0.978,285,2.387,288,2.685,291,2.685,298,3.487,299,3.487,300,2.685,306,2.861,466,4.797,467,5.132,468,6.745,469,4.411,470,6.745,471,4.411,472,6.254,473,6.254,474,6.254,475,4.411]],["title/interfaces/Credentials.html",[83,0.785,172,1.733]],["body/interfaces/Credentials.html",[3,0.238,4,0.208,5,0.179,6,0.121,7,0.093,10,0.433,11,1.104,13,0.518,14,0.018,20,0.269,22,0.013,23,0.016,24,0.013,51,1.557,83,1.129,111,2.237,172,2.987,328,5.466,376,3.314,476,4.61]],["title/components/ForgottenPasswordCardComponent.html",[408,1.836,477,1.555]],["body/components/ForgottenPasswordCardComponent.html",[0,0.092,1,3.523,3,0.147,4,0.128,5,0.11,6,0.133,7,0.103,10,0.266,11,0.804,12,3.788,13,0.438,14,0.018,15,2.304,16,1.015,18,0.51,19,1.971,20,0.165,21,1.242,22,0.008,23,0.011,24,0.008,31,1.034,40,0.695,44,0.846,45,0.893,46,0.683,56,0.984,57,1.673,72,2.388,77,0.629,84,2.174,85,1.182,117,3.479,126,2.113,211,2.302,287,1.453,361,3.239,376,3.418,378,1.727,382,2.122,408,2.907,409,1.626,410,1.626,413,1.971,417,4.055,418,4.119,477,2.264,478,2.79,479,2.122,480,2.122,481,2.122,482,1.841,483,4.527,484,2.532,485,3.488,486,2.122,487,4.275,488,3.263,489,3.005,490,4.163,491,3.005,492,3.586,493,3.794,494,3.586,495,2.532,496,4.527,497,3.301,498,3.586,499,3.301,500,3.586,501,3.301,502,2.532,503,2.838,504,2.532,505,2.532,506,2.532,507,2.838,508,2.532,509,3.263,510,3.586,511,4.018,512,4.674,513,3.005,514,3.005,515,2.122,516,3.794,517,2.122,518,3.794,519,1.626,520,1.841,521,1.626,522,2.122,523,2.122,524,2.122]],["title/classes/LocalStorageLogPublisher.html",[0,0.104,525,2.396]],["body/classes/LocalStorageLogPublisher.html",[0,0.088,2,1.312,3,0.14,4,0.122,5,0.105,6,0.138,7,0.114,10,0.254,11,0.776,13,0.493,14,0.019,16,1.127,18,0.496,20,0.158,21,2.173,22,0.008,23,0.011,24,0.008,27,2.224,28,2.325,30,1.878,31,0.999,34,3.193,40,0.662,41,2.696,42,2.844,44,0.957,45,0.729,46,0.772,47,1.878,51,1.34,56,1.216,57,2.278,78,2.952,80,1.754,81,3.012,82,1.878,84,2.1,92,0.804,97,1.699,98,1.072,109,2.022,136,1.184,137,1.184,183,3.396,212,1.312,378,2.764,399,2.413,440,2.022,441,3.799,442,3.464,443,4.215,444,3.882,445,2.704,447,4.053,449,2.704,450,2.704,451,2.022,525,2.903,526,4.69,527,3.65,528,5.283,529,6.114,530,2.196,531,3.146,532,2.704,533,4.516,534,3.146,535,3.146,536,4.516,537,3.146,538,3.146,539,3.146,540,4.516,541,4.516,542,4.516,543,4.516,544,3.146,545,4.516,546,3.146,547,3.146,548,3.146,549,3.146,550,2.704,551,3.146,552,3.146,553,3.146]],["title/classes/LogEntry.html",[0,0.104,78,1.64]],["body/classes/LogEntry.html",[0,0.152,2,0.995,3,0.106,4,0.092,5,0.079,6,0.146,7,0.113,10,0.192,11,0.632,13,0.464,14,0.019,16,1.09,18,0.224,20,0.184,22,0.006,23,0.009,24,0.006,28,3.044,29,3.447,31,0.813,34,3.044,38,2.049,39,3.934,40,0.502,44,1.084,45,0.329,46,0.537,51,1.408,52,4.163,53,0.944,55,4.163,56,0.774,63,3.204,64,3.006,68,2.208,72,2.529,78,1.617,79,3.338,81,3.247,83,0.502,87,1.533,88,2.362,89,1.87,90,3.694,92,1.468,94,1.533,97,0.897,98,0.813,136,0.897,137,0.897,176,1.775,212,2.885,218,1.33,262,1.533,357,1.175,430,3.43,451,1.533,530,2.565,554,4.521,555,1.664,556,4.939,557,4.329,558,3.853,559,3.158,560,3.674,561,4.329,562,4.329,563,4.329,564,2.385,565,2.385,566,2.385,567,2.385,568,2.385,569,3.158,570,3.158,571,2.818,572,2.385,573,3.158,574,3.158,575,3.158,576,3.158,577,2.385,578,2.385,579,3.158,580,2.05,581,1.829,582,3.158,583,2.05,584,3.158,585,3.853,586,3.158,587,2.05,588,3.158,589,2.05,590,5.147,591,2.05,592,2.05,593,2.05,594,2.05,595,3.158]],["title/interfaces/LogEntryConfiguration.html",[79,2.078,83,0.785]],["body/interfaces/LogEntryConfiguration.html",[0,0.142,3,0.131,4,0.114,5,0.098,6,0.066,7,0.051,10,0.237,11,0.739,13,0.41,14,0.019,18,0.276,20,0.216,22,0.007,23,0.01,24,0.007,28,2.619,29,3.119,34,2.956,39,3.712,44,0.921,46,0.962,51,1.309,52,3.997,53,1.164,55,3.827,63,2.835,64,3.339,68,3.309,72,2.462,78,1.294,79,3.319,81,3.164,83,0.619,87,1.89,88,3.827,89,2.121,90,3.997,92,1.589,94,1.89,97,1.106,98,1.002,111,1.226,136,1.618,137,1.618,176,1.164,212,2.483,218,1.639,262,1.89,357,1.448,430,3.712,451,1.89,554,2.052,555,2.052,556,4.37,557,2.527,558,2.527,559,2.527,561,3.696,562,3.696,563,3.696,569,2.527,570,2.527,571,2.255,573,2.527,574,2.527,575,2.527,576,2.527,579,4.809,580,3.696,581,3.299,582,5.117,583,2.527,584,3.696,585,4.37,586,3.696,587,2.527,588,3.696,589,2.527,590,5.521,591,2.527,592,2.527,593,2.527,594,2.527,595,3.696]],["title/classes/LogPublisher.html",[0,0.104,441,2.225]],["body/classes/LogPublisher.html",[0,0.119,2,1.784,3,0.19,4,0.166,5,0.142,6,0.154,7,0.119,10,0.345,11,0.958,13,0.5,14,0.018,16,1.13,18,0.524,20,0.214,21,2.678,22,0.01,23,0.013,24,0.01,27,3.054,31,1.232,34,2.453,40,0.9,41,3.327,42,3.237,44,1.009,45,0.769,46,0.814,47,3.327,51,1.174,56,1.174,57,2.352,78,2.891,80,2.384,81,3.054,82,2.552,440,2.749,441,3.327,442,4.757,443,4.224,447,4.275,451,2.749,532,3.675,596,5.227,597,5.574,598,4.276,599,4.276,600,4.276,601,4.276]],["title/injectables/LogPublisherService.html",[42,1.836,76,0.747]],["body/injectables/LogPublisherService.html",[0,0.094,3,0.15,4,0.131,5,0.112,6,0.154,7,0.119,10,0.272,11,0.816,13,0.481,14,0.019,16,1.15,18,0.612,20,0.238,22,0.008,23,0.011,24,0.008,28,2.866,30,3.749,31,1.05,34,2.089,38,2.647,40,1.156,42,2.705,44,0.86,45,0.655,46,0.694,56,1.156,57,2.133,76,0.951,77,0.643,78,2.623,80,1.882,81,2.705,92,1.523,97,1.27,98,1.618,106,1.662,107,1.766,124,1.408,166,1.485,176,2.579,183,2.169,212,1.408,247,2.705,327,4.213,348,2.589,438,3.052,441,3.994,525,3.052,527,2.014,602,4.392,603,2.356,604,5.492,605,5.492,606,5.96,607,4.748,608,4.081,609,4.572,610,4.748,611,3.375,612,4.748,613,3.375,614,4.748,615,3.375,616,3.375,617,3.375,618,3.375,619,3.375,620,3.375,621,3.375,622,3.375,623,3.375,624,4.748,625,2.901,626,4.748,627,3.375,628,3.375,629,3.375,630,3.375,631,3.375,632,3.375]],["title/interfaces/LoggerConfiguration.html",[48,2.396,83,0.785]],["body/interfaces/LoggerConfiguration.html",[0,0.137,3,0.157,4,0.137,5,0.118,6,0.08,7,0.062,10,0.286,11,0.844,13,0.286,14,0.019,18,0.572,20,0.282,21,1.332,22,0.009,23,0.012,24,0.009,25,3.155,26,2.275,27,3.148,28,2.16,29,1.974,30,2.113,34,2.16,39,4.19,41,2.113,42,2.997,46,0.717,47,2.93,48,3.622,50,2.715,51,1.392,52,4.568,53,2.531,55,4.444,57,2.367,58,2.715,60,2.715,62,2.715,63,3.781,64,2.93,66,2.715,68,1.744,69,2.715,71,2.715,72,1.558,76,0.984,77,0.675,78,1.558,79,3.142,80,1.974,81,2.418,82,2.113,83,0.745,84,2.62,85,1.267,86,2.715,87,3.155,88,2.275,89,2.047,90,2.275,91,3.765,92,1.44,93,2.715,94,3.155,95,2.715,96,2.715,97,1.332,98,1.206,99,2.715,100,2.715,101,2.715,102,2.715,103,2.715,104,2.715,105,2.715,106,1.744,107,1.852,108,2.275,109,2.275,111,1.477]],["title/injectables/LoggerService.html",[76,0.747,108,2.396]],["body/injectables/LoggerService.html",[0,0.106,3,0.205,4,0.097,5,0.083,6,0.086,7,0.066,10,0.202,11,0.656,13,0.529,14,0.019,16,1.128,18,0.485,20,0.232,21,0.942,22,0.006,23,0.009,24,0.006,25,4.348,26,1.609,27,3.372,28,2.578,29,2.575,30,2.757,31,0.843,32,2.925,33,2.276,34,2.273,35,3.278,36,2.925,37,3.278,39,3.839,40,0.527,41,2.276,42,3,44,1.137,45,0.867,46,0.917,47,2.757,48,2.969,50,2.925,51,1.502,52,4.635,53,2.764,55,4.523,56,1.282,57,2.421,58,2.925,60,2.925,62,2.925,63,3.719,64,3.083,66,2.925,68,1.878,69,2.925,71,2.925,72,2.033,76,0.764,77,0.477,78,1.101,79,2.126,80,1.395,81,1.878,82,1.494,83,0.527,84,2.148,85,0.896,86,1.92,87,2.451,88,1.609,89,1.591,90,1.609,91,2.925,92,1.18,93,1.92,94,2.451,95,1.92,96,1.92,97,0.942,98,0.853,99,1.92,100,1.92,101,1.92,102,1.92,103,1.92,104,1.92,105,1.92,106,1.233,107,1.309,108,2.451,109,1.609,124,1.044,378,3.365,633,2.503,634,2.503,635,2.503,636,2.503,637,2.503,638,2.503,639,2.503,640,2.503,641,2.503,642,2.503]],["title/components/LoginCardComponent.html",[409,1.836,477,1.555]],["body/components/LoginCardComponent.html",[0,0.086,1,3.42,3,0.137,4,0.12,5,0.103,6,0.137,7,0.106,10,0.25,11,0.767,12,3.653,13,0.422,14,0.019,15,2.159,16,1.044,18,0.492,19,1.846,20,0.155,21,1.164,22,0.007,23,0.011,24,0.007,31,0.987,40,0.651,44,0.808,45,0.874,46,0.652,56,0.939,57,1.597,72,2.303,77,0.589,84,2.075,85,1.107,89,1.861,117,3.413,126,2.504,136,1.164,137,1.164,211,2.198,218,2.488,287,1.361,376,2.825,378,1.618,382,1.988,408,1.523,409,2.822,410,1.523,413,1.846,416,4.24,417,3.42,477,2.183,478,2.663,479,1.988,480,1.988,481,1.988,482,1.724,485,3.364,486,1.988,487,4.193,488,3.114,489,2.868,490,4.014,491,2.868,492,3.422,493,3.683,494,3.422,495,2.373,496,4.395,498,3.422,500,3.422,502,2.373,504,2.373,505,2.373,506,2.373,508,2.373,509,3.114,510,3.422,513,2.868,514,2.868,515,1.988,516,3.683,517,1.988,518,3.683,519,1.523,520,1.724,521,1.523,522,1.988,523,1.988,524,1.988,643,4.659,644,2.159,645,5.221,646,4.462,647,3.093,648,3.093,649,3.835,650,3.835,651,4.462,652,4.462,653,2.659,654,2.659,655,3.093,656,4.462,657,3.093,658,4.462,659,2.159,660,3.093,661,3.093,662,3.093,663,3.093,664,3.093]],["title/modules/MaterialModule.html",[284,1.403,411,2.078]],["body/modules/MaterialModule.html",[0,0.112,3,0.178,4,0.155,5,0.133,6,0.091,7,0.07,14,0.018,18,0.689,20,0.201,22,0.01,23,0.013,24,0.01,77,0.764,220,2.393,285,1.864,288,2.097,291,2.097,298,2.978,299,2.978,300,2.097,306,2.235,411,2.978,421,4.608,422,2.577,665,4.008,666,5.341,667,5.341,668,5.341,669,5.341,670,5.341,671,5.341,672,5.341,673,5.341,674,5.341,675,5.341,676,5.341,677,5.341,678,5.341,679,5.341,680,5.341,681,5.341,682,5.341,683,5.341,684,5.341,685,5.341,686,5.341,687,5.341,688,5.341,689,5.341,690,5.341,691,5.341,692,5.341,693,5.341,694,5.341,695,5.341,696,5.341,697,5.341,698,5.341,699,5.341,700,5.341,701,3.445,702,5.341,703,4.008,704,4.008,705,5.341,706,4.008,707,5.341,708,4.008,709,5.341,710,4.008,711,5.341,712,4.008,713,5.341,714,4.008,715,5.341,716,4.008]],["title/injectables/NullAuthenticationService.html",[76,0.747,717,2.859]],["body/injectables/NullAuthenticationService.html",[0,0.115,3,0.183,4,0.16,5,0.137,6,0.147,7,0.113,10,0.333,13,0.439,14,0.018,16,1.158,18,0.633,20,0.207,21,2.439,22,0.01,23,0.013,24,0.01,31,1.204,40,1.283,44,0.986,45,0.752,46,0.796,56,1.365,76,1.091,77,0.786,84,2.533,92,1.392,124,1.722,126,2.32,129,3.282,133,3.525,166,1.816,172,3.331,173,2.653,175,2.653,247,3.476,279,3.918,282,1.407,283,2.464,332,3.166,348,3.166,371,2.881,378,2.849,379,3.548,380,3.548,382,2.653,717,4.178,718,4.972,719,4.972,720,4.127,721,4.127,722,4.127]],["title/classes/NullStorage.html",[0,0.104,723,2.602]],["body/classes/NullStorage.html",[0,0.104,2,1.559,3,0.166,4,0.145,5,0.124,6,0.158,7,0.122,10,0.411,11,0.876,13,0.526,14,0.019,16,1.183,20,0.187,22,0.009,23,0.012,24,0.009,28,2.551,31,1.127,44,1.128,45,0.928,46,0.91,51,1.585,56,1.372,57,2.407,92,1.302,115,3.312,137,2.182,211,2.51,443,4.003,527,3.042,723,3.557,724,2.868,725,4.984,726,5.096,727,5.601,728,5.096,729,5.096,730,6.516,731,3.738,732,3.738,733,5.096,734,3.738,735,5.096,736,3.738,737,5.096,738,3.738,739,5.096,740,3.738,741,3.738,742,3.738]],["title/components/PanelComponent.html",[477,1.555,519,1.836]],["body/components/PanelComponent.html",[0,0.094,3,0.149,4,0.13,5,0.112,6,0.157,7,0.121,10,0.271,13,0.442,14,0.019,16,1.173,18,0.315,20,0.168,22,0.008,23,0.011,24,0.008,31,1.045,40,1.153,45,0.653,56,1.153,57,1.96,77,0.639,98,1.143,117,3.495,120,3.039,126,1.201,136,1.262,137,1.262,211,2.329,287,1.476,376,1.56,408,1.652,409,1.652,410,1.652,413,2.002,417,2.002,477,2.283,478,2.822,479,2.156,480,2.156,481,2.156,482,1.87,485,3.519,486,2.156,487,4.294,488,3.821,489,3.039,491,3.039,493,3.821,513,3.039,514,3.039,515,2.156,516,3.821,517,2.156,518,3.821,519,2.928,520,3.052,521,1.652,522,2.156,523,2.156,524,2.156,654,2.883,743,2.573,744,5.474,745,4.727,746,5.944,747,5.944,748,4.064,749,5.474,750,5.474,751,5.474,752,4.727,753,5.474,754,4.727,755,3.355,756,6.266,757,3.355,758,3.355,759,5.944,760,3.355,761,3.355,762,3.355,763,5.109,764,4.727,765,4.727,766,2.883,767,3.355,768,3.355,769,3.355,770,3.355,771,3.355,772,3.355]],["title/modules/PanelModule.html",[284,1.403,773,2.602]],["body/modules/PanelModule.html",[0,0.128,3,0.204,4,0.178,5,0.153,6,0.104,7,0.08,14,0.018,18,0.655,20,0.23,22,0.011,23,0.014,24,0.011,77,0.875,220,2.742,284,1.729,285,2.137,286,2.403,287,2.022,288,3.356,289,2.742,290,2.742,291,3.356,294,3.484,295,2.742,296,2.561,298,3.255,299,3.255,300,2.403,306,3.255,411,3.971,419,3.949,420,3.524,422,2.953,519,3.712,773,5.16,774,3.949,775,3.949,776,4.594,777,3.949,778,4.594,779,5.837]],["title/interfaces/ProcessRole.html",[83,0.785,355,2.225]],["body/interfaces/ProcessRole.html",[3,0.205,4,0.179,5,0.154,6,0.104,7,0.08,10,0.373,11,1.007,13,0.519,14,0.018,20,0.339,22,0.011,23,0.014,24,0.011,45,0.963,46,0.856,51,1.615,53,2.678,83,1.424,111,1.927,282,1.574,339,2.576,353,3.266,354,3.224,355,3.496,356,5.189,357,3.332,358,2.757,359,3.544,360,3.544,361,2.757,362,3.544,363,3.224,364,2.97,365,2.757,366,3.544,367,3.544]],["title/interfaces/ProjectInfo.html",[83,0.785,780,2.602]],["body/interfaces/ProjectInfo.html",[3,0.141,4,0.123,5,0.151,6,0.072,7,0.093,10,0.256,11,0.782,13,0.468,14,0.019,18,0.6,20,0.32,22,0.013,23,0.011,24,0.008,51,1.539,53,1.257,83,0.669,89,1.325,92,1.632,97,2.576,98,1.55,111,1.325,121,4.457,262,2.041,338,3.707,399,3.488,428,3.488,430,2.714,482,3.422,520,1.771,780,3.707,781,2.436,782,5.275,783,6.137,784,6.137,785,6.137,786,4.547,787,3.176,788,3.176,789,3.176,790,4.985,791,3.176,792,5.311,793,3.908,794,3.176,795,3.176,796,3.176,797,3.176,798,3.176,799,4.547,800,3.176,801,2.73,802,4.547,803,3.176,804,4.547,805,4.547,806,5.311,807,4.547,808,3.176,809,3.176,810,3.176,811,3.176,812,3.176,813,3.176,814,3.176,815,3.176,816,3.176,817,3.176,818,3.176,819,2.73,820,3.176,821,3.176,822,3.176,823,3.176,824,3.176,825,3.176,826,2.73,827,4.547,828,3.176,829,2.73,830,2.73,831,3.176,832,3.176,833,2.73,834,3.176,835,2.73,836,3.908,837,3.908,838,3.176,839,3.176,840,2.73,841,2.73,842,3.176,843,3.176,844,3.176,845,2.73,846,3.908,847,4.547,848,3.176,849,3.176,850,3.176]],["title/components/RegistrationCardComponent.html",[410,1.836,477,1.555]],["body/components/RegistrationCardComponent.html",[0,0.084,1,3.379,3,0.134,4,0.117,5,0.1,6,0.142,7,0.109,10,0.243,11,0.753,12,3.6,13,0.416,14,0.019,15,2.104,16,1.078,18,0.532,19,1.799,20,0.151,21,1.134,22,0.007,23,0.011,24,0.007,31,0.968,40,0.635,44,0.793,45,0.866,46,0.64,56,0.922,57,1.568,72,2.27,77,0.574,84,2.037,85,1.079,89,2.361,117,3.386,126,2.027,136,1.648,137,1.648,211,2.157,287,1.327,361,3.079,376,2.037,378,1.577,382,1.938,408,1.485,409,1.485,410,2.788,413,3.958,414,4.378,417,1.799,477,2.151,478,2.614,479,1.938,480,1.938,481,1.938,482,1.681,485,3.316,486,1.938,487,4.161,488,3.057,489,2.815,490,3.956,491,2.815,492,3.359,493,3.639,494,3.359,495,2.312,496,4.342,498,3.359,500,3.359,502,2.312,503,2.591,504,2.312,505,2.312,506,2.312,507,2.591,508,2.312,509,3.057,510,3.359,511,3.764,513,2.815,514,2.815,515,1.938,516,3.639,517,1.938,518,3.639,519,1.485,520,1.681,521,1.485,522,1.938,523,1.938,524,1.938,608,3.764,644,2.104,645,5.168,649,4.866,650,4.866,851,4.378,852,6.013,853,4.379,854,3.015,855,3.015,856,3.015,857,3.359,858,3.015,859,3.015,860,3.015,861,4.379,862,4.379]],["title/interfaces/Role.html",[83,0.785,863,2.225]],["body/interfaces/Role.html",[3,0.222,4,0.194,5,0.166,6,0.113,7,0.087,10,0.403,11,1.057,13,0.561,14,0.018,20,0.25,22,0.012,23,0.015,24,0.012,45,0.96,46,1.016,51,1.604,83,1.051,111,2.083,136,1.879,339,3.878,357,3.426,863,3.671,864,4.292,865,5.978]],["title/injectables/SelectLanguageService.html",[76,0.747,866,2.602]],["body/injectables/SelectLanguageService.html",[0,0.121,3,0.193,4,0.168,5,0.145,6,0.149,7,0.115,10,0.35,11,0.968,13,0.454,14,0.019,16,1.074,18,0.408,20,0.218,22,0.011,23,0.014,24,0.011,31,1.245,40,1.315,44,0.786,45,0.599,46,0.635,51,1.315,56,0.914,57,1.555,72,1.911,76,1.128,77,0.827,89,2.606,106,2.139,107,2.272,120,4.016,124,1.811,136,1.634,137,1.634,212,2.927,727,3.733,866,3.93,867,5.07,868,3.331,869,6.248,870,5.63,871,4.343,872,5.63,873,4.343,874,4.839,875,4.839,876,4.839,877,4.343,878,4.343,879,5.63]],["title/injectables/SessionService.html",[76,0.747,238,2.602]],["body/injectables/SessionService.html",[0,0.082,3,0.131,4,0.114,5,0.098,6,0.16,7,0.123,10,0.238,11,0.74,13,0.519,14,0.019,16,1.204,18,0.526,20,0.148,22,0.007,23,0.01,24,0.007,27,2.507,28,2.957,31,0.952,38,2.401,40,0.62,44,0.78,45,0.594,46,0.629,51,1.415,56,1.072,57,2.133,76,0.863,77,0.561,85,1.054,92,1.301,97,1.62,98,1.467,106,1.451,107,1.541,114,3.904,115,1.451,118,3.005,124,1.229,136,1.62,137,1.62,166,1.296,176,2.661,183,4,189,3.005,190,2.929,206,1.893,212,1.796,238,3.005,240,4.375,247,2.121,270,4.813,327,3.904,443,3.599,527,2.57,550,2.532,581,2.259,625,2.532,723,3.552,880,2.259,881,5.09,882,5.09,883,5.09,884,5.09,885,5.599,886,5.957,887,5.09,888,2.945,889,4.306,890,2.945,891,2.945,892,2.945,893,2.945,894,4.306,895,2.945,896,4.306,897,2.945,898,2.945,899,2.945,900,2.945,901,2.945,902,2.945,903,2.945,904,2.945,905,2.945,906,4.306,907,2.945,908,2.945,909,2.945,910,4.306,911,4.306,912,2.945,913,4.306,914,2.945,915,2.945,916,2.945,917,2.945,918,2.945,919,2.945,920,4.306,921,2.945,922,2.945,923,2.945]],["title/modules/SignUpModule.html",[284,1.403,924,2.602]],["body/modules/SignUpModule.html",[0,0.138,3,0.22,4,0.192,5,0.165,6,0.112,7,0.086,14,0.018,18,0.624,20,0.248,22,0.012,23,0.015,24,0.012,77,0.943,284,1.862,285,2.302,286,2.589,287,2.178,288,3.199,289,2.954,290,3.962,291,2.589,294,3.65,295,2.954,296,2.759,298,3.41,299,3.41,300,2.589,306,2.759,924,5.065,925,4.254,926,4.254,927,4.665,928,3.454,929,4.949,930,4.949,931,4.949,932,4.949]],["title/injectables/SignUpService.html",[76,0.747,927,2.396]],["body/injectables/SignUpService.html",[0,0.152,3,0.241,4,0.211,5,0.181,6,0.146,7,0.113,14,0.018,16,0.934,18,0.51,20,0.272,22,0.013,23,0.016,24,0.013,40,1.456,76,1.297,77,1.035,124,2.266,927,4.16,928,4.518,933,4.965,934,4.168,935,5.433]],["title/interfaces/State.html",[83,0.785,196,2.225]],["body/interfaces/State.html",[3,0.186,4,0.162,5,0.139,6,0.095,7,0.073,10,0.338,11,0.945,13,0.444,14,0.019,18,0.577,20,0.327,22,0.01,23,0.013,24,0.01,33,4.289,51,1.293,83,0.882,92,1.071,97,2.311,111,1.748,115,3.613,117,2.192,119,4.286,121,2.924,127,2.924,128,2.924,196,4.412,282,2.571,283,2.501,936,2.924,937,5.604,938,4.728,939,4.19,940,2.924,941,3.214,942,4.19,943,3.214,944,3.214,945,3.601,946,3.601,947,3.601,948,3.601,949,3.601,950,4.19,951,4.19]],["title/components/ToolbarComponent.html",[477,1.555,521,1.836]],["body/components/ToolbarComponent.html",[0,0.086,3,0.137,4,0.12,5,0.103,6,0.143,7,0.11,10,0.25,11,0.767,13,0.462,14,0.018,16,1.044,18,0.419,20,0.155,22,0.007,23,0.011,24,0.007,31,0.987,40,0.651,44,0.56,45,0.722,46,0.452,51,1.206,56,0.651,57,1.107,77,0.589,117,3.413,126,1.107,129,2.075,211,2.198,212,2.39,282,1.054,287,1.361,376,1.438,408,1.523,409,1.523,410,1.523,413,1.846,417,1.846,477,2.183,478,2.663,479,1.988,480,1.988,481,1.988,482,1.724,485,3.364,486,1.988,487,4.193,489,2.868,491,2.868,493,3.683,513,2.868,514,2.868,515,1.988,516,3.683,517,1.988,518,3.683,519,1.523,520,1.724,521,2.822,522,4.44,523,1.988,524,1.988,653,3.835,748,3.835,763,4.499,766,2.659,866,4.748,874,4.925,875,3.835,876,3.835,952,2.373,953,5.234,954,4.462,955,6.074,956,6.074,957,3.093,958,4.462,959,3.093,960,3.093,961,3.093,962,3.093,963,3.093,964,3.093,965,5.729,966,4.462,967,4.462,968,5.729,969,6.328,970,4.462,971,3.093,972,5.234,973,2.659,974,3.093,975,3.093,976,3.093,977,3.093,978,4.462,979,5.234,980,5.234,981,3.093,982,3.422,983,4.462,984,4.462,985,3.093,986,5.234,987,3.093,988,3.093,989,3.093]],["title/modules/ToolbarModule.html",[284,1.403,990,2.602]],["body/modules/ToolbarModule.html",[0,0.129,3,0.205,4,0.179,5,0.153,6,0.104,7,0.08,14,0.018,18,0.655,20,0.231,22,0.011,23,0.014,24,0.011,77,0.878,220,2.75,284,1.734,285,2.142,286,2.41,287,2.027,288,3.361,289,2.75,290,2.75,291,3.361,294,3.49,295,2.75,296,2.569,298,3.26,299,3.26,300,2.41,306,3.26,411,3.974,420,3.534,421,4.928,422,2.961,521,3.714,990,5.163,991,3.96,992,3.96,993,4.607,994,3.96,995,4.607,996,4.607]],["title/interfaces/Transformer.html",[83,0.785,997,2.602]],["body/interfaces/Transformer.html",[3,0.236,4,0.206,5,0.177,6,0.144,7,0.111,10,0.429,13,0.429,14,0.018,16,0.913,20,0.266,22,0.013,23,0.015,24,0.013,31,1.412,44,0.962,45,0.733,46,0.776,56,1.118,83,1.118,111,2.216,997,4.457,998,4.566,999,5.489,1000,6.385,1001,6.847,1002,5.312,1003,5.312,1004,5.489]],["title/classes/User.html",[0,0.104,282,1.27]],["body/classes/User.html",[0,0.097,2,1.455,3,0.155,4,0.135,5,0.116,6,0.162,7,0.125,10,0.281,11,0.835,13,0.565,14,0.018,16,1.218,18,0.328,20,0.175,22,0.008,23,0.012,24,0.008,38,2.709,40,1.023,44,0.632,45,0.481,46,0.929,51,1.559,53,2.86,72,2.661,92,0.891,212,3.167,282,1.656,339,3.371,361,3.794,363,3.902,364,4.086,365,3.794,530,3.391,863,2.9,1005,2.676,1006,6.357,1007,6.357,1008,6.357,1009,5.464,1010,3.488,1011,3.488,1012,3.488,1013,3.488,1014,3.488,1015,3.488,1016,3.488,1017,3.488,1018,3.488,1019,3.488,1020,3.488,1021,3.488,1022,3.488,1023,3.488]],["title/injectables/UserEffects.html",[76,0.747,1024,2.859]],["body/injectables/UserEffects.html",[0,0.13,3,0.207,4,0.181,5,0.155,6,0.133,7,0.103,13,0.377,14,0.019,16,0.803,18,0.607,20,0.234,22,0.011,23,0.014,24,0.011,40,0.984,44,0.846,45,0.645,46,0.683,76,1.182,77,0.89,85,1.672,124,1.949,131,5.838,138,4.015,144,4.015,146,3.583,147,4.015,163,4.015,172,2.172,176,1.85,940,3.261,1024,4.525,1025,4.015,1026,4.671,1027,6.466,1028,4.741,1029,4.671,1030,5.899,1031,4.671,1032,4.671,1033,5.899,1034,4.671,1035,4.671,1036,4.671,1037,4.671]],["title/interfaces/UserProcessRole.html",[83,0.785,358,2.225]],["body/interfaces/UserProcessRole.html",[3,0.209,4,0.183,5,0.157,6,0.107,7,0.082,10,0.38,11,1.02,13,0.479,14,0.018,20,0.341,22,0.011,23,0.014,24,0.011,45,0.819,46,0.867,51,1.61,53,2.698,83,1.434,111,1.965,282,1.606,339,2.627,353,3.307,354,3.288,355,2.812,356,3.614,357,2.321,358,3.54,359,5.226,360,5.226,361,2.812,362,3.614,363,3.288,364,3.028,365,2.812,366,3.614,367,3.614]],["title/injectables/UserService.html",[76,0.747,1028,2.602]],["body/injectables/UserService.html",[0,0.08,3,0.128,4,0.112,5,0.096,6,0.148,7,0.114,10,0.232,11,0.728,13,0.476,14,0.019,16,1.097,18,0.599,20,0.144,22,0.007,23,0.01,24,0.007,31,0.936,38,2.361,40,0.606,44,1.003,45,0.764,46,0.809,51,1.058,53,2.444,56,1.3,64,1.719,68,2.728,76,0.849,77,0.549,85,1.031,89,1.766,92,1.673,106,1.418,107,1.506,115,1.418,120,3.56,124,1.201,126,1.516,129,2.576,166,1.267,170,2.956,171,2.01,172,2.745,176,1.989,188,3.306,212,2.907,247,2.907,262,1.851,279,2.722,282,2.277,283,1.719,333,2.209,353,3.725,357,1.418,365,3.684,393,3.64,863,3.809,1004,2.475,1028,2.956,1038,2.209,1039,5.023,1040,4.235,1041,4.235,1042,2.879,1043,4.235,1044,4.235,1045,4.235,1046,2.879,1047,3.64,1048,4.235,1049,4.761,1050,4.235,1051,4.235,1052,5.539,1053,4.235,1054,4.235,1055,4.235,1056,4.235,1057,4.235,1058,2.879,1059,2.879,1060,2.879,1061,2.879,1062,2.879,1063,2.879,1064,2.879,1065,2.879,1066,5.023,1067,2.879,1068,2.879,1069,2.879,1070,2.879,1071,2.879,1072,2.879,1073,2.879,1074,2.879,1075,2.879,1076,2.879]],["title/classes/UserTransformer.html",[0,0.104,335,2.602]],["body/classes/UserTransformer.html",[0,0.084,2,1.257,3,0.134,4,0.117,5,0.1,6,0.142,7,0.109,10,0.243,13,0.485,14,0.019,16,1.034,18,0.532,20,0.151,22,0.012,23,0.011,24,0.007,31,0.968,44,1.089,45,0.893,46,0.879,53,2.937,56,1.266,92,1.603,97,1.941,98,1.027,115,1.485,176,2.785,211,2.157,212,2.151,282,2.206,333,4.342,334,2.591,335,3.057,337,2.591,339,2.442,353,1.681,355,1.799,357,1.485,358,1.799,364,3.316,365,2.614,659,3.057,863,1.799,865,2.591,997,3.951,999,3.764,1009,5.168,1077,2.312,1078,4.379,1079,4.379,1080,4.379,1081,4.379,1082,4.379,1083,3.015,1084,4.379,1085,3.015,1086,4.379,1087,3.015,1088,4.379,1089,3.015,1090,4.379,1091,3.015,1092,3.015,1093,3.015,1094,3.015,1095,4.379,1096,3.015,1097,3.015,1098,3.015,1099,3.015,1100,3.015,1101,3.015,1102,3.015,1103,3.015,1104,3.015,1105,4.379,1106,3.015,1107,3.015,1108,3.015,1109,4.379,1110,4.379,1111,4.379,1112,4.379,1113,4.379,1114,4.379,1115,3.015,1116,3.015,1117,3.015,1118,3.015,1119,3.015,1120,3.015,1121,3.015,1122,3.015,1123,3.015]],["title/coverage.html",[1124,3.901]],["body/coverage.html",[0,0.169,1,1.063,5,0.059,6,0.173,7,0.133,8,1.366,9,1.366,13,0.144,14,0.019,22,0.004,23,0.007,24,0.004,25,1.145,26,2.376,34,1.282,42,0.877,48,1.145,76,1.217,78,0.784,79,0.993,83,1.305,98,0.607,108,1.145,110,1.145,112,2.981,116,1.366,119,2.033,121,4.584,122,1.366,123,1.243,125,1.531,126,0.637,127,2.033,128,2.033,129,0.828,133,0.932,172,0.828,177,1.366,178,1.366,180,1.366,181,1.366,188,1.063,190,0.932,196,1.063,218,4.253,231,1.366,232,1.145,234,2.033,235,1.366,238,1.243,277,1.366,282,0.993,304,1.366,308,2.234,312,1.366,319,1.366,335,1.243,353,0.993,354,2.981,355,1.063,358,1.063,368,1.366,369,1.366,370,1.366,371,2.033,376,1.355,408,0.877,409,0.877,410,0.877,414,1.243,416,1.243,418,1.243,424,1.366,430,1.739,438,1.145,439,1.366,440,2.376,441,1.063,476,1.531,477,1.965,483,1.366,484,1.366,519,0.877,521,0.877,525,1.145,526,1.366,527,1.063,554,2.033,555,2.033,596,1.366,602,1.873,603,2.033,609,1.366,643,1.366,644,2.033,717,1.366,718,1.366,719,1.366,723,1.243,724,1.366,743,1.366,780,1.243,781,4.095,851,2.033,857,1.366,863,1.063,864,1.531,866,1.243,867,1.366,868,1.366,880,1.366,927,1.145,928,1.243,933,1.366,934,1.366,936,3.288,940,1.243,941,1.366,943,1.366,944,1.366,952,1.366,982,2.234,997,1.243,998,1.531,1005,1.366,1024,1.366,1025,1.531,1028,1.243,1038,1.366,1077,1.366,1124,1.366,1125,1.781,1126,1.781,1127,1.531,1128,1.531,1129,2.504,1130,1.531,1131,6.238,1132,1.531,1133,1.531,1134,2.504,1135,1.531,1136,2.504,1137,1.531,1138,1.531,1139,1.531,1140,1.531,1141,1.531,1142,1.531,1143,1.531,1144,1.531,1145,1.531,1146,1.366,1147,4.271,1148,4.347,1149,4.588,1150,4.271,1151,2.504,1152,4.049,1153,2.504,1154,3.276,1155,6.812,1156,2.234,1157,1.531,1158,3.178,1159,1.531,1160,1.531,1161,2.504,1162,4.271,1163,1.366,1164,1.531,1165,1.781,1166,1.531,1167,1.531,1168,2.913,1169,1.781,1170,1.781,1171,3.276,1172,2.504,1173,1.531,1174,1.531,1175,1.531,1176,1.531,1177,1.531]],["title/dependencies.html",[286,2.345,1178,3.113]],["body/dependencies.html",[14,0.019,19,2.885,22,0.012,23,0.015,24,0.012,77,0.921,164,3.708,166,2.127,220,2.885,286,2.529,300,2.529,422,3.107,469,4.155,471,4.155,475,4.155,571,3.708,701,4.155,1179,4.834,1180,7.459,1181,4.834,1182,6.027,1183,4.834,1184,4.155,1185,4.834,1186,6.027,1187,5.181,1188,4.834,1189,6.568,1190,4.834,1191,4.834,1192,4.834,1193,4.834,1194,4.834,1195,4.834,1196,4.834,1197,4.834,1198,4.834,1199,4.834,1200,4.834]],["title/miscellaneous/enumerations.html",[1201,1.858,1202,3.853]],["body/miscellaneous/enumerations.html",[3,0.2,6,0.144,7,0.111,10,0.364,14,0.018,22,0.011,23,0.014,24,0.011,32,3.457,33,2.69,36,3.457,63,3.215,118,4.679,126,2.579,129,2.957,137,2.854,218,2.513,282,2.486,509,3.146,602,2.897,659,3.146,1154,3.457,1171,3.457,1201,2.69,1202,3.874,1203,5.767,1204,3.874,1205,3.874,1206,5.767,1207,5.767,1208,3.874,1209,4.507,1210,5.767,1211,4.507,1212,5.767,1213,4.507,1214,4.507,1215,4.507,1216,4.507,1217,4.507,1218,4.507,1219,4.507]],["title/miscellaneous/functions.html",[1201,1.858,1220,3.438]],["body/miscellaneous/functions.html",[0,0.082,4,0.167,5,0.198,6,0.154,7,0.119,10,0.237,13,0.237,14,0.018,18,0.276,22,0.007,23,0.01,24,0.007,29,1.636,44,1.279,45,0.997,46,1.032,51,0.904,53,1.701,56,1.487,110,1.887,112,2.049,115,1.446,122,3.896,196,2.564,202,2.523,284,1.104,304,3.294,308,4.288,338,2.998,357,1.446,428,2.251,430,2.564,482,3.117,530,2.998,725,2.523,780,2.049,781,2.251,782,4.366,793,2.523,801,2.523,826,2.523,833,2.523,835,2.523,836,3.692,837,3.692,840,2.523,841,3.692,845,2.523,846,3.692,851,2.049,857,3.294,936,2.049,937,4.805,949,3.692,1049,2.523,1128,2.523,1129,3.692,1130,4.366,1132,2.523,1133,4.366,1134,2.523,1135,3.692,1137,3.692,1140,3.692,1141,3.692,1142,3.692,1143,3.692,1144,3.692,1145,3.692,1146,2.251,1156,2.251,1163,2.251,1174,2.523,1175,3.692,1201,1.752,1220,2.251,1221,4.295,1222,2.935,1223,6.214,1224,4.295,1225,2.523,1226,2.935,1227,2.935,1228,2.523,1229,2.523,1230,2.935,1231,4.295,1232,4.295,1233,5.59,1234,4.295,1235,4.295,1236,4.295,1237,4.295,1238,4.295,1239,3.692,1240,4.295,1241,3.692,1242,4.295,1243,4.295,1244,5.59,1245,4.295,1246,2.935,1247,4.295,1248,4.295,1249,5.079,1250,2.935,1251,4.295,1252,2.935,1253,2.935,1254,2.935,1255,2.935,1256,2.935,1257,2.935,1258,2.935,1259,2.935,1260,2.935,1261,4.295,1262,4.295,1263,2.935,1264,2.935,1265,2.935]],["title/index.html",[10,0.251,1266,3.113,1267,3.113]],["body/index.html",[4,0.174,7,0.078,14,0.014,22,0.011,23,0.014,24,0.011,45,0.619,98,1.528,296,2.499,338,3.129,477,2.646,520,2.499,790,5.452,819,4.94,829,3.853,830,3.853,1047,3.853,1184,3.853,1239,3.853,1241,3.853,1268,4.483,1269,6.343,1270,4.483,1271,4.483,1272,5.747,1273,6.917,1274,7.196,1275,4.483,1276,4.483,1277,4.483,1278,4.483,1279,4.483,1280,4.483,1281,4.483,1282,4.483,1283,4.483,1284,6.343,1285,6.343,1286,4.483,1287,6.917,1288,4.483,1289,4.483,1290,4.483,1291,4.483,1292,4.483,1293,4.483,1294,4.483,1295,5.747,1296,4.408,1297,6.69,1298,3.439,1299,5.747,1300,5.747,1301,4.483,1302,6.69,1303,4.483,1304,4.483,1305,4.483,1306,6.343,1307,4.483,1308,4.483]],["title/modules.html",[285,2.365]],["body/modules.html",[14,0.016,22,0.013,23,0.016,24,0.013,209,3.448,285,2.494,403,3.743,411,2.99,466,4.114,773,3.743,924,3.743,990,3.743,1187,6.262,1309,7.286,1310,7.286,1311,7.477,1312,6.422,1313,6.422]],["title/overview.html",[1314,4.372]],["body/overview.html",[2,1.692,14,0.018,22,0.01,23,0.013,24,0.01,111,1.692,124,1.692,177,3.112,209,4.138,232,3.885,284,1.527,285,1.887,286,2.122,287,1.785,288,2.122,289,2.422,290,2.422,291,2.122,292,3.487,293,3.487,294,3.214,295,2.422,296,2.262,403,5.197,404,3.487,405,3.487,406,3.487,407,3.487,408,3.461,409,3.461,410,3.461,411,3.735,478,2.422,519,3.461,521,3.461,659,2.832,773,4.904,774,3.487,775,3.487,777,3.487,924,4.493,925,3.487,926,3.487,927,3.885,990,4.904,991,3.487,992,3.487,994,3.487,1314,3.487,1315,4.057,1316,4.057,1317,5.384,1318,4.057]],["title/unit-test.html",[1296,3.074,1298,3.074]],["body/unit-test.html",[5,0.075,6,0.166,7,0.128,8,1.737,9,1.737,14,0.019,22,0.005,23,0.009,24,0.005,26,1.456,34,1.553,98,0.772,180,1.737,181,1.737,218,3.937,234,2.464,235,1.737,277,1.737,312,4.662,319,1.737,369,1.737,370,1.737,371,2.464,376,1.642,414,1.581,416,1.581,418,1.581,424,1.737,439,1.737,440,2.789,483,1.737,484,1.737,526,1.737,527,1.352,554,1.581,555,1.581,596,1.737,602,1.456,603,1.581,643,1.737,644,2.464,718,1.737,719,1.737,724,1.737,743,1.737,851,2.464,867,1.737,868,1.737,880,1.737,928,1.581,933,1.737,934,1.737,952,1.737,973,1.947,982,5.574,1005,1.737,1038,1.737,1077,1.737,1124,1.737,1127,1.947,1131,3.035,1136,1.947,1138,4.836,1139,4.211,1146,1.737,1148,4.565,1149,1.947,1151,3.729,1152,3.035,1153,1.947,1163,1.737,1164,3.729,1166,4.565,1167,3.729,1176,1.947,1177,1.947,1220,1.737,1296,1.737,1298,1.737,1319,2.265,1320,2.265,1321,2.265,1322,2.265,1323,2.265,1324,3.53,1325,2.265,1326,2.265,1327,2.265,1328,2.265,1329,2.265,1330,2.265,1331,5.627,1332,6.245,1333,5.627,1334,3.53,1335,3.53,1336,3.53,1337,2.265,1338,2.265,1339,2.265,1340,2.265,1341,2.265,1342,2.265,1343,2.265,1344,2.265,1345,2.265,1346,2.265,1347,2.265,1348,3.53,1349,2.265,1350,2.265,1351,2.265,1352,3.53,1353,3.53,1354,2.265,1355,2.265,1356,2.265,1357,2.265,1358,2.265,1359,2.265,1360,3.53,1361,2.265,1362,2.265,1363,2.265,1364,2.265,1365,2.265,1366,2.265,1367,2.265,1368,2.265,1369,2.265,1370,3.53,1371,3.53,1372,3.53,1373,3.53,1374,4.899,1375,3.53,1376,2.265,1377,2.265,1378,2.265,1379,2.265,1380,2.265,1381,3.53,1382,2.265,1383,2.265,1384,2.265,1385,2.265,1386,2.265,1387,2.265,1388,2.265,1389,3.53,1390,2.265,1391,2.265,1392,3.53,1393,2.265,1394,2.265,1395,2.265,1396,2.265,1397,2.265,1398,2.265,1399,2.265,1400,2.265,1401,2.265,1402,2.265,1403,2.265,1404,2.265,1405,2.265,1406,2.265,1407,2.265,1408,2.265,1409,3.53,1410,2.265,1411,2.265,1412,3.53,1413,2.265,1414,2.265,1415,2.265,1416,2.265]],["title/miscellaneous/variables.html",[1201,1.858,1417,3.853]],["body/miscellaneous/variables.html",[6,0.148,7,0.114,10,0.231,13,0.475,14,0.019,22,0.007,23,0.01,24,0.007,33,3.9,51,0.887,72,1.258,89,2.087,110,3.216,112,1.996,113,4.234,114,2.193,115,3.218,116,3.232,117,2.204,118,1.996,119,4.56,120,1.838,126,1.508,127,3.853,128,3.853,129,1.959,136,2.763,137,2.763,196,4.383,282,2.312,438,1.838,525,1.838,602,1.838,603,2.941,609,3.232,936,1.996,938,3.622,940,2.941,941,3.232,943,3.232,944,3.232,945,2.458,946,3.622,947,3.622,948,2.458,1154,2.193,1156,2.193,1157,3.622,1158,2.458,1159,4.745,1160,3.622,1161,4.745,1171,2.193,1172,2.458,1173,4.3,1201,1.707,1204,4.745,1205,2.458,1208,4.745,1225,3.622,1228,2.458,1229,4.3,1417,2.458,1418,5.003,1419,4.213,1420,2.859,1421,2.859,1422,6.534,1423,2.859,1424,6.157,1425,2.859,1426,2.859,1427,2.859,1428,2.859,1429,2.859,1430,2.859,1431,2.859,1432,2.859,1433,5.003,1434,2.859,1435,4.213,1436,2.859,1437,2.859]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":218,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"components/LoginCardComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"unit-test.html":{}}}],["0.10.2",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["0/0",{"_index":1332,"title":{},"body":{"unit-test.html":{}}}],["0/1",{"_index":1131,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["0/10",{"_index":1151,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["0/11",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1323,"title":{},"body":{"unit-test.html":{}}}],["0/16",{"_index":1346,"title":{},"body":{"unit-test.html":{}}}],["0/2",{"_index":1148,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["0/3",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1149,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["0/7",{"_index":1152,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["0/8",{"_index":1167,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["0/9",{"_index":1153,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["1",{"_index":659,"title":{},"body":{"components/LoginCardComponent.html":{},"classes/UserTransformer.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)[0",{"_index":547,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["1.11.1",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1136,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["1/11",{"_index":1338,"title":{},"body":{"unit-test.html":{}}}],["1/12",{"_index":1325,"title":{},"body":{"unit-test.html":{}}}],["1/13",{"_index":1415,"title":{},"body":{"unit-test.html":{}}}],["1/2",{"_index":1334,"title":{},"body":{"unit-test.html":{}}}],["1/3",{"_index":1409,"title":{},"body":{"unit-test.html":{}}}],["1/4",{"_index":1166,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["1/5",{"_index":1139,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["1/6",{"_index":1355,"title":{},"body":{"unit-test.html":{}}}],["1/7",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1359,"title":{},"body":{"unit-test.html":{}}}],["10/14",{"_index":1375,"title":{},"body":{"unit-test.html":{}}}],["100",{"_index":982,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["10px",{"_index":655,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["11",{"_index":1317,"title":{},"body":{"overview.html":{}}}],["11/27",{"_index":1357,"title":{},"body":{"unit-test.html":{}}}],["117",{"_index":658,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["12",{"_index":1318,"title":{},"body":{"overview.html":{}}}],["12/12",{"_index":1399,"title":{},"body":{"unit-test.html":{}}}],["120px",{"_index":976,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["13",{"_index":1358,"title":{},"body":{"unit-test.html":{}}}],["14",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":984,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["16/23",{"_index":1388,"title":{},"body":{"unit-test.html":{}}}],["17",{"_index":1354,"title":{},"body":{"unit-test.html":{}}}],["17/18",{"_index":1383,"title":{},"body":{"unit-test.html":{}}}],["17/24",{"_index":1384,"title":{},"body":{"unit-test.html":{}}}],["18/19",{"_index":1378,"title":{},"body":{"unit-test.html":{}}}],["18/20",{"_index":1395,"title":{},"body":{"unit-test.html":{}}}],["1px",{"_index":770,"title":{},"body":{"components/PanelComponent.html":{}}}],["2",{"_index":1213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2.0.8",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1331,"title":{},"body":{"unit-test.html":{}}}],["2/4",{"_index":1392,"title":{},"body":{"unit-test.html":{}}}],["20",{"_index":1138,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["20px",{"_index":988,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["21",{"_index":1343,"title":{},"body":{"unit-test.html":{}}}],["21/23",{"_index":1391,"title":{},"body":{"unit-test.html":{}}}],["22",{"_index":1328,"title":{},"body":{"unit-test.html":{}}}],["23px",{"_index":989,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["24",{"_index":1341,"title":{},"body":{"unit-test.html":{}}}],["25",{"_index":312,"title":{},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{},"unit-test.html":{}}}],["25/27",{"_index":1373,"title":{},"body":{"unit-test.html":{}}}],["26",{"_index":1321,"title":{},"body":{"unit-test.html":{}}}],["26/27",{"_index":1401,"title":{},"body":{"unit-test.html":{}}}],["28",{"_index":1413,"title":{},"body":{"unit-test.html":{}}}],["3",{"_index":1214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3/12",{"_index":1412,"title":{},"body":{"unit-test.html":{}}}],["3/15",{"_index":1330,"title":{},"body":{"unit-test.html":{}}}],["3/3",{"_index":1360,"title":{},"body":{"unit-test.html":{}}}],["3/9",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1326,"title":{},"body":{"unit-test.html":{}}}],["33",{"_index":1164,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["33/34",{"_index":1397,"title":{},"body":{"unit-test.html":{}}}],["35",{"_index":1339,"title":{},"body":{"unit-test.html":{}}}],["36",{"_index":1335,"title":{},"body":{"unit-test.html":{}}}],["4",{"_index":509,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4/10",{"_index":1369,"title":{},"body":{"unit-test.html":{}}}],["4/18",{"_index":1329,"title":{},"body":{"unit-test.html":{}}}],["4/20",{"_index":1347,"title":{},"body":{"unit-test.html":{}}}],["4/4",{"_index":1381,"title":{},"body":{"unit-test.html":{}}}],["4/6",{"_index":1406,"title":{},"body":{"unit-test.html":{}}}],["4/7",{"_index":1351,"title":{},"body":{"unit-test.html":{}}}],["4/8",{"_index":1362,"title":{},"body":{"unit-test.html":{}}}],["4/9",{"_index":1366,"title":{},"body":{"unit-test.html":{}}}],["40",{"_index":1368,"title":{},"body":{"unit-test.html":{}}}],["401",{"_index":268,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["41",{"_index":1356,"title":{},"body":{"unit-test.html":{}}}],["44",{"_index":1365,"title":{},"body":{"unit-test.html":{}}}],["48px",{"_index":981,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["5",{"_index":1316,"title":{},"body":{"overview.html":{}}}],["5/24",{"_index":1344,"title":{},"body":{"unit-test.html":{}}}],["5/5",{"_index":1376,"title":{},"body":{"unit-test.html":{}}}],["5/6",{"_index":1411,"title":{},"body":{"unit-test.html":{}}}],["5/7",{"_index":1398,"title":{},"body":{"unit-test.html":{}}}],["5/8",{"_index":1405,"title":{},"body":{"unit-test.html":{}}}],["5/9",{"_index":1371,"title":{},"body":{"unit-test.html":{}}}],["50",{"_index":1333,"title":{},"body":{"unit-test.html":{}}}],["55",{"_index":1363,"title":{},"body":{"unit-test.html":{}}}],["56",{"_index":1370,"title":{},"body":{"unit-test.html":{}}}],["57",{"_index":1350,"title":{},"body":{"unit-test.html":{}}}],["6",{"_index":1215,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6.5.4",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":1361,"title":{},"body":{"unit-test.html":{}}}],["6/11",{"_index":1364,"title":{},"body":{"unit-test.html":{}}}],["6/12",{"_index":1367,"title":{},"body":{"unit-test.html":{}}}],["6/24",{"_index":1345,"title":{},"body":{"unit-test.html":{}}}],["6/6",{"_index":1389,"title":{},"body":{"unit-test.html":{}}}],["6/7",{"_index":1408,"title":{},"body":{"unit-test.html":{}}}],["6/8",{"_index":1386,"title":{},"body":{"unit-test.html":{}}}],["6/9",{"_index":1349,"title":{},"body":{"unit-test.html":{}}}],["60",{"_index":973,"title":{},"body":{"components/ToolbarComponent.html":{},"unit-test.html":{}}}],["63",{"_index":1404,"title":{},"body":{"unit-test.html":{}}}],["67",{"_index":1348,"title":{},"body":{"unit-test.html":{}}}],["7",{"_index":1315,"title":{},"body":{"overview.html":{}}}],["7/20",{"_index":1340,"title":{},"body":{"unit-test.html":{}}}],["7/21",{"_index":1416,"title":{},"body":{"unit-test.html":{}}}],["7/23",{"_index":1327,"title":{},"body":{"unit-test.html":{}}}],["7/27",{"_index":1322,"title":{},"body":{"unit-test.html":{}}}],["7/29",{"_index":1342,"title":{},"body":{"unit-test.html":{}}}],["7/9",{"_index":1353,"title":{},"body":{"unit-test.html":{}}}],["70",{"_index":1387,"title":{},"body":{"unit-test.html":{}}}],["71",{"_index":1374,"title":{},"body":{"unit-test.html":{}}}],["75",{"_index":1385,"title":{},"body":{"unit-test.html":{}}}],["78",{"_index":1352,"title":{},"body":{"unit-test.html":{}}}],["8",{"_index":1324,"title":{},"body":{"unit-test.html":{}}}],["8.1.0",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["8/29",{"_index":1414,"title":{},"body":{"unit-test.html":{}}}],["8/8",{"_index":1393,"title":{},"body":{"unit-test.html":{}}}],["8/9",{"_index":1380,"title":{},"body":{"unit-test.html":{}}}],["82",{"_index":1402,"title":{},"body":{"unit-test.html":{}}}],["83",{"_index":1410,"title":{},"body":{"unit-test.html":{}}}],["86",{"_index":1407,"title":{},"body":{"unit-test.html":{}}}],["87",{"_index":662,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["89",{"_index":1379,"title":{},"body":{"unit-test.html":{}}}],["9",{"_index":1337,"title":{},"body":{"unit-test.html":{}}}],["9.0.0",{"_index":1184,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.0.5",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["9/11",{"_index":1403,"title":{},"body":{"unit-test.html":{}}}],["9/25",{"_index":1336,"title":{},"body":{"unit-test.html":{}}}],["90",{"_index":1394,"title":{},"body":{"unit-test.html":{}}}],["91",{"_index":1390,"title":{},"body":{"unit-test.html":{}}}],["93",{"_index":1372,"title":{},"body":{"unit-test.html":{}}}],["94",{"_index":1382,"title":{},"body":{"unit-test.html":{}}}],["95",{"_index":1377,"title":{},"body":{"unit-test.html":{}}}],["96",{"_index":1400,"title":{},"body":{"unit-test.html":{}}}],["97",{"_index":1396,"title":{},"body":{"unit-test.html":{}}}],["_actions",{"_index":1030,"title":{},"body":{"injectables/UserEffects.html":{}}}],["_auth",{"_index":193,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{}}}],["_authenticated",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_authservice",{"_index":1044,"title":{},"body":{"injectables/UserService.html":{}}}],["_config",{"_index":189,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/SessionService.html":{}}}],["_http",{"_index":374,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["_log",{"_index":604,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["_loginurl",{"_index":182,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["_publishers",{"_index":605,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["_router",{"_index":191,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["_session",{"_index":240,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"injectables/SessionService.html":{}}}],["_sessionheader",{"_index":881,"title":{},"body":{"injectables/SessionService.html":{}}}],["_storage",{"_index":882,"title":{},"body":{"injectables/SessionService.html":{}}}],["_user",{"_index":1039,"title":{},"body":{"injectables/UserService.html":{}}}],["_userservice",{"_index":1027,"title":{},"body":{"injectables/UserEffects.html":{}}}],["a.authority",{"_index":1094,"title":{},"body":{"classes/UserTransformer.html":{}}}],["a11ymodule",{"_index":705,"title":{},"body":{"modules/MaterialModule.html":{}}}],["a:hover",{"_index":660,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["abstract",{"_index":21,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"classes/AuthenticationMethodService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"components/RegistrationCardComponent.html":{}}}],["abstractcard",{"_index":1,"title":{"classes/AbstractCard.html":{}},"body":{"classes/AbstractCard.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{},"coverage.html":{}}}],["abstractcard:4",{"_index":502,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["abstractloggerservice",{"_index":25,"title":{"classes/AbstractLoggerService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["abstractloggerservice:12",{"_index":641,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:13",{"_index":642,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:28",{"_index":638,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:32",{"_index":640,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:40",{"_index":636,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:44",{"_index":634,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:48",{"_index":639,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:52",{"_index":635,"title":{},"body":{"injectables/LoggerService.html":{}}}],["abstractloggerservice:56",{"_index":637,"title":{},"body":{"injectables/LoggerService.html":{}}}],["accessors",{"_index":38,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationService.html":{},"classes/LogEntry.html":{},"injectables/LogPublisherService.html":{},"injectables/SessionService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["according",{"_index":574,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["account_circle",{"_index":965,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["action",{"_index":937,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["action.user.email",{"_index":155,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["actions",{"_index":131,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["actions/authentication.actions",{"_index":165,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["actions/user.actions",{"_index":942,"title":{},"body":{"interfaces/State.html":{}}}],["activatedroutesnapshot",{"_index":195,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["actual_component",{"_index":524,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["added",{"_index":1252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adding",{"_index":1243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additional",{"_index":562,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["addprovidertomodule",{"_index":1135,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addprovidertomodule(source",{"_index":1230,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addsymboltongmodulemetadata",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addsymboltongmodulemetadata(source",{"_index":1246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["allows",{"_index":1240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":790,"title":{},"body":{"interfaces/ProjectInfo.html":{},"index.html":{}}}],["angular.json",{"_index":808,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["angular/animations",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":706,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/drag",{"_index":703,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/portal",{"_index":714,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/scrolling",{"_index":716,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/stepper",{"_index":708,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/table",{"_index":710,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/tree",{"_index":712,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/common",{"_index":300,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":252,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"modules/AuthenticationModule.html":{},"injectables/BasicAuthenticationService.html":{}}}],["angular/compiler",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":77,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":422,"title":{},"body":{"modules/CardModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":19,"title":{},"body":{"classes/AbstractCard.html":{},"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":701,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":164,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"dependencies.html":{}}}],["app",{"_index":520,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["application",{"_index":7,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["appname",{"_index":955,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["array",{"_index":53,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/Authority.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{}}}],["artifacts",{"_index":1288,"title":{},"body":{"index.html":{}}}],["atob(token).split(':')[1",{"_index":923,"title":{},"body":{"injectables/SessionService.html":{}}}],["attributes",{"_index":579,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["auth",{"_index":118,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/SessionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authenticated",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{}}}],["authentication.factory",{"_index":305,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.module",{"_index":210,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["authentication.service.ts",{"_index":371,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["authentication.service.ts:10",{"_index":373,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["authentication.service.ts:14",{"_index":721,"title":{},"body":{"injectables/NullAuthenticationService.html":{}}}],["authentication.service.ts:16",{"_index":375,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["authentication.service.ts:18",{"_index":722,"title":{},"body":{"injectables/NullAuthenticationService.html":{}}}],["authentication.service.ts:35",{"_index":377,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["authentication.service.ts:8",{"_index":720,"title":{},"body":{"injectables/NullAuthenticationService.html":{}}}],["authentication/authentication.service",{"_index":207,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{}}}],["authentication/basic",{"_index":370,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["authentication/models/credentials",{"_index":1064,"title":{},"body":{"injectables/UserService.html":{}}}],["authentication/null",{"_index":719,"title":{},"body":{"injectables/NullAuthenticationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["authentication/services/authentication/authentication.service",{"_index":1065,"title":{},"body":{"injectables/UserService.html":{}}}],["authentication_feature_key",{"_index":116,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationactiontypes",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authenticationactiontypes.login",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticationactiontypes.login_failure",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticationactiontypes.login_success",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticationactiontypes.logout",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticationeffects",{"_index":123,"title":{"injectables/AuthenticationEffects.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authenticationguardservice",{"_index":178,"title":{"guards/AuthenticationGuardService.html":{}},"body":{"guards/AuthenticationGuardService.html":{},"coverage.html":{}}}],["authenticationguardservice.login_component",{"_index":216,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["authenticationinterceptor",{"_index":232,"title":{"interceptors/AuthenticationInterceptor.html":{}},"body":{"interceptors/AuthenticationInterceptor.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationmethodservice",{"_index":133,"title":{"classes/AuthenticationMethodService.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{},"coverage.html":{}}}],["authenticationmethodservice:10",{"_index":379,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{}}}],["authenticationmethodservice:12",{"_index":380,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{}}}],["authenticationmodule",{"_index":209,"title":{"modules/AuthenticationModule.html":{}},"body":{"guards/AuthenticationGuardService.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationservice",{"_index":188,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["authenticationservicefactory",{"_index":304,"title":{},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authenticationservicefactory(config",{"_index":1260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authorities",{"_index":365,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["authorities.map(a",{"_index":1093,"title":{},"body":{"classes/UserTransformer.html":{}}}],["authority",{"_index":353,"title":{"interfaces/Authority.html":{}},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{}}}],["authority.some(a",{"_index":1068,"title":{},"body":{"injectables/UserService.html":{}}}],["authreducer",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":132,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authstate",{"_index":110,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authuser",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["automatically",{"_index":1279,"title":{},"body":{"index.html":{}}}],["available",{"_index":1313,"title":{},"body":{"modules.html":{}}}],["basic",{"_index":396,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["basicauthenticationservice",{"_index":368,"title":{"injectables/BasicAuthenticationService.html":{}},"body":{"injectables/BasicAuthenticationService.html":{},"coverage.html":{}}}],["behaviorsubject",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LogPublisherService.html":{},"injectables/SessionService.html":{}}}],["behaviorsubject(false",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(null",{"_index":625,"title":{},"body":{"injectables/LogPublisherService.html":{},"injectables/SessionService.html":{}}}],["beta.29",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":68,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":289,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}],["border",{"_index":769,"title":{},"body":{"components/PanelComponent.html":{}}}],["bottom",{"_index":654,"title":{},"body":{"components/LoginCardComponent.html":{},"components/PanelComponent.html":{}}}],["branches",{"_index":1319,"title":{},"body":{"unit-test.html":{}}}],["break",{"_index":458,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["browse",{"_index":1311,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1187,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["btoa(`${credentials.username}:${credentials.password",{"_index":397,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["btoa(sessionservice.session_token_storage_key",{"_index":918,"title":{},"body":{"injectables/SessionService.html":{}}}],["build",{"_index":1287,"title":{},"body":{"index.html":{}}}],["button",{"_index":987,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["calculated",{"_index":1054,"title":{},"body":{"injectables/UserService.html":{}}}],["canactivate",{"_index":185,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["canactivate(route",{"_index":194,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["card",{"_index":504,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["card.component",{"_index":415,"title":{},"body":{"modules/CardModule.html":{}}}],["card.component.html",{"_index":492,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["card.component.scss",{"_index":490,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["card.component.ts",{"_index":644,"title":{},"body":{"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["card.component.ts:11",{"_index":646,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["card.component.ts:12",{"_index":856,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["card.component.ts:13",{"_index":853,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["card.component.ts:21",{"_index":647,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["card.component.ts:24",{"_index":648,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["card.component.ts:25",{"_index":854,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["card.component.ts:28",{"_index":855,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["card.ts",{"_index":9,"title":{},"body":{"classes/AbstractCard.html":{},"coverage.html":{},"unit-test.html":{}}}],["card.ts:4",{"_index":17,"title":{},"body":{"classes/AbstractCard.html":{}}}],["card/forgotten",{"_index":418,"title":{},"body":{"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["card/login",{"_index":416,"title":{},"body":{"modules/CardModule.html":{},"components/LoginCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["card/password.validator.ts",{"_index":1163,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"unit-test.html":{}}}],["card/registration",{"_index":414,"title":{},"body":{"modules/CardModule.html":{},"components/RegistrationCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["cardmodule",{"_index":403,"title":{"modules/CardModule.html":{}},"body":{"modules/CardModule.html":{},"modules.html":{},"overview.html":{}}}],["case",{"_index":455,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["catch",{"_index":543,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["catcherror",{"_index":167,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{}}}],["catcherror(error",{"_index":146,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/AuthenticationService.html":{},"injectables/UserEffects.html":{}}}],["catcherror(errorevent",{"_index":265,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["cdksteppermodule",{"_index":707,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktablemodule",{"_index":709,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktreemodule",{"_index":711,"title":{},"body":{"modules/MaterialModule.html":{}}}],["change",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["change.toadd",{"_index":850,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["changelanguage",{"_index":870,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["changelanguage(language",{"_index":872,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["changes",{"_index":846,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["check",{"_index":1047,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"classes/AuthenticationMethodService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"classes/NullStorage.html":{},"classes/User.html":{},"classes/UserTransformer.html":{}},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"classes/AuthenticationMethodService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"classes/NullStorage.html":{},"classes/User.html":{},"classes/UserTransformer.html":{},"overview.html":{}}}],["classifiedname",{"_index":1232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clear",{"_index":443,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"classes/NullStorage.html":{},"injectables/SessionService.html":{}}}],["clearall",{"_index":606,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["clearing",{"_index":272,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["cli",{"_index":1269,"title":{},"body":{"index.html":{}}}],["cluster_authenticationmodule",{"_index":292,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_providers",{"_index":293,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_cardmodule",{"_index":404,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_declarations",{"_index":405,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_exports",{"_index":407,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_imports",{"_index":406,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_panelmodule",{"_index":774,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_declarations",{"_index":775,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_exports",{"_index":777,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_imports",{"_index":776,"title":{},"body":{"modules/PanelModule.html":{}}}],["cluster_signupmodule",{"_index":925,"title":{},"body":{"modules/SignUpModule.html":{},"overview.html":{}}}],["cluster_signupmodule_providers",{"_index":926,"title":{},"body":{"modules/SignUpModule.html":{},"overview.html":{}}}],["cluster_toolbarmodule",{"_index":991,"title":{},"body":{"modules/ToolbarModule.html":{},"overview.html":{}}}],["cluster_toolbarmodule_declarations",{"_index":992,"title":{},"body":{"modules/ToolbarModule.html":{},"overview.html":{}}}],["cluster_toolbarmodule_exports",{"_index":994,"title":{},"body":{"modules/ToolbarModule.html":{},"overview.html":{}}}],["cluster_toolbarmodule_imports",{"_index":993,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["code",{"_index":1282,"title":{},"body":{"index.html":{}}}],["color",{"_index":656,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["commonmodule",{"_index":299,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{}}}],["component",{"_index":477,"title":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":517,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["components",{"_index":478,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["config",{"_index":29,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/functions.html":{}}}],["configuration",{"_index":430,"title":{},"body":{"classes/ConfigurationService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/ProjectInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configuration/configuration.service",{"_index":206,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/SessionService.html":{}}}],["configuration/interfaces/schema",{"_index":208,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["configurationservice",{"_index":190,"title":{"classes/ConfigurationService.html":{}},"body":{"guards/AuthenticationGuardService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"injectables/SessionService.html":{},"coverage.html":{}}}],["confirmpassword",{"_index":859,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["console.clear",{"_index":452,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.debug('authentication",{"_index":269,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["console.debug('log",{"_index":548,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["console.debug(entry.tostring",{"_index":457,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.error(entry.tostring",{"_index":460,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.error(error",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.error(ex",{"_index":552,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["console.info(entry.tostring",{"_index":462,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.log(action.error",{"_index":151,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log(action.type",{"_index":159,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log(entry.tostring",{"_index":465,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["console.log(form",{"_index":508,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["console.warn(entry.tostring",{"_index":464,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["consolelogpublisher",{"_index":438,"title":{"classes/ConsoleLogPublisher.html":{}},"body":{"classes/ConsoleLogPublisher.html":{},"injectables/LogPublisherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":97,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"guards/AuthenticationGuardService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"interfaces/ProjectInfo.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"classes/UserTransformer.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/SignUpService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(_actions",{"_index":1026,"title":{},"body":{"injectables/UserEffects.html":{}}}],["constructor(_auth",{"_index":187,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{}}}],["constructor(_authservice",{"_index":1042,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(_config",{"_index":888,"title":{},"body":{"injectables/SessionService.html":{}}}],["constructor(_http",{"_index":372,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["constructor(_session",{"_index":237,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["constructor(actions",{"_index":130,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["constructor(configuration",{"_index":427,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["constructor(fb",{"_index":495,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["constructor(id",{"_index":1010,"title":{},"body":{"classes/User.html":{}}}],["constructor(level",{"_index":559,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["constructor(private",{"_index":85,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"components/ForgottenPasswordCardComponent.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SessionService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":964,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["constructor(publisherservice",{"_index":41,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["constructor(selectlanguageservice",{"_index":957,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["content",{"_index":836,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["control",{"_index":1264,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copied",{"_index":1235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["covalent/core",{"_index":475,"title":{},"body":{"modules/CovalentModule.html":{},"dependencies.html":{}}}],["covalent/highlight",{"_index":469,"title":{},"body":{"modules/CovalentModule.html":{},"dependencies.html":{}}}],["covalent/markdown",{"_index":471,"title":{},"body":{"modules/CovalentModule.html":{},"dependencies.html":{}}}],["covalentcommonmodule",{"_index":472,"title":{},"body":{"modules/CovalentModule.html":{}}}],["covalenthighlightmodule",{"_index":468,"title":{},"body":{"modules/CovalentModule.html":{}}}],["covalentlayoutmodule",{"_index":473,"title":{},"body":{"modules/CovalentModule.html":{}}}],["covalentmarkdownmodule",{"_index":470,"title":{},"body":{"modules/CovalentModule.html":{}}}],["covalentmodule",{"_index":466,"title":{"modules/CovalentModule.html":{}},"body":{"modules/CovalentModule.html":{},"modules.html":{}}}],["covalentstepsmodule",{"_index":474,"title":{},"body":{"modules/CovalentModule.html":{}}}],["coverage",{"_index":1124,"title":{"coverage.html":{}},"body":{"coverage.html":{},"unit-test.html":{}}}],["createaction",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createchangesrecorder",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createchangesrecorder(tree",{"_index":845,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["createconfigurationcopy",{"_index":425,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["createconfigurationservice",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createeffect",{"_index":138,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["createreducer",{"_index":938,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":172,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"interfaces/Credentials.html":{},"injectables/NullAuthenticationService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["credentials).pipe",{"_index":143,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["credentials.password",{"_index":389,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["credentials.password.trim",{"_index":392,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["credentials.username",{"_index":388,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["credentials.username.trim",{"_index":391,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["cursor",{"_index":663,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["date",{"_index":556,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["debug",{"_index":32,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":50,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["declarations",{"_index":288,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}],["default",{"_index":136,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"miscellaneous/variables.html":{}}}],["default_key",{"_index":528,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["defaults",{"_index":586,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/SignUpService.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["deleted",{"_index":545,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["deleted.date.toisostring",{"_index":549,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["dependencies",{"_index":286,"title":{"dependencies.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":318,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["description",{"_index":357,"title":{},"body":{"interfaces/Authority.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/ProcessRole.html":{},"interfaces/Role.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{}}}],["dev",{"_index":1276,"title":{},"body":{"index.html":{}}}],["development",{"_index":1271,"title":{},"body":{"index.html":{}}}],["devkit/core",{"_index":797,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["devkit/schematics",{"_index":791,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["devkit/schematics/src/tree/interface",{"_index":794,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["directive",{"_index":515,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["directives",{"_index":523,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1286,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1291,"title":{},"body":{"index.html":{}}}],["dist",{"_index":1290,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":481,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["dragdropmodule",{"_index":702,"title":{},"body":{"modules/MaterialModule.html":{}}}],["drop",{"_index":704,"title":{},"body":{"modules/MaterialModule.html":{}}}],["dynamic",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":544,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["e2e",{"_index":1303,"title":{},"body":{"index.html":{}}}],["effectsmodule.forfeature([authenticationeffects",{"_index":309,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["eg",{"_index":1253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["element",{"_index":514,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["email",{"_index":361,"title":{},"body":{"interfaces/Authority.html":{},"components/ForgottenPasswordCardComponent.html":{},"interfaces/ProcessRole.html":{},"components/RegistrationCardComponent.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{}}}],["emitcollapse",{"_index":746,"title":{},"body":{"components/PanelComponent.html":{}}}],["emitexpand",{"_index":747,"title":{},"body":{"components/PanelComponent.html":{}}}],["empty",{"_index":393,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"injectables/UserService.html":{}}}],["encoding",{"_index":841,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["end",{"_index":1302,"title":{},"body":{"index.html":{}}}],["engine",{"_index":830,"title":{},"body":{"interfaces/ProjectInfo.html":{},"index.html":{}}}],["engine/schematics/create",{"_index":1128,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["engine/schematics/initialize",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["engine/schematics/modifiedlibraryfunctions.ts",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["engine/schematics/utilityfunctions.ts",{"_index":781,"title":{},"body":{"interfaces/ProjectInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["engine/src/lib/authentication/authentication.factory.ts",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/authentication.module.ts",{"_index":297,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["engine/src/lib/authentication/models/credentials.ts",{"_index":476,"title":{},"body":{"interfaces/Credentials.html":{},"coverage.html":{}}}],["engine/src/lib/authentication/models/transformer.ts",{"_index":998,"title":{},"body":{"interfaces/Transformer.html":{},"coverage.html":{}}}],["engine/src/lib/authentication/models/transformer.ts:2",{"_index":1002,"title":{},"body":{"interfaces/Transformer.html":{}}}],["engine/src/lib/authentication/models/user.transformer.ts",{"_index":1077,"title":{},"body":{"classes/UserTransformer.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/models/user.transformer.ts:12",{"_index":1089,"title":{},"body":{"classes/UserTransformer.html":{}}}],["engine/src/lib/authentication/models/user.transformer.ts:20",{"_index":1091,"title":{},"body":{"classes/UserTransformer.html":{}}}],["engine/src/lib/authentication/models/user.transformer.ts:28",{"_index":1083,"title":{},"body":{"classes/UserTransformer.html":{}}}],["engine/src/lib/authentication/models/user.transformer.ts:47",{"_index":1085,"title":{},"body":{"classes/UserTransformer.html":{}}}],["engine/src/lib/authentication/models/user.transformer.ts:8",{"_index":1087,"title":{},"body":{"classes/UserTransformer.html":{}}}],["engine/src/lib/authentication/models/user.ts",{"_index":354,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{},"coverage.html":{}}}],["engine/src/lib/authentication/services/authentication",{"_index":234,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts:16",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts:18",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts:24",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts:37",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts:47",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["engine/src/lib/authentication/services/authentication/authentication.service.ts:51",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["engine/src/lib/authentication/services/guard/authentication",{"_index":180,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/services/methods/basic",{"_index":369,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/services/methods/null",{"_index":718,"title":{},"body":{"injectables/NullAuthenticationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts",{"_index":724,"title":{},"body":{"classes/NullStorage.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:1",{"_index":742,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:13",{"_index":736,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:17",{"_index":738,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:20",{"_index":740,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:4",{"_index":731,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:6",{"_index":732,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/nullstorage.ts:9",{"_index":734,"title":{},"body":{"classes/NullStorage.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts",{"_index":880,"title":{},"body":{"injectables/SessionService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:11",{"_index":897,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:12",{"_index":895,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:14",{"_index":892,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:15",{"_index":893,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:16",{"_index":889,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:27",{"_index":899,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:31",{"_index":903,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:37",{"_index":901,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:41",{"_index":905,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:45",{"_index":890,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/session/services/session.service.ts:50",{"_index":891,"title":{},"body":{"injectables/SessionService.html":{}}}],["engine/src/lib/authentication/sign",{"_index":928,"title":{},"body":{"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/authentication/store/actions/authentication.actions.ts",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/authentication/store/authentication.state.ts",{"_index":112,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/authentication/store/effects/authentication.effects.ts",{"_index":125,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"coverage.html":{}}}],["engine/src/lib/authentication/store/effects/authentication.effects.ts:11",{"_index":135,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["engine/src/lib/authentication/store/effects/authentication.effects.ts:16",{"_index":148,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["engine/src/lib/authentication/store/effects/authentication.effects.ts:26",{"_index":157,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["engine/src/lib/authentication/store/effects/authentication.effects.ts:35",{"_index":152,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["engine/src/lib/authentication/store/effects/authentication.effects.ts:42",{"_index":161,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["engine/src/lib/authentication/store/reducers/authentication.redurcers.ts",{"_index":1156,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/authentication/store/selectors/authentication.selectors.ts",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/card/abstract",{"_index":8,"title":{},"body":{"classes/AbstractCard.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/card/card.module.ts",{"_index":412,"title":{},"body":{"modules/CardModule.html":{}}}],["engine/src/lib/card/forgotten",{"_index":483,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/card/login",{"_index":643,"title":{},"body":{"components/LoginCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/card/registration",{"_index":851,"title":{},"body":{"components/RegistrationCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"unit-test.html":{}}}],["engine/src/lib/configuration/configuration.service.ts",{"_index":424,"title":{},"body":{"classes/ConfigurationService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/configuration/configuration.service.ts:13",{"_index":432,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["engine/src/lib/configuration/configuration.service.ts:17",{"_index":431,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["engine/src/lib/configuration/configuration.service.ts:4",{"_index":429,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["engine/src/lib/configuration/configuration.service.ts:9",{"_index":433,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["engine/src/lib/covalent/covalent.module.ts",{"_index":467,"title":{},"body":{"modules/CovalentModule.html":{}}}],["engine/src/lib/logger/models/log",{"_index":554,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/publishers/console",{"_index":439,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/publishers/local",{"_index":526,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/publishers/log",{"_index":596,"title":{},"body":{"classes/LogPublisher.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/services/log",{"_index":602,"title":{},"body":{"injectables/LogPublisherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/logger/services/logger.service.ts",{"_index":26,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:12",{"_index":49,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:13",{"_index":43,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:24",{"_index":75,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:28",{"_index":67,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:32",{"_index":73,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:40",{"_index":61,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:44",{"_index":54,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:48",{"_index":70,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:52",{"_index":59,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:56",{"_index":65,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["engine/src/lib/logger/services/logger.service.ts:64",{"_index":633,"title":{},"body":{"injectables/LoggerService.html":{}}}],["engine/src/lib/material/material.module.ts",{"_index":665,"title":{},"body":{"modules/MaterialModule.html":{}}}],["engine/src/lib/panel/panel.component.ts",{"_index":743,"title":{},"body":{"components/PanelComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/panel/panel.component.ts:10",{"_index":755,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.component.ts:11",{"_index":758,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.component.ts:12",{"_index":757,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.component.ts:13",{"_index":754,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.component.ts:18",{"_index":762,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.component.ts:21",{"_index":761,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.component.ts:25",{"_index":760,"title":{},"body":{"components/PanelComponent.html":{}}}],["engine/src/lib/panel/panel.module.ts",{"_index":778,"title":{},"body":{"modules/PanelModule.html":{}}}],["engine/src/lib/toolbar/select",{"_index":867,"title":{},"body":{"injectables/SelectLanguageService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/toolbar/toolbar.component.ts",{"_index":952,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/toolbar/toolbar.component.ts:12",{"_index":959,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["engine/src/lib/toolbar/toolbar.component.ts:15",{"_index":958,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["engine/src/lib/toolbar/toolbar.component.ts:17",{"_index":961,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["engine/src/lib/toolbar/toolbar.component.ts:20",{"_index":960,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["engine/src/lib/toolbar/toolbar.module.ts",{"_index":995,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["engine/src/lib/user/models/role.ts",{"_index":864,"title":{},"body":{"interfaces/Role.html":{},"coverage.html":{}}}],["engine/src/lib/user/models/user.ts",{"_index":1005,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/user/models/user.ts:10",{"_index":1019,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:11",{"_index":1015,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:12",{"_index":1018,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:15",{"_index":1021,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:3",{"_index":1011,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:5",{"_index":1016,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:6",{"_index":1013,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:7",{"_index":1014,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:8",{"_index":1017,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/models/user.ts:9",{"_index":1012,"title":{},"body":{"classes/User.html":{}}}],["engine/src/lib/user/services/user.service.ts",{"_index":1038,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"unit-test.html":{}}}],["engine/src/lib/user/services/user.service.ts:14",{"_index":1043,"title":{},"body":{"injectables/UserService.html":{}}}],["engine/src/lib/user/services/user.service.ts:19",{"_index":1062,"title":{},"body":{"injectables/UserService.html":{}}}],["engine/src/lib/user/services/user.service.ts:29",{"_index":1046,"title":{},"body":{"injectables/UserService.html":{}}}],["engine/src/lib/user/services/user.service.ts:40",{"_index":1058,"title":{},"body":{"injectables/UserService.html":{}}}],["engine/src/lib/user/services/user.service.ts:47",{"_index":1059,"title":{},"body":{"injectables/UserService.html":{}}}],["engine/src/lib/user/services/user.service.ts:53",{"_index":1060,"title":{},"body":{"injectables/UserService.html":{}}}],["engine/src/lib/user/store/actions/user.actions.ts",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/user/store/effects/user.effects.ts",{"_index":1025,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{}}}],["engine/src/lib/user/store/effects/user.effects.ts:6",{"_index":1029,"title":{},"body":{"injectables/UserEffects.html":{}}}],["engine/src/lib/user/store/reducers/user.reducers.ts",{"_index":936,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["engine/src/lib/user/store/selectors/user.selectors.ts",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["engine/src/scripts/utils.ts",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["english",{"_index":876,"title":{},"body":{"injectables/SelectLanguageService.html":{},"components/ToolbarComponent.html":{}}}],["entry",{"_index":81,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["entry.level",{"_index":454,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["entry.ts",{"_index":555,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"coverage.html":{},"unit-test.html":{}}}],["entry.ts:16",{"_index":564,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:17",{"_index":565,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:18",{"_index":566,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:19",{"_index":567,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:20",{"_index":560,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:42",{"_index":578,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:50",{"_index":568,"title":{},"body":{"classes/LogEntry.html":{}}}],["entry.ts:61",{"_index":572,"title":{},"body":{"classes/LogEntry.html":{}}}],["enumerations",{"_index":1202,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":33,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/LoggerService.html":{},"interfaces/State.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('login",{"_index":386,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["error('logout",{"_index":400,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["error('user\\'s",{"_index":390,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["error(ex.message",{"_index":553,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["error(message",{"_index":58,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["errorevent",{"_index":266,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["errorevent.status",{"_index":267,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["event",{"_index":261,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["event.headers.get(this._session.sessionheader",{"_index":264,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["event.headers.has(this._session.sessionheader",{"_index":263,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["eventemitter",{"_index":759,"title":{},"body":{"components/PanelComponent.html":{}}}],["ex",{"_index":551,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["exact",{"_index":1254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["execute",{"_index":1299,"title":{},"body":{"index.html":{}}}],["exhaustmap",{"_index":168,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["exhaustmap(action",{"_index":141,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["exit_to_app",{"_index":967,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["expansion",{"_index":767,"title":{},"body":{"components/PanelComponent.html":{}}}],["expansiondisabled",{"_index":749,"title":{},"body":{"components/PanelComponent.html":{}}}],["experimental",{"_index":795,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["experimental.workspace.workspaceschema",{"_index":811,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["export",{"_index":20,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["exportrecorder",{"_index":847,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["exportrecorder.insertleft(change.pos",{"_index":849,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["exports",{"_index":291,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}],["extends",{"_index":84,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"components/RegistrationCardComponent.html":{}}}],["extra",{"_index":563,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["failure",{"_index":1212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":120,"title":{},"body":{"interfaces/AuthState.html":{},"components/PanelComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":498,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["fb.group",{"_index":506,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"unit-test.html":{}}}],["file.content.tostring(encoding",{"_index":844,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["fileentry",{"_index":792,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["fileentrytotssource",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fileentrytotssource(file",{"_index":840,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["files",{"_index":1281,"title":{},"body":{"index.html":{}}}],["find",{"_index":805,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["firstname",{"_index":1006,"title":{},"body":{"classes/User.html":{}}}],["flag",{"_index":1293,"title":{},"body":{"index.html":{}}}],["flexlayoutmodule",{"_index":421,"title":{},"body":{"modules/CardModule.html":{},"modules/MaterialModule.html":{},"modules/ToolbarModule.html":{}}}],["flexmodule",{"_index":779,"title":{},"body":{"modules/PanelModule.html":{}}}],["font",{"_index":979,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["forgotten",{"_index":417,"title":{},"body":{"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["forgottenpasswordcardcomponent",{"_index":408,"title":{"components/ForgottenPasswordCardComponent.html":{}},"body":{"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":12,"title":{},"body":{"classes/AbstractCard.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["formbuilder",{"_index":496,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["formgroup",{"_index":15,"title":{},"body":{"classes/AbstractCard.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["freedom",{"_index":1242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fullname",{"_index":363,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{}}}],["function",{"_index":121,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/ProjectInfo.html":{},"interfaces/State.html":{},"coverage.html":{}}}],["functions",{"_index":1220,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"unit-test.html":{}}}],["further",{"_index":1305,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1284,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1268,"title":{},"body":{"index.html":{}}}],["getasync",{"_index":426,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["getauthenticated",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getfullname",{"_index":1020,"title":{},"body":{"classes/User.html":{}}}],["getinitial",{"_index":122,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getitem",{"_index":726,"title":{},"body":{"classes/NullStorage.html":{}}}],["getitem(key",{"_index":733,"title":{},"body":{"classes/NullStorage.html":{}}}],["getlevel",{"_index":74,"title":{},"body":{"classes/AbstractLoggerService.html":{}}}],["getlevelstring",{"_index":577,"title":{},"body":{"classes/LogEntry.html":{}}}],["getnaeconfiguration",{"_index":1142,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnaeconfiguration(tree",{"_index":833,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["getnaeconfigurationstring",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnaeconfigurationstring(tree",{"_index":826,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["getprojectinfo",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getprojectinfo(tree",{"_index":801,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["getpublishers",{"_index":617,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["getsession",{"_index":898,"title":{},"body":{"injectables/SessionService.html":{}}}],["getsessionheader",{"_index":904,"title":{},"body":{"injectables/SessionService.html":{}}}],["getsessiontoken",{"_index":900,"title":{},"body":{"injectables/SessionService.html":{}}}],["getting",{"_index":1266,"title":{"index.html":{}},"body":{}}],["gettssource",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettssource(file.path",{"_index":843,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["gettssource(path",{"_index":835,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["getuser",{"_index":1061,"title":{},"body":{"injectables/UserService.html":{}}}],["go",{"_index":1307,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1312,"title":{},"body":{"modules.html":{}}}],["groups",{"_index":364,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"classes/UserTransformer.html":{}}}],["guard",{"_index":177,"title":{"guards/AuthenticationGuardService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service.ts",{"_index":181,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"coverage.html":{},"unit-test.html":{}}}],["guard.service.ts:15",{"_index":192,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["guard.service.ts:24",{"_index":204,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["guard.service.ts:44",{"_index":198,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["guards",{"_index":179,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["hammerjs",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["hasauthority",{"_index":1040,"title":{},"body":{"injectables/UserService.html":{}}}],["hasauthority(authority",{"_index":1045,"title":{},"body":{"injectables/UserService.html":{}}}],["hasrole",{"_index":1041,"title":{},"body":{"injectables/UserService.html":{}}}],["hasrole(role",{"_index":1057,"title":{},"body":{"injectables/UserService.html":{}}}],["header",{"_index":768,"title":{},"body":{"components/PanelComponent.html":{}}}],["headers",{"_index":257,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"injectables/BasicAuthenticationService.html":{}}}],["height",{"_index":972,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["help",{"_index":1306,"title":{},"body":{"index.html":{}}}],["hidepassword",{"_index":645,"title":{},"body":{"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["hiderepeatpassword",{"_index":852,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["html",{"_index":513,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["http",{"_index":1261,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http://localhost:4200",{"_index":1278,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":301,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["httpclient",{"_index":302,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/BasicAuthenticationService.html":{}}}],["httpclientmodule",{"_index":303,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["httperrorresponse",{"_index":248,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["httpevent",{"_index":249,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["httphandler",{"_index":244,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["httpheaders",{"_index":381,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["httpheaders().set('authorization",{"_index":395,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["httpinterceptor",{"_index":250,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["httprequest",{"_index":242,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["httpresponse",{"_index":251,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["icon",{"_index":978,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["icon.main",{"_index":977,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["id",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/Role.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"classes/UserTransformer.html":{}}}],["identification_attribute",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["identifier",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["img",{"_index":974,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["implements",{"_index":211,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"classes/UserTransformer.html":{}}}],["import",{"_index":18,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{}}}],["importpath",{"_index":1233,"title":{},"body":{"miscellaneous/functions.html":{}}}],["imports",{"_index":306,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{}}}],["include",{"_index":575,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["included",{"_index":1256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["includeloglevel",{"_index":582,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":741,"title":{},"body":{"classes/NullStorage.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/enumerations.html":{}}}],["info(message",{"_index":60,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["inherited",{"_index":378,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"components/RegistrationCardComponent.html":{}}}],["initializeconfigurationservice",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initialstate",{"_index":119,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":76,"title":{"injectables/AuthenticationEffects.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"injectables/NullAuthenticationService.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/SignUpService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/NullAuthenticationService.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/SignUpService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":124,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"injectables/NullAuthenticationService.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/SignUpService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":763,"title":{},"body":{"components/PanelComponent.html":{},"components/ToolbarComponent.html":{}}}],["inputs",{"_index":748,"title":{},"body":{"components/PanelComponent.html":{},"components/ToolbarComponent.html":{}}}],["insertchange",{"_index":799,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["insertedtext",{"_index":1244,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instance",{"_index":622,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["instanceof",{"_index":262,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/ProjectInfo.html":{},"injectables/UserService.html":{}}}],["instead",{"_index":1259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["intercept",{"_index":236,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["intercept(req",{"_index":241,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["interceptor",{"_index":231,"title":{"interceptors/AuthenticationInterceptor.html":{}},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":235,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"coverage.html":{},"unit-test.html":{}}}],["interceptor.ts:14",{"_index":245,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["interceptor.ts:9",{"_index":239,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["interceptors",{"_index":233,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["interface",{"_index":83,"title":{"interfaces/AuthState.html":{},"interfaces/Authority.html":{},"interfaces/Credentials.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"interfaces/Role.html":{},"interfaces/State.html":{},"interfaces/Transformer.html":{},"interfaces/UserProcessRole.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"interfaces/Authority.html":{},"interfaces/Credentials.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"interfaces/Role.html":{},"interfaces/State.html":{},"interfaces/Transformer.html":{},"interfaces/UserProcessRole.html":{},"coverage.html":{}}}],["interfaces",{"_index":111,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/Authority.html":{},"interfaces/Credentials.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"interfaces/Role.html":{},"interfaces/State.html":{},"interfaces/Transformer.html":{},"interfaces/UserProcessRole.html":{},"overview.html":{}}}],["interfaces/schema",{"_index":434,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["intersection",{"_index":1052,"title":{},"body":{"injectables/UserService.html":{}}}],["invalid",{"_index":271,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["isauthenticated",{"_index":113,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["isn't",{"_index":1055,"title":{},"body":{"injectables/UserService.html":{}}}],["json",{"_index":571,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"dependencies.html":{}}}],["json.parse(getnaeconfigurationstring(tree",{"_index":834,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["json.parse(json.stringify(this.configuration",{"_index":437,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["json.parse(logstring",{"_index":538,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["json.parse(workspacecontent",{"_index":812,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["json.stringify(log",{"_index":542,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["json.stringify(this.params",{"_index":589,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["karma",{"_index":1301,"title":{},"body":{"index.html":{}}}],["key",{"_index":727,"title":{},"body":{"classes/NullStorage.html":{},"injectables/SelectLanguageService.html":{}}}],["key(index",{"_index":735,"title":{},"body":{"classes/NullStorage.html":{}}}],["keyboard_arrow_left",{"_index":968,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["language",{"_index":874,"title":{},"body":{"injectables/SelectLanguageService.html":{},"components/ToolbarComponent.html":{}}}],["language.service",{"_index":963,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["language.service.ts",{"_index":868,"title":{},"body":{"injectables/SelectLanguageService.html":{},"coverage.html":{},"unit-test.html":{}}}],["language.service.ts:11",{"_index":871,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["language.service.ts:16",{"_index":873,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["language.service.ts:8",{"_index":877,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["languages",{"_index":869,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["lastname",{"_index":1007,"title":{},"body":{"classes/User.html":{}}}],["layout",{"_index":220,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"modules/CardModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/ToolbarModule.html":{},"dependencies.html":{}}}],["layout.name",{"_index":223,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["legend",{"_index":287,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"components/RegistrationCardComponent.html":{},"modules/SignUpModule.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}],["length",{"_index":725,"title":{},"body":{"classes/NullStorage.html":{},"miscellaneous/functions.html":{}}}],["letters",{"_index":510,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["level",{"_index":39,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["level.ts",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["levelstring",{"_index":558,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["lib",{"_index":823,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["lines",{"_index":1320,"title":{},"body":{"unit-test.html":{}}}],["literal",{"_index":202,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"miscellaneous/functions.html":{}}}],["load",{"_index":885,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage",{"_index":550,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"injectables/SessionService.html":{}}}],["localstorage.getitem(this.location",{"_index":537,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstorage.removeitem(this.location",{"_index":535,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstorage.setitem(this.location",{"_index":541,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["localstoragelogpublisher",{"_index":525,"title":{"classes/LocalStorageLogPublisher.html":{}},"body":{"classes/LocalStorageLogPublisher.html":{},"injectables/LogPublisherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localstoragelogpublisher.default_key",{"_index":534,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["location",{"_index":442,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["log",{"_index":34,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"unit-test.html":{}}}],["log(entry",{"_index":447,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["log(level",{"_index":62,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["log.push(entry",{"_index":539,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["log.splice(0",{"_index":546,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["logentry",{"_index":78,"title":{"classes/LogEntry.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logentry(level",{"_index":99,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["logentryconfiguration",{"_index":79,"title":{"interfaces/LogEntryConfiguration.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logged",{"_index":985,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["loggeduser",{"_index":956,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["loggerconfiguration",{"_index":48,"title":{"interfaces/LoggerConfiguration.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["loggerservice",{"_index":108,"title":{"injectables/LoggerService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["login",{"_index":126,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["login(credentials",{"_index":279,"title":{},"body":{"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{},"injectables/UserService.html":{}}}],["login_component",{"_index":184,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["login_failure",{"_index":1211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["login_success",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logincardcomponent",{"_index":409,"title":{"components/LoginCardComponent.html":{}},"body":{"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginfailure",{"_index":127,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginsuccess",{"_index":128,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginsuccess(user",{"_index":145,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["loginuser",{"_index":940,"title":{},"body":{"interfaces/State.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginuser({user",{"_index":1037,"title":{},"body":{"injectables/UserEffects.html":{}}}],["loginview",{"_index":213,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["logkey",{"_index":529,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["loglevel",{"_index":63,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.all",{"_index":91,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["loglevel.debug",{"_index":456,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel.error",{"_index":459,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel.info",{"_index":461,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel.off",{"_index":95,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["loglevel.warn",{"_index":463,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["loglevel[this.level.tostring",{"_index":587,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["logo",{"_index":970,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["logonly",{"_index":313,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["logout",{"_index":129,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{},"components/ToolbarComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["logoutuser",{"_index":941,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logpublisher",{"_index":441,"title":{"classes/LogPublisher.html":{}},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"coverage.html":{}}}],["logpublisher:18",{"_index":450,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["logpublisher:20",{"_index":449,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["logpublisher:6",{"_index":445,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["logpublisherservice",{"_index":42,"title":{"injectables/LogPublisherService.html":{}},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logpublisherservice.instance",{"_index":623,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["logstring",{"_index":536,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["logwithdate",{"_index":88,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["main",{"_index":969,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["make",{"_index":1051,"title":{},"body":{"injectables/UserService.html":{}}}],["map",{"_index":169,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/AuthenticationService.html":{}}}],["map((user",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["map(user",{"_index":144,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["margin",{"_index":653,"title":{},"body":{"components/LoginCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["mat",{"_index":766,"title":{},"body":{"components/PanelComponent.html":{},"components/ToolbarComponent.html":{}}}],["matautocompletemodule",{"_index":666,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbadgemodule",{"_index":667,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbottomsheetmodule",{"_index":668,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":669,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":670,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":671,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":862,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["matcheckboxmodule",{"_index":672,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":23,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":673,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":674,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogmodule",{"_index":675,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":676,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material/material.module",{"_index":420,"title":{},"body":{"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/ToolbarModule.html":{}}}],["materialmodule",{"_index":411,"title":{"modules/MaterialModule.html":{}},"body":{"modules/CardModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/ToolbarModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":677,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":678,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":679,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":680,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":681,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":682,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":683,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":684,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":685,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":686,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":687,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodule",{"_index":688,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":689,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":690,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":691,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":692,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodule",{"_index":693,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":694,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":695,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":696,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":697,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":698,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":699,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":700,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":971,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["maxage",{"_index":311,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["menu",{"_index":986,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mergablerole.description",{"_index":1112,"title":{},"body":{"classes/UserTransformer.html":{}}}],["mergablerole.id",{"_index":1108,"title":{},"body":{"classes/UserTransformer.html":{}}}],["mergablerole.name",{"_index":1114,"title":{},"body":{"classes/UserTransformer.html":{}}}],["mergablerole.net",{"_index":1110,"title":{},"body":{"classes/UserTransformer.html":{}}}],["mergemap(action",{"_index":1035,"title":{},"body":{"injectables/UserEffects.html":{}}}],["mergeroles",{"_index":1078,"title":{},"body":{"classes/UserTransformer.html":{}}}],["mergeroles(roles",{"_index":1082,"title":{},"body":{"classes/UserTransformer.html":{}}}],["message",{"_index":55,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["metadata",{"_index":486,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["metadatafield",{"_index":1248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["method",{"_index":1050,"title":{},"body":{"injectables/UserService.html":{}}}],["method.service",{"_index":175,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{}}}],["method.service.ts",{"_index":277,"title":{},"body":{"classes/AuthenticationMethodService.html":{},"coverage.html":{},"unit-test.html":{}}}],["method.service.ts:10",{"_index":280,"title":{},"body":{"classes/AuthenticationMethodService.html":{}}}],["method.service.ts:12",{"_index":281,"title":{},"body":{"classes/AuthenticationMethodService.html":{}}}],["method.service.ts:5",{"_index":278,"title":{},"body":{"classes/AuthenticationMethodService.html":{}}}],["methods",{"_index":31,"title":{},"body":{"classes/AbstractLoggerService.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["miscellaneous",{"_index":1201,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":807,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["models/credentials",{"_index":173,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{}}}],["models/log",{"_index":80,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["models/role",{"_index":1063,"title":{},"body":{"injectables/UserService.html":{}}}],["models/user",{"_index":283,"title":{},"body":{"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{},"interfaces/State.html":{},"injectables/UserService.html":{}}}],["models/user.transformer",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["modified",{"_index":1250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":284,"title":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["modulepath",{"_index":1231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":285,"title":{"modules.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["multi",{"_index":316,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["nae",{"_index":117,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["nae.json",{"_index":831,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["nae.providers.auth.endpoints.login",{"_index":387,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["nae.providers.auth.endpoints.logout",{"_index":401,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["naeconfig",{"_index":827,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["naeconfig.tostring",{"_index":832,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["naet",{"_index":896,"title":{},"body":{"injectables/SessionService.html":{}}}],["name",{"_index":45,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"interfaces/ProcessRole.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1277,"title":{},"body":{"index.html":{}}}],["net",{"_index":865,"title":{},"body":{"interfaces/Role.html":{},"classes/UserTransformer.html":{}}}],["netgrif",{"_index":829,"title":{},"body":{"interfaces/ProjectInfo.html":{},"index.html":{}}}],["netgrifapplicationengine",{"_index":428,"title":{},"body":{"classes/ConfigurationService.html":{},"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["netid",{"_index":360,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{}}}],["new",{"_index":98,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/PanelComponent.html":{},"interfaces/ProjectInfo.html":{},"injectables/SessionService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"index.html":{},"unit-test.html":{}}}],["next",{"_index":243,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":259,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["ng",{"_index":1274,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":298,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/CovalentModule.html":{},"modules/MaterialModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{}}}],["ngmodulepath",{"_index":1247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ngoninit",{"_index":493,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["ngrx/effects",{"_index":163,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["ngrx/store",{"_index":939,"title":{},"body":{"interfaces/State.html":{}}}],["none",{"_index":1257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["null",{"_index":115,"title":{},"body":{"interfaces/AuthState.html":{},"guards/AuthenticationGuardService.html":{},"classes/NullStorage.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nullauthenticationservice",{"_index":717,"title":{"injectables/NullAuthenticationService.html":{}},"body":{"injectables/NullAuthenticationService.html":{},"coverage.html":{}}}],["nullstorage",{"_index":723,"title":{"classes/NullStorage.html":{}},"body":{"classes/NullStorage.html":{},"injectables/SessionService.html":{},"coverage.html":{}}}],["number",{"_index":730,"title":{},"body":{"classes/NullStorage.html":{}}}],["obj",{"_index":1003,"title":{},"body":{"interfaces/Transformer.html":{}}}],["object",{"_index":72,"title":{},"body":{"classes/AbstractLoggerService.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["object.keys(publishers).foreach(key",{"_index":627,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["object.keys(routes",{"_index":225,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["object.keys(routes).find(routekey",{"_index":219,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["object.keys(routes).length",{"_index":217,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["object.keys(this.languages).foreach((key",{"_index":878,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["observable",{"_index":247,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"injectables/LogPublisherService.html":{},"injectables/NullAuthenticationService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["of(error",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["of(loginfailure({error",{"_index":147,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["of(null",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LogPublisherService.html":{},"injectables/NullAuthenticationService.html":{}}}],["of(this.get",{"_index":435,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["oftype",{"_index":162,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(login",{"_index":140,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(loginfailure",{"_index":149,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(loginsuccess",{"_index":153,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(loginuser",{"_index":1034,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(logout",{"_index":158,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["on(login",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loginfailure",{"_index":947,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["on(loginsuccess",{"_index":946,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["on(loginuser",{"_index":945,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["on(logout",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(logoutuser",{"_index":948,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":485,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["onsubmit",{"_index":494,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["onsubmit(form",{"_index":500,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["optional",{"_index":46,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"interfaces/ProcessRole.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{}}}],["original",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1056,"title":{},"body":{"injectables/UserService.html":{}}}],["out",{"_index":296,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":764,"title":{},"body":{"components/PanelComponent.html":{}}}],["outputs",{"_index":752,"title":{},"body":{"components/PanelComponent.html":{}}}],["overview",{"_index":1314,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1178,"title":{"dependencies.html":{}},"body":{}}],["panel",{"_index":488,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["panel'},{'name",{"_index":518,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["panel.component",{"_index":419,"title":{},"body":{"modules/CardModule.html":{},"modules/PanelModule.html":{}}}],["panel.component.html",{"_index":745,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel.component.scss",{"_index":744,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel.component.ts",{"_index":484,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["panel.component.ts:10",{"_index":497,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{}}}],["panel.component.ts:20",{"_index":499,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{}}}],["panel.component.ts:23",{"_index":501,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{}}}],["panelcomponent",{"_index":519,"title":{"components/PanelComponent.html":{}},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["panelcontent",{"_index":750,"title":{},"body":{"components/PanelComponent.html":{}}}],["panelheader",{"_index":751,"title":{},"body":{"components/PanelComponent.html":{}}}],["panelmodule",{"_index":773,"title":{"modules/PanelModule.html":{}},"body":{"modules/PanelModule.html":{},"modules.html":{},"overview.html":{}}}],["param",{"_index":64,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/UserService.html":{}}}],["parameter",{"_index":1245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":52,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["parsing",{"_index":1115,"title":{},"body":{"classes/UserTransformer.html":{}}}],["password",{"_index":376,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["password.validator",{"_index":858,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["passwords",{"_index":861,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["passwordvalidator",{"_index":857,"title":{},"body":{"components/RegistrationCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordvalidator(control",{"_index":1263,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":782,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["pipe",{"_index":1033,"title":{},"body":{"injectables/UserEffects.html":{}}}],["pointer",{"_index":664,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["portalmodule",{"_index":713,"title":{},"body":{"modules/MaterialModule.html":{}}}],["preferences",{"_index":1008,"title":{},"body":{"classes/User.html":{}}}],["present",{"_index":580,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["private",{"_index":176,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"injectables/SessionService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["processrole",{"_index":355,"title":{"interfaces/ProcessRole.html":{}},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{},"classes/UserTransformer.html":{},"coverage.html":{}}}],["processroles",{"_index":366,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{}}}],["prod",{"_index":1292,"title":{},"body":{"index.html":{}}}],["production",{"_index":1294,"title":{},"body":{"index.html":{}}}],["profile",{"_index":966,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["project",{"_index":819,"title":{},"body":{"interfaces/ProjectInfo.html":{},"index.html":{}}}],["project.projecttype",{"_index":822,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["project.sourceroot}/${projecttype",{"_index":825,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["projectinfo",{"_index":780,"title":{"interfaces/ProjectInfo.html":{}},"body":{"interfaces/ProjectInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projectname",{"_index":783,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["projectnameclassified",{"_index":784,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["projectnamedasherized",{"_index":785,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["projects/.../authentication.actions.ts",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../authentication.factory.ts",{"_index":1222,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../authentication.redurcers.ts",{"_index":1228,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../authentication.selectors.ts",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../authentication.state.ts",{"_index":1225,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../index.ts",{"_index":1224,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../log",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../modifiedlibraryfunctions.ts",{"_index":1221,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../password.validator.ts",{"_index":1226,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../user.actions.ts",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../user.reducers.ts",{"_index":1229,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../user.selectors.ts",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../utilityfunctions.ts",{"_index":1223,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../utils.ts",{"_index":1227,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/[name]/src/app",{"_index":786,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["projects/netgrif",{"_index":6,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["projecttype",{"_index":821,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"classes/ConsoleLogPublisher.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"classes/NullStorage.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{}}}],["props",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protected",{"_index":27,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/AuthenticationMethodService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/SessionService.html":{}}}],["protractor",{"_index":1304,"title":{},"body":{"index.html":{}}}],["provide",{"_index":314,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["provided",{"_index":1049,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["providedin",{"_index":106,"title":{},"body":{"classes/AbstractLoggerService.html":{},"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":290,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}],["providertext",{"_index":1234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["public",{"_index":212,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"classes/ConfigurationService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["publish",{"_index":607,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publish(entry",{"_index":612,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher",{"_index":30,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["publisher.clear",{"_index":632,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service",{"_index":82,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["publisher.service.ts",{"_index":603,"title":{},"body":{"injectables/LogPublisherService.html":{},"coverage.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["publisher.service.ts:20",{"_index":616,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:21",{"_index":610,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:30",{"_index":618,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:34",{"_index":615,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:42",{"_index":613,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.service.ts:49",{"_index":611,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisher.ts",{"_index":440,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"coverage.html":{},"unit-test.html":{}}}],["publisher.ts:13",{"_index":446,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["publisher.ts:14",{"_index":531,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["publisher.ts:17",{"_index":448,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["publisher.ts:18",{"_index":532,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{}}}],["publisher.ts:20",{"_index":598,"title":{},"body":{"classes/LogPublisher.html":{}}}],["publisher.ts:6",{"_index":597,"title":{},"body":{"classes/LogPublisher.html":{}}}],["publisher.ts:7",{"_index":444,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{}}}],["publishers",{"_index":609,"title":{},"body":{"injectables/LogPublisherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["publishers/console",{"_index":620,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publishers/local",{"_index":621,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publishers/log",{"_index":619,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publishers[key](this",{"_index":628,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["publisherservice",{"_index":47,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["r",{"_index":1004,"title":{},"body":{"interfaces/Transformer.html":{},"injectables/UserService.html":{}}}],["r.description",{"_index":1098,"title":{},"body":{"classes/UserTransformer.html":{}}}],["r.id",{"_index":1107,"title":{},"body":{"classes/UserTransformer.html":{}}}],["r.name",{"_index":1097,"title":{},"body":{"classes/UserTransformer.html":{}}}],["r.netid",{"_index":1100,"title":{},"body":{"classes/UserTransformer.html":{}}}],["r.roleid",{"_index":1099,"title":{},"body":{"classes/UserTransformer.html":{}}}],["r.stringid",{"_index":1096,"title":{},"body":{"classes/UserTransformer.html":{}}}],["randomstring",{"_index":1175,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["randomstring(length",{"_index":1265,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rc.6",{"_index":1270,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":423,"title":{},"body":{"modules/CardModule.html":{}}}],["readme",{"_index":1308,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":28,"title":{},"body":{"classes/AbstractLoggerService.html":{},"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"classes/NullStorage.html":{},"injectables/SessionService.html":{}}}],["reducer",{"_index":308,"title":{},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":949,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["register",{"_index":608,"title":{},"body":{"injectables/LogPublisherService.html":{},"components/RegistrationCardComponent.html":{}}}],["register(publisher",{"_index":614,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["register(this",{"_index":599,"title":{},"body":{"classes/LogPublisher.html":{}}}],["registration",{"_index":413,"title":{},"body":{"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["registrationcardcomponent",{"_index":410,"title":{"components/RegistrationCardComponent.html":{}},"body":{"modules/CardModule.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reload",{"_index":1280,"title":{},"body":{"index.html":{}}}],["remove_user",{"_index":1219,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["removeitem",{"_index":728,"title":{},"body":{"classes/NullStorage.html":{}}}],["removeitem(key",{"_index":737,"title":{},"body":{"classes/NullStorage.html":{}}}],["req",{"_index":246,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["req.clone",{"_index":256,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["req.headers.set(this._session.sessionheader",{"_index":258,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["reset",{"_index":295,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}],["resolved",{"_index":226,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["resolveloginpath",{"_index":186,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["resolveloginpath(routes",{"_index":201,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["result",{"_index":22,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["result.findindex(r",{"_index":1106,"title":{},"body":{"classes/UserTransformer.html":{}}}],["result.path",{"_index":824,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["result.projectname",{"_index":813,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["result.projectnameclassified",{"_index":815,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["result.projectnamedasherized",{"_index":817,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["result[roleindex].description",{"_index":1111,"title":{},"body":{"classes/UserTransformer.html":{}}}],["result[roleindex].name",{"_index":1113,"title":{},"body":{"classes/UserTransformer.html":{}}}],["result[roleindex].net",{"_index":1109,"title":{},"body":{"classes/UserTransformer.html":{}}}],["results",{"_index":24,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":92,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"interfaces/ProjectInfo.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{}}}],["returns",{"_index":56,"title":{},"body":{"classes/AbstractLoggerService.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{}}}],["rgba(0",{"_index":661,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["rgba(0,0,0,.03",{"_index":772,"title":{},"body":{"components/PanelComponent.html":{}}}],["rgba(117",{"_index":657,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["right",{"_index":983,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["role",{"_index":863,"title":{"interfaces/Role.html":{}},"body":{"interfaces/Role.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{}}}],["rolearray.foreach(mergablerole",{"_index":1104,"title":{},"body":{"classes/UserTransformer.html":{}}}],["roleid",{"_index":359,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{}}}],["roleindex",{"_index":1105,"title":{},"body":{"classes/UserTransformer.html":{}}}],["roles",{"_index":1009,"title":{},"body":{"classes/User.html":{},"classes/UserTransformer.html":{}}}],["roles.foreach(rolearray",{"_index":1103,"title":{},"body":{"classes/UserTransformer.html":{}}}],["roles.map(r",{"_index":1095,"title":{},"body":{"classes/UserTransformer.html":{}}}],["roles.splice(0",{"_index":1102,"title":{},"body":{"classes/UserTransformer.html":{}}}],["roles[0",{"_index":1101,"title":{},"body":{"classes/UserTransformer.html":{}}}],["root",{"_index":107,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["route",{"_index":199,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["route).layout",{"_index":222,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["route).routes",{"_index":228,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["routekey",{"_index":224,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["router",{"_index":134,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{}}}],["routerstatesnapshot",{"_index":197,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["routes",{"_index":205,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["routes[routekey",{"_index":221,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["rule",{"_index":1262,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":1273,"title":{},"body":{"index.html":{}}}],["running",{"_index":1295,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":166,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"injectables/LogPublisherService.html":{},"injectables/NullAuthenticationService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":171,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["scaffolding",{"_index":1283,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["schematics/angular",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["schematics/angular/third_party/github.com/microsoft/typescript/lib/typescript",{"_index":788,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["schematics/angular/utility/ast",{"_index":1237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["schematics/angular/utility/change",{"_index":800,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["schematicsexception",{"_index":789,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["schematicsexception('could",{"_index":804,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["scrollingmodule",{"_index":715,"title":{},"body":{"modules/MaterialModule.html":{}}}],["searchedlayout",{"_index":203,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["select",{"_index":962,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["selectauthentication",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectisauthenticated",{"_index":1160,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectlanguageservice",{"_index":866,"title":{"injectables/SelectLanguageService.html":{}},"body":{"injectables/SelectLanguageService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["selectloggeduser",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":487,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["selectuser",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serialization",{"_index":569,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["serialized",{"_index":570,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["serializeparams",{"_index":90,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["serve",{"_index":1275,"title":{},"body":{"index.html":{}}}],["server",{"_index":1272,"title":{},"body":{"index.html":{}}}],["service/index.ts",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["services/authentication",{"_index":174,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"modules/AuthenticationModule.html":{}}}],["services/log",{"_index":451,"title":{},"body":{"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{}}}],["services/sign",{"_index":931,"title":{},"body":{"modules/SignUpModule.html":{}}}],["services/user.service",{"_index":1031,"title":{},"body":{"injectables/UserEffects.html":{}}}],["session",{"_index":114,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/SessionService.html":{},"miscellaneous/variables.html":{}}}],["session/services/session.service",{"_index":254,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["session_bearer_header_default",{"_index":883,"title":{},"body":{"injectables/SessionService.html":{}}}],["session_token_storage_key",{"_index":884,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionconfig",{"_index":906,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionconfig.store",{"_index":909,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionheader",{"_index":887,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionservice",{"_index":238,"title":{"injectables/SessionService.html":{}},"body":{"interceptors/AuthenticationInterceptor.html":{},"injectables/SessionService.html":{},"coverage.html":{}}}],["sessionservice.session_bearer_header_default",{"_index":912,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessiontoken",{"_index":886,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessiontoken(sessiontoken",{"_index":915,"title":{},"body":{"injectables/SessionService.html":{}}}],["set",{"_index":581,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"injectables/SessionService.html":{}}}],["set_user",{"_index":1216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["set_user_failure",{"_index":1218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["set_user_success",{"_index":1217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["setitem",{"_index":729,"title":{},"body":{"classes/NullStorage.html":{}}}],["setitem(key",{"_index":739,"title":{},"body":{"classes/NullStorage.html":{}}}],["setsessiontoken(sessiontoken",{"_index":902,"title":{},"body":{"injectables/SessionService.html":{}}}],["shouldlog",{"_index":35,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LoggerService.html":{}}}],["shouldlog(level",{"_index":66,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["sign",{"_index":651,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["signupmodule",{"_index":924,"title":{"modules/SignUpModule.html":{}},"body":{"modules/SignUpModule.html":{},"modules.html":{},"overview.html":{}}}],["signupservice",{"_index":927,"title":{"injectables/SignUpService.html":{}},"body":{"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"coverage.html":{},"overview.html":{}}}],["size",{"_index":980,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["slovak",{"_index":875,"title":{},"body":{"injectables/SelectLanguageService.html":{},"components/ToolbarComponent.html":{}}}],["solid",{"_index":771,"title":{},"body":{"components/PanelComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"modules/CardModule.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"modules/CovalentModule.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"modules/MaterialModule.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"modules/SignUpModule.html":{},"injectables/SignUpService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["specified",{"_index":1048,"title":{},"body":{"injectables/UserService.html":{}}}],["src/lib/configuration/interfaces/schema",{"_index":798,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["started",{"_index":1267,"title":{"index.html":{}},"body":{}}],["state",{"_index":196,"title":{"interfaces/State.html":{}},"body":{"guards/AuthenticationGuardService.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.isauthenticated",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.user",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state[authentication_feature_key",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state[user_feature_key",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1127,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["static",{"_index":183,"title":{},"body":{"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"classes/LocalStorageLogPublisher.html":{},"injectables/LogPublisherService.html":{},"injectables/SessionService.html":{}}}],["stoploading",{"_index":753,"title":{},"body":{"components/PanelComponent.html":{}}}],["storage",{"_index":527,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"injectables/LogPublisherService.html":{},"classes/NullStorage.html":{},"injectables/SessionService.html":{},"coverage.html":{},"unit-test.html":{}}}],["stored",{"_index":1289,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule.instrument",{"_index":310,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["storemodule.forfeature(authentication_feature_key",{"_index":307,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["str",{"_index":590,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["stream",{"_index":273,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["string",{"_index":51,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"guards/AuthenticationGuardService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"classes/ConsoleLogPublisher.html":{},"interfaces/Credentials.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"classes/NullStorage.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stringid",{"_index":356,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{}}}],["stringify",{"_index":573,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["strings",{"_index":796,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["strings.classify(result.projectname",{"_index":816,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["strings.dasherize(result.projectname",{"_index":818,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["styles",{"_index":480,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["styleurls",{"_index":489,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["submit",{"_index":512,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{}}}],["subscribe(entry",{"_index":600,"title":{},"body":{"classes/LogPublisher.html":{}}}],["success",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successful",{"_index":160,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["super",{"_index":382,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"components/RegistrationCardComponent.html":{}}}],["super(publisherservice",{"_index":109,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"classes/LocalStorageLogPublisher.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["support",{"_index":1309,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":362,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{}}}],["svg",{"_index":1310,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":453,"title":{},"body":{"classes/ConsoleLogPublisher.html":{}}}],["symbol",{"_index":1251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["symbolname",{"_index":1249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["t",{"_index":1001,"title":{},"body":{"interfaces/Transformer.html":{}}}],["table",{"_index":1177,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1176,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tap",{"_index":170,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interceptors/AuthenticationInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["tap((authuser",{"_index":1075,"title":{},"body":{"injectables/UserService.html":{}}}],["tap((user",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tap(action",{"_index":150,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["tap(event",{"_index":260,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["template",{"_index":479,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["templateref",{"_index":756,"title":{},"body":{"components/PanelComponent.html":{}}}],["templateurl",{"_index":491,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["test",{"_index":1298,"title":{"unit-test.html":{}},"body":{"index.html":{},"unit-test.html":{}}}],["tests",{"_index":1297,"title":{},"body":{"index.html":{}}}],["text",{"_index":1255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["this._actions",{"_index":1032,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this._auth.authenticated$.next(false",{"_index":275,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["this._auth.isauthenticated",{"_index":229,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["this._auth.login(credentials).pipe",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._auth.logout().pipe",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._authenticated",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._authenticated$.getvalue",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._authenticated$.next(!!user[authenticationservice.identification_attribute",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._authenticated$.next(false",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._authservice.login(credentials).pipe",{"_index":1074,"title":{},"body":{"injectables/UserService.html":{}}}],["this._authservice.logout().pipe",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{}}}],["this._config.get().providers.auth.endpoints['login",{"_index":384,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["this._config.get().providers.auth.endpoints['logout",{"_index":398,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["this._config.get().providers.auth.session",{"_index":907,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._config.get().providers.auth.sessionbearer",{"_index":911,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._http.get(url",{"_index":394,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["this._http.post(url",{"_index":402,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["this._log",{"_index":624,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._log.next(entry",{"_index":630,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._loginurl",{"_index":214,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["this._publishers",{"_index":626,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._publishers.foreach(publisher",{"_index":631,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._publishers.push(publisher",{"_index":629,"title":{},"body":{"injectables/LogPublisherService.html":{}}}],["this._router.parseurl(this._loginurl",{"_index":230,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["this._session",{"_index":913,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._session$.getvalue",{"_index":919,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._session$.next(sessiontoken",{"_index":916,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._session.clear",{"_index":274,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["this._session.sessiontoken",{"_index":255,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["this._sessionheader",{"_index":910,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._storage",{"_index":908,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._storage.getitem(sessionservice.session_token_storage_key",{"_index":922,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._storage.removeitem(sessionservice.session_token_storage_key",{"_index":921,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._storage.setitem(sessionservice.session_token_storage_key",{"_index":917,"title":{},"body":{"injectables/SessionService.html":{}}}],["this._user",{"_index":1066,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.authorities",{"_index":1067,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.authorities.some(a",{"_index":1071,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.authorities.some(u",{"_index":1069,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.roles",{"_index":1072,"title":{},"body":{"injectables/UserService.html":{}}}],["this._user.roles.some(r",{"_index":1073,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userservice.login(credentials",{"_index":1036,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.actions$.pipe",{"_index":139,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.login(action",{"_index":142,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.token",{"_index":154,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.config",{"_index":87,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.config.includeloglevel",{"_index":593,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.config.level",{"_index":93,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.config.logwithdate",{"_index":591,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.config.serializeparams",{"_index":588,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.createconfigurationcopy",{"_index":436,"title":{},"body":{"classes/ConfigurationService.html":{}}}],["this.date",{"_index":583,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.date.toisostring",{"_index":592,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.firstname",{"_index":1022,"title":{},"body":{"classes/User.html":{}}}],["this.form",{"_index":505,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["this.languages[key",{"_index":879,"title":{},"body":{"injectables/SelectLanguageService.html":{}}}],["this.lastname",{"_index":1023,"title":{},"body":{"classes/User.html":{}}}],["this.level",{"_index":94,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.load",{"_index":914,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.location",{"_index":533,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["this.log(entry",{"_index":601,"title":{},"body":{"classes/LogPublisher.html":{}}}],["this.mergeroles",{"_index":1121,"title":{},"body":{"classes/UserTransformer.html":{}}}],["this.message",{"_index":584,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.params",{"_index":585,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.params.length",{"_index":594,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.publisher",{"_index":86,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.publisher.publish(entry",{"_index":100,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.resolveloginpath((routes[routekey",{"_index":227,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["this.resolveloginpath(this._config.get().views.routes",{"_index":215,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["this.router.navigatebyurl('/').then(r",{"_index":156,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.serializeparams",{"_index":595,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["this.sessiontoken",{"_index":920,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.shouldlog(level",{"_index":96,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.stoploading.emit",{"_index":765,"title":{},"body":{"components/PanelComponent.html":{}}}],["this.transformauthorities(user.authorities",{"_index":1120,"title":{},"body":{"classes/UserTransformer.html":{}}}],["this.transformprocessroles(user.processroles",{"_index":1122,"title":{},"body":{"classes/UserTransformer.html":{}}}],["this.transformuserprocessroles(user.userprocessroles",{"_index":1123,"title":{},"body":{"classes/UserTransformer.html":{}}}],["this.writetolog(level",{"_index":105,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.debug",{"_index":102,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.error",{"_index":104,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.info",{"_index":101,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["this.writetolog(loglevel.warn",{"_index":103,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["throw",{"_index":399,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"classes/LocalStorageLogPublisher.html":{},"interfaces/ProjectInfo.html":{}}}],["throwerror",{"_index":253,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"injectables/BasicAuthenticationService.html":{}}}],["throwerror(errorevent",{"_index":276,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{}}}],["throwerror(new",{"_index":385,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["time",{"_index":576,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["todo",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/UserTransformer.html":{}}}],["token",{"_index":270,"title":{},"body":{"interceptors/AuthenticationInterceptor.html":{},"injectables/SessionService.html":{}}}],["toolbar",{"_index":522,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar.component",{"_index":996,"title":{},"body":{"modules/ToolbarModule.html":{}}}],["toolbar.component.html",{"_index":954,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":953,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":521,"title":{"components/ToolbarComponent.html":{}},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"modules/ToolbarModule.html":{},"coverage.html":{},"overview.html":{}}}],["toolbarmodule",{"_index":990,"title":{"modules/ToolbarModule.html":{}},"body":{"modules/ToolbarModule.html":{},"modules.html":{},"overview.html":{}}}],["tostring",{"_index":557,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["transform",{"_index":999,"title":{},"body":{"interfaces/Transformer.html":{},"classes/UserTransformer.html":{}}}],["transform(obj",{"_index":1000,"title":{},"body":{"interfaces/Transformer.html":{}}}],["transform(user",{"_index":1084,"title":{},"body":{"classes/UserTransformer.html":{}}}],["transformauthorities",{"_index":1079,"title":{},"body":{"classes/UserTransformer.html":{}}}],["transformauthorities(authorities",{"_index":1086,"title":{},"body":{"classes/UserTransformer.html":{}}}],["transformer",{"_index":997,"title":{"interfaces/Transformer.html":{}},"body":{"interfaces/Transformer.html":{},"classes/UserTransformer.html":{},"coverage.html":{}}}],["transformprocessroles",{"_index":1080,"title":{},"body":{"classes/UserTransformer.html":{}}}],["transformprocessroles(roles",{"_index":1088,"title":{},"body":{"classes/UserTransformer.html":{}}}],["transformuserprocessroles",{"_index":1081,"title":{},"body":{"classes/UserTransformer.html":{}}}],["transformuserprocessroles(roles",{"_index":1090,"title":{},"body":{"classes/UserTransformer.html":{}}}],["tree",{"_index":482,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["tree.beginupdate(file.path",{"_index":848,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["tree.read('/angular.json",{"_index":803,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["tree.read('/nae.json",{"_index":828,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["true",{"_index":89,"title":{},"body":{"classes/AbstractLoggerService.html":{},"modules/AuthenticationModule.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":540,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{}}}],["ts",{"_index":787,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["ts.createsourcefile(path",{"_index":838,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["ts.scripttarget.latest",{"_index":839,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["ts.sourcefile",{"_index":837,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["tslib",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AbstractCard.html":{},"classes/AbstractLoggerService.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"guards/AuthenticationGuardService.html":{},"interceptors/AuthenticationInterceptor.html":{},"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"classes/ConfigurationService.html":{},"classes/ConsoleLogPublisher.html":{},"interfaces/Credentials.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"injectables/NullAuthenticationService.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"interfaces/ProcessRole.html":{},"interfaces/ProjectInfo.html":{},"components/RegistrationCardComponent.html":{},"interfaces/Role.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"interfaces/Transformer.html":{},"classes/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":1070,"title":{},"body":{"injectables/UserService.html":{}}}],["undefined",{"_index":950,"title":{},"body":{"interfaces/State.html":{}}}],["unit",{"_index":1296,"title":{"unit-test.html":{}},"body":{"index.html":{},"unit-test.html":{}}}],["up",{"_index":652,"title":{},"body":{"components/LoginCardComponent.html":{}}}],["up.module.ts",{"_index":930,"title":{},"body":{"modules/SignUpModule.html":{}}}],["up.service",{"_index":932,"title":{},"body":{"modules/SignUpModule.html":{}}}],["up.service.ts",{"_index":934,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{},"unit-test.html":{}}}],["up.service.ts:4",{"_index":935,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up/services/sign",{"_index":933,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{},"unit-test.html":{}}}],["up/sign",{"_index":929,"title":{},"body":{"modules/SignUpModule.html":{}}}],["updaterecorder",{"_index":793,"title":{},"body":{"interfaces/ProjectInfo.html":{},"miscellaneous/functions.html":{}}}],["url",{"_index":383,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["urltree",{"_index":200,"title":{},"body":{"guards/AuthenticationGuardService.html":{}}}],["use",{"_index":1285,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":315,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["used",{"_index":1258,"title":{},"body":{"miscellaneous/functions.html":{}}}],["usefactory",{"_index":317,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["user",{"_index":282,"title":{"classes/User.html":{}},"body":{"classes/AuthenticationMethodService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Authority.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/NullAuthenticationService.html":{},"interfaces/ProcessRole.html":{},"interfaces/State.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"interfaces/UserProcessRole.html":{},"injectables/UserService.html":{},"classes/UserTransformer.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1053,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email",{"_index":1117,"title":{},"body":{"classes/UserTransformer.html":{}}}],["user.id",{"_index":1116,"title":{},"body":{"classes/UserTransformer.html":{}}}],["user.name",{"_index":1118,"title":{},"body":{"classes/UserTransformer.html":{}}}],["user.surname",{"_index":1119,"title":{},"body":{"classes/UserTransformer.html":{}}}],["user/models/role",{"_index":1092,"title":{},"body":{"classes/UserTransformer.html":{}}}],["user/models/user",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/UserTransformer.html":{}}}],["user_feature_key",{"_index":943,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useractiontypes",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useractiontypes.remove_user",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useractiontypes.set_user",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useractiontypes.set_user_failure",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useractiontypes.set_user_success",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usereffects",{"_index":1024,"title":{"injectables/UserEffects.html":{}},"body":{"injectables/UserEffects.html":{},"coverage.html":{}}}],["username",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"interfaces/Credentials.html":{}}}],["userprocessrole",{"_index":358,"title":{"interfaces/UserProcessRole.html":{}},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{},"classes/UserTransformer.html":{},"coverage.html":{}}}],["userprocessroles",{"_index":367,"title":{},"body":{"interfaces/Authority.html":{},"interfaces/ProcessRole.html":{},"interfaces/UserProcessRole.html":{}}}],["userreducer",{"_index":944,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userreducer(state",{"_index":951,"title":{},"body":{"interfaces/State.html":{}}}],["userservice",{"_index":1028,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userstate",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usertransformer",{"_index":335,"title":{"classes/UserTransformer.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/UserTransformer.html":{},"coverage.html":{}}}],["usertransformer().transform(user",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["utf8",{"_index":842,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["utils",{"_index":1238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":511,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["validator",{"_index":860,"title":{},"body":{"components/RegistrationCardComponent.html":{}}}],["validators",{"_index":503,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["validators.email",{"_index":507,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["value",{"_index":137,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/AuthenticationService.html":{},"injectables/BasicAuthenticationService.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{},"components/LoginCardComponent.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":516,"title":{},"body":{"components/ForgottenPasswordCardComponent.html":{},"components/LoginCardComponent.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"components/ToolbarComponent.html":{}}}],["variable",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1417,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1239,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["via",{"_index":1300,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":650,"title":{},"body":{"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["visibility_off",{"_index":649,"title":{},"body":{"components/LoginCardComponent.html":{},"components/RegistrationCardComponent.html":{}}}],["void",{"_index":57,"title":{},"body":{"classes/AbstractLoggerService.html":{},"classes/ConsoleLogPublisher.html":{},"components/ForgottenPasswordCardComponent.html":{},"classes/LocalStorageLogPublisher.html":{},"classes/LogPublisher.html":{},"injectables/LogPublisherService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{},"components/LoginCardComponent.html":{},"classes/NullStorage.html":{},"components/PanelComponent.html":{},"components/RegistrationCardComponent.html":{},"injectables/SelectLanguageService.html":{},"injectables/SessionService.html":{},"components/ToolbarComponent.html":{}}}],["warn",{"_index":36,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":69,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["width",{"_index":975,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["workspace",{"_index":806,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["workspace.defaultproject",{"_index":814,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["workspace.projects[result.projectname",{"_index":820,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["workspaceconfig",{"_index":802,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["workspaceconfig.tostring",{"_index":810,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["workspacecontent",{"_index":809,"title":{},"body":{"interfaces/ProjectInfo.html":{}}}],["write",{"_index":561,"title":{},"body":{"classes/LogEntry.html":{},"interfaces/LogEntryConfiguration.html":{}}}],["writetolog",{"_index":37,"title":{},"body":{"classes/AbstractLoggerService.html":{},"injectables/LoggerService.html":{}}}],["writetolog(level",{"_index":71,"title":{},"body":{"classes/AbstractLoggerService.html":{},"interfaces/LoggerConfiguration.html":{},"injectables/LoggerService.html":{}}}],["x",{"_index":894,"title":{},"body":{"injectables/SessionService.html":{}}}],["yes",{"_index":530,"title":{},"body":{"classes/LocalStorageLogPublisher.html":{},"classes/LogEntry.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":294,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/CardModule.html":{},"modules/PanelModule.html":{},"modules/SignUpModule.html":{},"modules/ToolbarModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractCard.html":{"url":"classes/AbstractCard.html","title":"class - AbstractCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/card/abstract-card.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/card/abstract-card.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {FormGroup} from '@angular/forms';\n\nexport abstract class AbstractCard {\n    form: FormGroup;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractLoggerService.html":{"url":"classes/AbstractLoggerService.html","title":"class - AbstractLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                config\n                            \n                            \n                                    Protected\n                                    Readonly\n                                publisher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Protected\n                                shouldLog\n                            \n                            \n                                warn\n                            \n                            \n                                    Protected\n                                writeToLog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    level\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogPublisherService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(level: LogLevel, message: string, ...param: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            shouldLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            writeToLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(level: LogLevel, message: string, params: object)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n\n                \n                    \n                        getlevel()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogEntry, LogEntryConfiguration} from '../models/log-entry';\nimport {LogPublisherService} from './log-publisher.service';\nimport {LogLevel} from './log-level';\n\nexport interface LoggerConfiguration extends LogEntryConfiguration {\n    level?: LogLevel;\n}\n\nexport abstract class AbstractLoggerService {\n\n    protected readonly config: LoggerConfiguration;\n    protected readonly publisher: LogPublisherService;\n\n    protected constructor(private publisherService: LogPublisherService) {\n        this.publisher = publisherService;\n        this.config = {\n            logWithDate: true,\n            serializeParams: true,\n            level: LogLevel.ALL\n        };\n    }\n\n    get level() {\n        return this.config.level;\n    }\n\n    protected shouldLog(level: LogLevel): boolean {\n        return (level >= this.level && level !== LogLevel.OFF) || this.level === LogLevel.ALL;\n    }\n\n    protected writeToLog(level: LogLevel, message: string, params: object): void {\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        const entry = new LogEntry(level, message, params, this.config);\n        this.publisher.publish(entry);\n    }\n\n    info(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.INFO, message, params);\n    }\n\n    debug(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.DEBUG, message, params);\n    }\n\n    warn(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.WARN, message, params);\n    }\n\n    error(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.ERROR, message, params);\n    }\n\n    log(level: LogLevel, message: string, ...param: Array): void {\n        this.writeToLog(level, message, param);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggerService extends AbstractLoggerService {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        isAuthenticated\n                                \n                                \n                                        session\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthenticated\n                                    \n                                \n                                \n                                    \n                                        isAuthenticated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const AUTHENTICATION_FEATURE_KEY = 'nae-auth';\n\nexport interface AuthState {\n    isAuthenticated: boolean;\n    session: string;\n    error: string | null;\n}\n\nexport const initialState: AuthState = {\n    isAuthenticated: false,\n    session: null,\n    error: null\n};\n\nexport function getInitial(): AuthState {\n    return initialState;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationEffects.html":{"url":"injectables/AuthenticationEffects.html","title":"injectable - AuthenticationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login$\n                            \n                            \n                                loginFailure$\n                            \n                            \n                                loginSuccess$\n                            \n                            \n                                logout$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthenticationMethodService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationMethodService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n        ofType(login),\n        exhaustMap(action =>\n            this.authService.login(action as Credentials).pipe(\n                map(user => loginSuccess(user),\n                    catchError(error => of(loginFailure({error})))\n                )\n            )\n        ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginFailure$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n        ofType(loginFailure),\n        tap(action => {\n            console.log(action.error);\n        })\n    ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n        ofType(loginSuccess),\n        tap(action => {\n            this.authService.token = action.user.email;\n            this.router.navigateByUrl('/').then(r => {\n            });\n        })\n    ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n        ofType(logout),\n        tap(action => {\n            this.authService.token = '';\n            console.log(action.type + ': Logout successful');\n        })\n    ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {Router} from '@angular/router';\nimport {login, loginFailure, loginSuccess, logout} from '../actions/authentication.actions';\nimport {of} from 'rxjs';\nimport {catchError, exhaustMap, map, tap} from 'rxjs/operators';\nimport Credentials from '../../models/credentials';\nimport {AuthenticationMethodService} from '../../services/authentication-method.service';\n\n@Injectable()\nexport class AuthenticationEffects {\n\n    constructor(private actions$: Actions, private authService: AuthenticationMethodService, private router: Router) {\n    }\n\n    login$ = createEffect(() => this.actions$.pipe(\n        ofType(login),\n        exhaustMap(action =>\n            this.authService.login(action as Credentials).pipe(\n                map(user => loginSuccess(user),\n                    catchError(error => of(loginFailure({error})))\n                )\n            )\n        ));\n\n    loginSuccess$ = createEffect(() => this.actions$.pipe(\n        ofType(loginSuccess),\n        tap(action => {\n            this.authService.token = action.user.email;\n            this.router.navigateByUrl('/').then(r => {\n            });\n        })\n    ));\n\n    loginFailure$ = createEffect(() => this.actions$.pipe(\n        ofType(loginFailure),\n        tap(action => {\n            console.log(action.error);\n        })\n    ));\n\n    logout$ = createEffect(() => this.actions$.pipe(\n        ofType(logout),\n        tap(action => {\n            this.authService.token = '';\n            console.log(action.type + ': Logout successful');\n        })\n    ));\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuardService.html":{"url":"guards/AuthenticationGuardService.html","title":"guard - AuthenticationGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/netgrif-application-engine/src/lib/authentication/services/guard/authentication-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _loginUrl\n                            \n                            \n                                    Static\n                                    Readonly\n                                LOGIN_COMPONENT\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                resolveLoginPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthenticationService, _config: ConfigurationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/services/guard/authentication-guard.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/guard/authentication-guard.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveLoginPath\n                        \n                        \n                    \n                \n            \n            \n                \nresolveLoginPath(routes: literal type, searchedLayout: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/guard/authentication-guard.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchedLayout\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {ConfigurationService} from '../../../configuration/configuration.service';\nimport {AuthenticationService} from '../authentication/authentication.service';\nimport {Route} from '../../../configuration/interfaces/schema';\nimport {AuthenticationModule} from '../../authentication.module';\n\n@Injectable({\n    providedIn: AuthenticationModule\n})\nexport class AuthenticationGuardService implements CanActivate {\n\n    public static readonly LOGIN_COMPONENT = 'loginview';\n\n    private readonly _loginUrl: string;\n\n    constructor(private _auth: AuthenticationService,\n                private _config: ConfigurationService,\n                private _router: Router) {\n        this._loginUrl = '/' + this.resolveLoginPath(this._config.get().views.routes, AuthenticationGuardService.LOGIN_COMPONENT);\n    }\n\n\n    resolveLoginPath(routes: {}, searchedLayout: string): string {\n        if (!routes || Object.keys(routes).length === 0) {\n            return null;\n        }\n        const route = Object.keys(routes).find(routeKey => {\n            const layout = (routes[routeKey] as Route).layout;\n            return layout.name === searchedLayout;\n        });\n        if (route) {\n            return route;\n        }\n        for (const routeKey of Object.keys(routes)) {\n            const resolved = this.resolveLoginPath((routes[routeKey] as Route).routes, searchedLayout);\n            if (resolved) {\n                return routeKey + '/' + resolved;\n            }\n        }\n        return null;\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\n        if (!this._auth.isAuthenticated()) {\n            return this._router.parseUrl(this._loginUrl);\n        }\n        return this._auth.isAuthenticated();\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthenticationInterceptor.html":{"url":"interceptors/AuthenticationInterceptor.html","title":"interceptor - AuthenticationInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthenticationInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/services/authentication-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_session: SessionService, _auth: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication-interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _session\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication-interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {SessionService} from '../session/services/session.service';\nimport {AuthenticationService} from './authentication/authentication.service';\n\n@Injectable()\nexport class AuthenticationInterceptor implements HttpInterceptor {\n\n    constructor(private _session: SessionService, private _auth: AuthenticationService) {\n    }\n\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        if (this._session.sessionToken) {\n            req = req.clone({\n                headers: req.headers.set(this._session.sessionHeader, this._session.sessionToken)\n            });\n        }\n        return next.handle(req).pipe(\n            tap(event => {\n                if (event instanceof HttpResponse) {\n                    if (event.headers.has(this._session.sessionHeader)) {\n                        this._session.sessionToken = event.headers.get(this._session.sessionHeader);\n                    }\n                }\n            }),\n            catchError(errorEvent => {\n                if (errorEvent instanceof HttpErrorResponse && errorEvent.status === 401) {\n                    console.debug('Authentication token is invalid. Clearing stream');\n                    this._session.clear();\n                    this._auth.authenticated$.next(false);\n                }\n                return throwError(errorEvent);\n            })\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthenticationMethodService.html":{"url":"classes/AuthenticationMethodService.html","title":"class - AuthenticationMethodService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthenticationMethodService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/services/authentication-method.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                login\n                            \n                            \n                                    Abstract\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication-method.service.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication-method.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication-method.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '../models/user';\nimport {Observable} from 'rxjs';\nimport {Credentials} from '../models/credentials';\n\nexport abstract class AuthenticationMethodService {\n\n    protected constructor() {\n    }\n\n    abstract login(credentials: Credentials): Observable;\n\n    abstract logout(): Observable;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nAuthenticationInterceptor\n\nAuthenticationInterceptor\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationInterceptor->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/authentication.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationInterceptor\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from '@angular/common/http';\nimport {AuthenticationInterceptor} from './services/authentication-interceptor';\nimport {authenticationServiceFactory} from './authentication.factory';\nimport {ConfigurationService} from '../configuration/configuration.service';\nimport {AuthenticationMethodService} from './services/authentication-method.service';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        HttpClientModule\n        // StoreModule.forFeature(AUTHENTICATION_FEATURE_KEY, reducer),\n        // EffectsModule.forFeature([AuthenticationEffects]),\n        // StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: true }),\n    ],\n    providers: [\n        {provide: HTTP_INTERCEPTORS, useClass: AuthenticationInterceptor, multi: true},\n        {provide: AuthenticationMethodService, useFactory: authenticationServiceFactory, deps: [ConfigurationService, HttpClient]},\n        // AuthenticationEffects\n    ]\n})\nexport class AuthenticationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authenticated$\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                IDENTIFICATION_ATTRIBUTE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    authenticated$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthenticationMethodService, _config: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthenticationMethodService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _authenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            IDENTIFICATION_ATTRIBUTE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'username'\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        authenticated$\n                    \n                \n\n                \n                    \n                        getauthenticated$()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Credentials} from '../../models/credentials';\nimport {Injectable} from '@angular/core';\nimport {AuthenticationMethodService} from '../authentication-method.service';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {User as AuthUser} from '../../models/user';\nimport {ConfigurationService} from '../../../configuration/configuration.service';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {User} from '../../../user/models/user';\nimport {UserTransformer} from '../../models/user.transformer';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticationService {\n\n    private static readonly IDENTIFICATION_ATTRIBUTE = 'username'; // TODO change for ID\n\n    private _authenticated$: BehaviorSubject;\n\n    constructor(private _auth: AuthenticationMethodService, private _config: ConfigurationService) {\n        this._authenticated$ = new BehaviorSubject(false);\n    }\n\n    login(credentials: Credentials): Observable {\n        return this._auth.login(credentials).pipe(\n            tap((user: AuthUser) => {\n                this._authenticated$.next(!!user[AuthenticationService.IDENTIFICATION_ATTRIBUTE]);\n            }),\n            map((user: AuthUser) => new UserTransformer().transform(user)),\n            catchError(error => {\n                console.error(error);\n                return of(null);\n            })\n        );\n    }\n\n    logout(): Observable {\n        return this._auth.logout().pipe(\n            tap(() => this._authenticated$.next(false)),\n            catchError(error => {\n                console.error(error);\n                return of(error);\n            })\n        );\n    }\n\n    isAuthenticated(): boolean {\n        return this._authenticated$.getValue();\n    }\n\n    get authenticated$(): BehaviorSubject {\n        return this._authenticated$;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Authority.html":{"url":"interfaces/Authority.html","title":"interface - Authority","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Authority\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authority\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authority\n                                    \n                                \n                                \n                                    \n                                        authority:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Authority {\n    authority: string;\n}\n\nexport interface ProcessRole {\n    stringId: string;\n    name: string;\n    description?: string;\n}\n\nexport interface UserProcessRole {\n    roleId: string;\n    netId?: string;\n}\n\nexport interface User {\n    id: string;\n    email: string;\n    name: string;\n    surname: string;\n    fullName?: string;\n    groups?: Array;\n    authorities?: Array;\n    processRoles?: Array;\n    userProcessRoles?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicAuthenticationService.html":{"url":"injectables/BasicAuthenticationService.html","title":"injectable - BasicAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BasicAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/services/methods/basic-authentication/basic-authentication.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthenticationMethodService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Abstract\n                                login\n                            \n                            \n                                    Abstract\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient, _config: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/services/methods/basic-authentication/basic-authentication.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/methods/basic-authentication/basic-authentication.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {username: '', password: ''}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/methods/basic-authentication/basic-authentication.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthenticationMethodService\n\n                \n            \n            \n                \n                        Defined in         AuthenticationMethodService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Inherited from         AuthenticationMethodService\n\n                \n            \n            \n                \n                        Defined in         AuthenticationMethodService:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {User} from '../../../models/user';\nimport {AuthenticationMethodService} from '../../authentication-method.service';\nimport {Credentials} from '../../../models/credentials';\nimport {ConfigurationService} from '../../../../configuration/configuration.service';\n\n@Injectable()\nexport class BasicAuthenticationService extends AuthenticationMethodService {\n\n    constructor(private _http: HttpClient, private _config: ConfigurationService) {\n        super();\n    }\n\n    login(credentials: Credentials = {username: '', password: ''}): Observable {\n        const url = this._config.get().providers.auth.endpoints['login'];\n        if (!url) {\n            throwError(new Error('Login URL is not defined in the config [nae.providers.auth.endpoints.login]'));\n        }\n        if (!credentials.username || !credentials.password) {\n            throwError(new Error('User\\'s credentials are not defined!'));\n        }\n        credentials.username = credentials.username.trim();\n        credentials.password = credentials.password.trim();\n        if (credentials.username === '' || credentials.password === '') {\n            throwError(new Error('User\\'s credentials are empty!'));\n        }\n\n        return this._http.get(url, {\n            headers: new HttpHeaders().set('Authorization', `Basic ${btoa(`${credentials.username}:${credentials.password}`)}`)\n        });\n    }\n\n    logout(): Observable {\n        const url = this._config.get().providers.auth.endpoints['logout'];\n        if (!url) {\n            throw new Error('Logout URL is not defined in the config [nae.providers.auth.endpoints.logout]');\n        }\n\n        return this._http.post(url, {});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardModule.html":{"url":"modules/CardModule.html","title":"module - CardModule","body":"\n                   \n\n\n\n\n    Modules\n    CardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardModule\n\n\n\ncluster_CardModule_declarations\n\n\n\ncluster_CardModule_imports\n\n\n\ncluster_CardModule_exports\n\n\n\n\nForgottenPasswordCardComponent\n\nForgottenPasswordCardComponent\n\n\n\nCardModule\n\nCardModule\n\nCardModule -->\n\nForgottenPasswordCardComponent->CardModule\n\n\n\n\n\nLoginCardComponent\n\nLoginCardComponent\n\nCardModule -->\n\nLoginCardComponent->CardModule\n\n\n\n\n\nRegistrationCardComponent\n\nRegistrationCardComponent\n\nCardModule -->\n\nRegistrationCardComponent->CardModule\n\n\n\n\n\nForgottenPasswordCardComponent \n\nForgottenPasswordCardComponent \n\nForgottenPasswordCardComponent  -->\n\nCardModule->ForgottenPasswordCardComponent \n\n\n\n\n\nLoginCardComponent \n\nLoginCardComponent \n\nLoginCardComponent  -->\n\nCardModule->LoginCardComponent \n\n\n\n\n\nRegistrationCardComponent \n\nRegistrationCardComponent \n\nRegistrationCardComponent  -->\n\nCardModule->RegistrationCardComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCardModule -->\n\nMaterialModule->CardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/card/card.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForgottenPasswordCardComponent\n                        \n                        \n                            LoginCardComponent\n                        \n                        \n                            RegistrationCardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ForgottenPasswordCardComponent\n                        \n                        \n                            LoginCardComponent\n                        \n                        \n                            RegistrationCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RegistrationCardComponent} from './registration-card/registration-card.component';\nimport {LoginCardComponent} from './login-card/login-card.component';\nimport {ForgottenPasswordCardComponent} from './forgotten-password-card/forgotten-password-panel.component';\nimport {MaterialModule} from '../material/material.module';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    declarations: [RegistrationCardComponent, LoginCardComponent, ForgottenPasswordCardComponent],\n    exports: [RegistrationCardComponent, LoginCardComponent, ForgottenPasswordCardComponent],\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        ReactiveFormsModule,\n    ]\n})\nexport class CardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigurationService.html":{"url":"classes/ConfigurationService.html","title":"class - ConfigurationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigurationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createConfigurationCopy\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(configuration: NetgrifApplicationEngine)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                    NetgrifApplicationEngine\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createConfigurationCopy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createConfigurationCopy()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NetgrifApplicationEngine\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAsync()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {NetgrifApplicationEngine} from './interfaces/schema';\nimport {Observable, of} from 'rxjs';\n\nexport abstract class ConfigurationService {\n\n    protected constructor(private configuration: NetgrifApplicationEngine) {\n    }\n\n    public getAsync(): Observable {\n        return of(this.get());\n    }\n\n    public get(): NetgrifApplicationEngine {\n        return this.createConfigurationCopy();\n    }\n\n    private createConfigurationCopy(): any {\n        return JSON.parse(JSON.stringify(this.configuration));\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleLogPublisher.html":{"url":"classes/ConsoleLogPublisher.html","title":"class - ConsoleLogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleLogPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LogPublisher\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                log\n                            \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LogPublisher\n\n                                \n                            \n                        \n                            \n                                    Defined in         LogPublisher:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LogPublisher} from './log-publisher';\nimport {LogEntry} from '../models/log-entry';\nimport {LogPublisherService} from '../services/log-publisher.service';\nimport {LogLevel} from '../services/log-level';\n\n\nexport class ConsoleLogPublisher extends LogPublisher {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n\n    clear(): void {\n        console.clear();\n    }\n\n    log(entry: LogEntry): void {\n        if (!entry) {\n            return;\n        }\n        switch (entry.level) {\n            case LogLevel.DEBUG:\n                console.debug(entry.toString());\n                break;\n            case LogLevel.ERROR:\n                console.error(entry.toString());\n                break;\n            case LogLevel.INFO:\n                console.info(entry.toString());\n                break;\n            case LogLevel.WARN:\n                console.warn(entry.toString());\n                break;\n            default:\n                console.log(entry.toString());\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CovalentModule.html":{"url":"modules/CovalentModule.html","title":"module - CovalentModule","body":"\n                   \n\n\n\n\n    Modules\n    CovalentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/covalent/covalent.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CovalentHighlightModule} from '@covalent/highlight';\nimport {CovalentMarkdownModule} from '@covalent/markdown';\nimport {CovalentCommonModule, CovalentLayoutModule, CovalentStepsModule} from '@covalent/core';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        CovalentHighlightModule,\n        CovalentMarkdownModule\n    ],\n    exports: [\n        CovalentHighlightModule,\n        CovalentMarkdownModule,\n        CovalentLayoutModule,\n        CovalentStepsModule,\n        CovalentCommonModule\n    ]\n})\nexport class CovalentModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/models/credentials.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Credentials {\n    username: string;\n    password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgottenPasswordCardComponent.html":{"url":"components/ForgottenPasswordCardComponent.html","title":"component - ForgottenPasswordCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgottenPasswordCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/netgrif-application-engine/src/lib/card/forgotten-password-card/forgotten-password-panel.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractCard\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nae-forgotten-password-panel\n            \n\n            \n                styleUrls\n                ./forgotten-password-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgotten-password-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/card/forgotten-password-card/forgotten-password-panel.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/card/forgotten-password-card/forgotten-password-panel.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: object)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/card/forgotten-password-card/forgotten-password-panel.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCard\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCard:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {AbstractCard} from '../abstract-card';\n\n@Component({\n    selector: 'nae-forgotten-password-panel',\n    templateUrl: './forgotten-password-card.component.html',\n    styleUrls: ['./forgotten-password-card.component.scss']\n})\nexport class ForgottenPasswordCardComponent extends AbstractCard implements OnInit {\n\n    constructor(private fb: FormBuilder) {\n        super();\n        this.form = fb.group({\n            login: [''],\n            email: ['', Validators.email]\n        });\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit(form: object) {\n        console.log(form);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                            \n                            \n                                The login name must have at least 4 letters\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Not a valid email\n                            \n                        \n                    \n                    \n                        Submit\n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./forgotten-password-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            The login name must have at least 4 letters                                                                                                                                                                                                            Not a valid email                                                                                                                    Submit                                                            '\n    var COMPONENTS = [{'name': 'ForgottenPasswordCardComponent', 'selector': 'nae-forgotten-password-panel'},{'name': 'LoginCardComponent', 'selector': 'nae-login-panel'},{'name': 'PanelComponent', 'selector': 'nae-app-panel'},{'name': 'RegistrationCardComponent', 'selector': 'nae-registration-panel'},{'name': 'ToolbarComponent', 'selector': 'nae-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgottenPasswordCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalStorageLogPublisher.html":{"url":"classes/LocalStorageLogPublisher.html","title":"class - LocalStorageLogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalStorageLogPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LogPublisher\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                DEFAULT_KEY\n                            \n                            \n                                    Protected\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                log\n                            \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService, logKey?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DEFAULT_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'application-log'\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LogPublisher\n\n                                \n                            \n                        \n                            \n                                    Defined in         LogPublisher:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         LogPublisher\n\n                \n            \n            \n                \n                        Defined in         LogPublisher:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LogPublisher} from './log-publisher';\nimport {LogEntry} from '../models/log-entry';\nimport {LogPublisherService} from '../services/log-publisher.service';\n\nexport class LocalStorageLogPublisher extends LogPublisher {\n\n    public static readonly DEFAULT_KEY = 'application-log';\n\n    constructor(publisherService: LogPublisherService, logKey?: string) {\n        super(publisherService);\n        this.location = !logKey ? LocalStorageLogPublisher.DEFAULT_KEY : logKey;\n    }\n\n    clear(): void {\n        localStorage.removeItem(this.location);\n    }\n\n    log(entry: LogEntry): void {\n        if (!entry) {\n            return;\n        }\n        const logString: string = localStorage.getItem(this.location);\n        let log: LogEntry[];\n        if (!logString) {\n            log = [];\n        } else {\n            log = JSON.parse(logString);\n        }\n        log.push(entry);\n        try {\n            localStorage.setItem(this.location, JSON.stringify(log));\n        } catch (e) {\n            const deleted: LogEntry = log.splice(0, 1)[0];\n            console.debug('Log entry from ' + deleted.date.toISOString() + ' was deleted from the LocalStorage \\'' + this.location + '\\'');\n            try {\n                localStorage.setItem(this.location, JSON.stringify(log));\n            } catch (ex) {\n                console.error(ex);\n                throw new Error(ex.message);\n            }\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogEntry.html":{"url":"classes/LogEntry.html","title":"class - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                config\n                            \n                            \n                                    Public\n                                    Readonly\n                                date\n                            \n                            \n                                    Public\n                                    Readonly\n                                level\n                            \n                            \n                                    Public\n                                    Readonly\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                serializeParams\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    levelString\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(level: LogLevel, message: string, params?: object, config?: LogEntryConfiguration)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:20\n                            \n                        \n\n                \n                    \n                            Log entry class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        LogLevel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nLog level of this entry\n\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nmessage to write to the log\n\n\n                                                        \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nadditional parameters to write into the log\n\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        LogEntryConfiguration\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nextra class configuration\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogEntryConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogLevel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            serializeParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serializeParams()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:50\n                \n            \n\n\n            \n                \n                    Serialization of additional parameters of the entry.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Serialized JSON\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:61\n                \n            \n\n\n            \n                \n                    Stringify log entry. According to configuration entry can include time, log level and extra parameters\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Log string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        levelString\n                    \n                \n\n                \n                    \n                        getlevelString()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {LogLevel} from '../services/log-level';\n\n/**\n * Log entry configuration.\n * All attributes are optional.\n * Attributes that are not present in the configuration object are set to their default value.\n */\nexport interface LogEntryConfiguration {\n    logWithDate?: boolean;\n    serializeParams?: boolean;\n    includeLogLevel?: boolean;\n}\n\nexport class LogEntry {\n\n    public readonly date: Date;\n    public readonly level: LogLevel;\n    public readonly message: string;\n    public readonly params: object;\n    public readonly config: LogEntryConfiguration;\n\n    /**\n     * Log entry class\n     * @param level - Log level of this entry\n     * @param message - message to write to the log\n     * @param params - additional parameters to write into the log\n     * @param config - extra class configuration\n     */\n    constructor(level: LogLevel, message: string, params?: object, config?: LogEntryConfiguration) {\n        this.date = new Date();\n        this.level = level;\n        this.message = message;\n        this.params = params;\n        const defaults: LogEntryConfiguration = {\n            logWithDate: true,\n            serializeParams: true,\n            includeLogLevel: true\n        };\n        this.config = {...defaults, ...config};\n    }\n\n    get levelString(): string {\n        return LogLevel[this.level.toString()];\n    }\n\n    /**\n     * Serialization of additional parameters of the entry.\n     * @return Serialized JSON\n     */\n    private serializeParams(): string {\n        if (!this.config.serializeParams) {\n            return '';\n        }\n        return JSON.stringify(this.params);\n    }\n\n    /**\n     * Stringify log entry. According to configuration entry can include time, log level and extra parameters\n     * @return Log string\n     */\n    toString(): string {\n        let str = '';\n        if (this.config.logWithDate) {\n            str += '[' + this.date.toISOString() + '] ';\n        }\n        if (this.config.includeLogLevel) {\n            str += ' ';\n        }\n        str += this.message;\n        if (this.config.serializeParams && this.params) {\n            if (this.params instanceof Array) {\n                if (this.params.length !== 0) {\n                    str += ' , params: ' + this.serializeParams();\n                }\n            } else {\n                str += ' , params: ' + this.serializeParams();\n            }\n        }\n        return str;\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntryConfiguration.html":{"url":"interfaces/LogEntryConfiguration.html","title":"interface - LogEntryConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LogEntryConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts\n        \n\n            \n                Description\n            \n            \n                Log entry configuration.\nAll attributes are optional.\nAttributes that are not present in the configuration object are set to their default value.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        includeLogLevel\n                                \n                                \n                                            Optional\n                                        logWithDate\n                                \n                                \n                                            Optional\n                                        serializeParams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        includeLogLevel\n                                    \n                                \n                                \n                                    \n                                        includeLogLevel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logWithDate\n                                    \n                                \n                                \n                                    \n                                        logWithDate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serializeParams\n                                    \n                                \n                                \n                                    \n                                        serializeParams:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {LogLevel} from '../services/log-level';\n\n/**\n * Log entry configuration.\n * All attributes are optional.\n * Attributes that are not present in the configuration object are set to their default value.\n */\nexport interface LogEntryConfiguration {\n    logWithDate?: boolean;\n    serializeParams?: boolean;\n    includeLogLevel?: boolean;\n}\n\nexport class LogEntry {\n\n    public readonly date: Date;\n    public readonly level: LogLevel;\n    public readonly message: string;\n    public readonly params: object;\n    public readonly config: LogEntryConfiguration;\n\n    /**\n     * Log entry class\n     * @param level - Log level of this entry\n     * @param message - message to write to the log\n     * @param params - additional parameters to write into the log\n     * @param config - extra class configuration\n     */\n    constructor(level: LogLevel, message: string, params?: object, config?: LogEntryConfiguration) {\n        this.date = new Date();\n        this.level = level;\n        this.message = message;\n        this.params = params;\n        const defaults: LogEntryConfiguration = {\n            logWithDate: true,\n            serializeParams: true,\n            includeLogLevel: true\n        };\n        this.config = {...defaults, ...config};\n    }\n\n    get levelString(): string {\n        return LogLevel[this.level.toString()];\n    }\n\n    /**\n     * Serialization of additional parameters of the entry.\n     * @return Serialized JSON\n     */\n    private serializeParams(): string {\n        if (!this.config.serializeParams) {\n            return '';\n        }\n        return JSON.stringify(this.params);\n    }\n\n    /**\n     * Stringify log entry. According to configuration entry can include time, log level and extra parameters\n     * @return Log string\n     */\n    toString(): string {\n        let str = '';\n        if (this.config.logWithDate) {\n            str += '[' + this.date.toISOString() + '] ';\n        }\n        if (this.config.includeLogLevel) {\n            str += ' ';\n        }\n        str += this.message;\n        if (this.config.serializeParams && this.params) {\n            if (this.params instanceof Array) {\n                if (this.params.length !== 0) {\n                    str += ' , params: ' + this.serializeParams();\n                }\n            } else {\n                str += ' , params: ' + this.serializeParams();\n            }\n        }\n        return str;\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogPublisher.html":{"url":"classes/LogPublisher.html","title":"class - LogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LogEntry} from '../models/log-entry';\nimport {LogPublisherService} from '../services/log-publisher.service';\n\nexport abstract class LogPublisher {\n\n    protected location: string;\n\n    constructor(publisherService: LogPublisherService) {\n        publisherService\n            .register(this)\n            .subscribe(entry => {\n                if (entry) {\n                    this.log(entry);\n                }\n            });\n    }\n\n    abstract log(entry: LogEntry): void;\n\n    abstract clear(): void;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogPublisherService.html":{"url":"injectables/LogPublisherService.html","title":"injectable - LogPublisherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogPublisherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _log\n                            \n                            \n                                    Private\n                                    Readonly\n                                _publishers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearAll\n                            \n                            \n                                publish\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    publishers\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \nclearAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            publish\n                        \n                        \n                    \n                \n            \n            \n                \npublish(entry: LogEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(publisher: LogPublisher)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                LogPublisher\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _log\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _publishers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogPublisher[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        publishers\n                    \n                \n\n                \n                    \n                        getpublishers()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts:30\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogPublisher} from '../publishers/log-publisher';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {LogEntry} from '../models/log-entry';\nimport {ConsoleLogPublisher} from '../publishers/console-log-publisher';\nimport {LocalStorageLogPublisher} from '../publishers/local-storage-log-publisher';\n\nexport const PUBLISHERS = {\n    ConsoleLogPublisher,\n    LocalStorageLogPublisher\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogPublisherService {\n\n    // public static instance: LogPublisherService;\n\n    private readonly _log: BehaviorSubject;\n    private readonly _publishers: LogPublisher[];\n\n    constructor() {\n        // LogPublisherService.instance = this;\n        this._log = new BehaviorSubject(null);\n        this._publishers = [];\n        Object.keys(PUBLISHERS).forEach(key => new PUBLISHERS[key](this));\n    }\n\n    get publishers(): LogPublisher[] {\n        return this._publishers;\n    }\n\n    register(publisher: LogPublisher): Observable {\n        if (!publisher) {\n            return of(null);\n        }\n        this._publishers.push(publisher);\n        return this._log;\n    }\n\n    publish(entry: LogEntry): void {\n        if (!entry) {\n            return;\n        }\n        this._log.next(entry);\n    }\n\n    clearAll(): void {\n        this._publishers.forEach(publisher => publisher.clear());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggerConfiguration.html":{"url":"interfaces/LoggerConfiguration.html","title":"interface - LoggerConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggerConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LogEntryConfiguration\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        level\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         LogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogEntry, LogEntryConfiguration} from '../models/log-entry';\nimport {LogPublisherService} from './log-publisher.service';\nimport {LogLevel} from './log-level';\n\nexport interface LoggerConfiguration extends LogEntryConfiguration {\n    level?: LogLevel;\n}\n\nexport abstract class AbstractLoggerService {\n\n    protected readonly config: LoggerConfiguration;\n    protected readonly publisher: LogPublisherService;\n\n    protected constructor(private publisherService: LogPublisherService) {\n        this.publisher = publisherService;\n        this.config = {\n            logWithDate: true,\n            serializeParams: true,\n            level: LogLevel.ALL\n        };\n    }\n\n    get level() {\n        return this.config.level;\n    }\n\n    protected shouldLog(level: LogLevel): boolean {\n        return (level >= this.level && level !== LogLevel.OFF) || this.level === LogLevel.ALL;\n    }\n\n    protected writeToLog(level: LogLevel, message: string, params: object): void {\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        const entry = new LogEntry(level, message, params, this.config);\n        this.publisher.publish(entry);\n    }\n\n    info(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.INFO, message, params);\n    }\n\n    debug(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.DEBUG, message, params);\n    }\n\n    warn(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.WARN, message, params);\n    }\n\n    error(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.ERROR, message, params);\n    }\n\n    log(level: LogLevel, message: string, ...param: Array): void {\n        this.writeToLog(level, message, param);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggerService extends AbstractLoggerService {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractLoggerService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                config\n                            \n                            \n                                    Protected\n                                    Readonly\n                                publisher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Protected\n                                shouldLog\n                            \n                            \n                                warn\n                            \n                            \n                                    Protected\n                                writeToLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publisherService: LogPublisherService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisherService\n                                                  \n                                                        \n                                                                        LogPublisherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(level: LogLevel, message: string, ...param: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            shouldLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, ...params: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            writeToLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(level: LogLevel, message: string, params: object)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLoggerService\n\n                \n            \n            \n                \n                        Defined in         AbstractLoggerService:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerConfiguration\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLoggerService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLoggerService:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogPublisherService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractLoggerService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractLoggerService:13\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {LogEntry, LogEntryConfiguration} from '../models/log-entry';\nimport {LogPublisherService} from './log-publisher.service';\nimport {LogLevel} from './log-level';\n\nexport interface LoggerConfiguration extends LogEntryConfiguration {\n    level?: LogLevel;\n}\n\nexport abstract class AbstractLoggerService {\n\n    protected readonly config: LoggerConfiguration;\n    protected readonly publisher: LogPublisherService;\n\n    protected constructor(private publisherService: LogPublisherService) {\n        this.publisher = publisherService;\n        this.config = {\n            logWithDate: true,\n            serializeParams: true,\n            level: LogLevel.ALL\n        };\n    }\n\n    get level() {\n        return this.config.level;\n    }\n\n    protected shouldLog(level: LogLevel): boolean {\n        return (level >= this.level && level !== LogLevel.OFF) || this.level === LogLevel.ALL;\n    }\n\n    protected writeToLog(level: LogLevel, message: string, params: object): void {\n        if (!this.shouldLog(level)) {\n            return;\n        }\n        const entry = new LogEntry(level, message, params, this.config);\n        this.publisher.publish(entry);\n    }\n\n    info(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.INFO, message, params);\n    }\n\n    debug(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.DEBUG, message, params);\n    }\n\n    warn(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.WARN, message, params);\n    }\n\n    error(message: string, ...params: Array): void {\n        this.writeToLog(LogLevel.ERROR, message, params);\n    }\n\n    log(level: LogLevel, message: string, ...param: Array): void {\n        this.writeToLog(level, message, param);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggerService extends AbstractLoggerService {\n\n    constructor(publisherService: LogPublisherService) {\n        super(publisherService);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginCardComponent.html":{"url":"components/LoginCardComponent.html","title":"component - LoginCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractCard\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nae-login-panel\n            \n\n            \n                styleUrls\n                ./login-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hidePassword\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: object)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCard\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCard:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {AbstractCard} from '../abstract-card';\n\n@Component({\n    selector: 'nae-login-panel',\n    templateUrl: './login-card.component.html',\n    styleUrls: ['./login-card.component.scss']\n})\nexport class LoginCardComponent extends AbstractCard implements OnInit {\n    hidePassword = true;\n\n    constructor(private fb: FormBuilder) {\n        super();\n        this.form = fb.group({\n            login: [''],\n            password: ['']\n        });\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit(form: object) {\n        console.log(form);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                            \n                            \n                                The login name must have at least 4 letters\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                {{hidePassword ? 'visibility_off' : 'visibility'}}\n                            \n                        \n                    \n                    \n                        Forgotten password?\n                    \n                    \n                        \n                            Sign up\n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./login-card.component.scss\n                \n                .forgotten-password {\n    margin-bottom: 10px;\n}\n\na {\n    color: rgba(117, 117, 117, 1);\n}\n\na:hover {\n    color: rgba(0, 0, 0, .87);\n    cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            The login name must have at least 4 letters                                                                                                                                                                                                            {{hidePassword ? \\'visibility_off\\' : \\'visibility\\'}}                                                                                                                    Forgotten password?                                                                                            Sign up                                                                                    '\n    var COMPONENTS = [{'name': 'ForgottenPasswordCardComponent', 'selector': 'nae-forgotten-password-panel'},{'name': 'LoginCardComponent', 'selector': 'nae-login-panel'},{'name': 'PanelComponent', 'selector': 'nae-app-panel'},{'name': 'RegistrationCardComponent', 'selector': 'nae-registration-panel'},{'name': 'ToolbarComponent', 'selector': 'nae-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/material/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n} from '@angular/material';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        FlexLayoutModule\n    ],\n    exports: [\n        FlexLayoutModule,\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule\n    ]\n})\nexport class MaterialModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NullAuthenticationService.html":{"url":"injectables/NullAuthenticationService.html","title":"injectable - NullAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NullAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/services/methods/null-authentication/null-authentication.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthenticationMethodService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Abstract\n                                login\n                            \n                            \n                                    Abstract\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/services/methods/null-authentication/null-authentication.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/methods/null-authentication/null-authentication.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/services/methods/null-authentication/null-authentication.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthenticationMethodService\n\n                \n            \n            \n                \n                        Defined in         AuthenticationMethodService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Inherited from         AuthenticationMethodService\n\n                \n            \n            \n                \n                        Defined in         AuthenticationMethodService:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AuthenticationMethodService} from '../../authentication-method.service';\nimport {Credentials} from '../../../models/credentials';\nimport {Observable, of} from 'rxjs';\nimport {User} from '../../../models/user';\n\n@Injectable()\nexport class NullAuthenticationService extends AuthenticationMethodService {\n\n    constructor() {\n        super();\n    }\n\n    login(credentials: Credentials): Observable {\n        return of(null);\n    }\n\n    logout(): Observable {\n        return of({});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NullStorage.html":{"url":"classes/NullStorage.html","title":"class - NullStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NullStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Storage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                length\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            length\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            key\n                        \n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeItem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts:1\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class NullStorage implements Storage {\n    [name: string]: any;\n\n    readonly length: number;\n\n    clear(): void {\n    }\n\n    getItem(key: string): string | null {\n        return null;\n    }\n\n    key(index: number): string | null {\n        return null;\n    }\n\n    removeItem(key: string): void {\n    }\n\n    setItem(key: string, value: string): void {\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PanelComponent.html":{"url":"components/PanelComponent.html","title":"component - PanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/netgrif-application-engine/src/lib/panel/panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nae-app-panel\n            \n\n            \n                styleUrls\n                ./panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitCollapse\n                            \n                            \n                                emitExpand\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expansionDisabled\n                            \n                            \n                                panelContent\n                            \n                            \n                                panelHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                stopLoading\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expansionDisabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panelContent\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panelHeader\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        stopLoading\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitCollapse\n                        \n                        \n                    \n                \n            \n            \n                \nemitCollapse()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitExpand\n                        \n                        \n                    \n                \n            \n            \n                \nemitExpand()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/panel/panel.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\n\n@Component({\n    selector: 'nae-app-panel',\n    templateUrl: './panel.component.html',\n    styleUrls: ['./panel.component.scss']\n})\nexport class PanelComponent implements OnInit {\n\n    @Input() expansionDisabled = false;\n    @Input() panelHeader: TemplateRef;\n    @Input() panelContent: TemplateRef;\n    @Output() stopLoading: EventEmitter = new EventEmitter();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    emitExpand() {\n        this.stopLoading.emit();\n    }\n\n    emitCollapse() {\n        this.stopLoading.emit();\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n        \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./panel.component.scss\n                \n                .mat-expansion-panel-header {\n    border-bottom: 1px solid rgba(0,0,0,.03);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                '\n    var COMPONENTS = [{'name': 'ForgottenPasswordCardComponent', 'selector': 'nae-forgotten-password-panel'},{'name': 'LoginCardComponent', 'selector': 'nae-login-panel'},{'name': 'PanelComponent', 'selector': 'nae-app-panel'},{'name': 'RegistrationCardComponent', 'selector': 'nae-registration-panel'},{'name': 'ToolbarComponent', 'selector': 'nae-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PanelModule.html":{"url":"modules/PanelModule.html","title":"module - PanelModule","body":"\n                   \n\n\n\n\n    Modules\n    PanelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PanelModule\n\n\n\ncluster_PanelModule_declarations\n\n\n\ncluster_PanelModule_imports\n\n\n\ncluster_PanelModule_exports\n\n\n\n\nPanelComponent\n\nPanelComponent\n\n\n\nPanelModule\n\nPanelModule\n\nPanelModule -->\n\nPanelComponent->PanelModule\n\n\n\n\n\nPanelComponent \n\nPanelComponent \n\nPanelComponent  -->\n\nPanelModule->PanelComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nPanelModule -->\n\nMaterialModule->PanelModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/panel/panel.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PanelComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PanelComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PanelComponent} from './panel.component';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MaterialModule} from '../material/material.module';\n\n@NgModule({\n    declarations: [\n        PanelComponent,\n    ],\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexModule\n    ],\n    exports: [\n        PanelComponent,\n    ]\n})\nexport class PanelModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessRole.html":{"url":"interfaces/ProcessRole.html","title":"interface - ProcessRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProcessRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                        stringId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stringId\n                                    \n                                \n                                \n                                    \n                                        stringId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Authority {\n    authority: string;\n}\n\nexport interface ProcessRole {\n    stringId: string;\n    name: string;\n    description?: string;\n}\n\nexport interface UserProcessRole {\n    roleId: string;\n    netId?: string;\n}\n\nexport interface User {\n    id: string;\n    email: string;\n    name: string;\n    surname: string;\n    fullName?: string;\n    groups?: Array;\n    authorities?: Array;\n    processRoles?: Array;\n    userProcessRoles?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectInfo.html":{"url":"interfaces/ProjectInfo.html","title":"interface - ProjectInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProjectInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/schematics/utilityFunctions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        path\n                                \n                                \n                                        projectName\n                                \n                                \n                                        projectNameClassified\n                                \n                                \n                                        projectNameDasherized\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    projects/[name]/src/app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectName\n                                    \n                                \n                                \n                                    \n                                        projectName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectNameClassified\n                                    \n                                \n                                \n                                    \n                                        projectNameClassified:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectNameDasherized\n                                    \n                                \n                                \n                                    \n                                        projectNameDasherized:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as ts from '@schematics/angular/third_party/github.com/Microsoft/TypeScript/lib/typescript';\n\nimport {SchematicsException, Tree} from '@angular-devkit/schematics';\nimport {FileEntry, UpdateRecorder} from '@angular-devkit/schematics/src/tree/interface';\nimport {experimental, strings} from '@angular-devkit/core';\nimport {NetgrifApplicationEngine} from '../src/lib/configuration/interfaces/schema';\nimport {Change, InsertChange} from '@schematics/angular/utility/change';\n\ninterface ProjectInfo {\n    /**\n     * projects/[name]/src/app\n     */\n    path: string;\n    projectName: string;\n    projectNameClassified: string;\n    projectNameDasherized: string;\n}\n\n\nexport function getProjectInfo(tree: Tree): ProjectInfo {\n    const workspaceConfig = tree.read('/angular.json');\n    if (!workspaceConfig) {\n        throw new SchematicsException('Could not find Angular workspace configuration. Missing \\'angular.json\\'.');\n    }\n\n    const workspaceContent = workspaceConfig.toString();\n\n    const workspace: experimental.workspace.WorkspaceSchema = JSON.parse(workspaceContent);\n\n    const result = {\n        path: '',\n        projectName: '',\n        projectNameClassified: '',\n        projectNameDasherized: ''\n    };\n\n    result.projectName = workspace.defaultProject;\n    result.projectNameClassified = strings.classify(result.projectName);\n    result.projectNameDasherized = strings.dasherize(result.projectName);\n\n    const project = workspace.projects[result.projectName];\n\n    const projectType = project.projectType === 'application' ? 'app' : 'lib';\n\n    result.path = `${project.sourceRoot}/${projectType}`;\n\n    return result;\n}\n\nexport function getNaeConfigurationString(tree: Tree): string {\n    const naeConfig = tree.read('/nae.json');\n    if (!naeConfig) {\n        throw new SchematicsException('Could not find Netgrif Application Engine workspace configuration.  Missing \\'nae.json\\'.');\n    }\n\n    return naeConfig.toString();\n}\n\nexport function getNaeConfiguration(tree: Tree): NetgrifApplicationEngine {\n    return JSON.parse(getNaeConfigurationString(tree));\n}\n\nexport function getTsSource(path: string, content: string): ts.SourceFile {\n    return ts.createSourceFile(path, content, ts.ScriptTarget.Latest, true);\n}\n\nexport function fileEntryToTsSource(file: FileEntry, encoding: string = 'utf8'): ts.SourceFile {\n    return getTsSource(file.path, file.content.toString(encoding));\n}\n\nexport function createChangesRecorder(tree: Tree, file: FileEntry, changes: Array): UpdateRecorder {\n    const exportRecorder = tree.beginUpdate(file.path);\n    for (const change of changes) {\n        if (change instanceof InsertChange) {\n            exportRecorder.insertLeft(change.pos, change.toAdd);\n        }\n    }\n    return exportRecorder;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationCardComponent.html":{"url":"components/RegistrationCardComponent.html","title":"component - RegistrationCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegistrationCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractCard\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nae-registration-panel\n            \n\n            \n                styleUrls\n                ./registration-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hidePassword\n                            \n                            \n                                hideRepeatPassword\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: object)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideRepeatPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCard\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCard:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {passwordValidator} from './password.validator';\nimport {AbstractCard} from '../abstract-card';\n\n@Component({\n    selector: 'nae-registration-panel',\n    templateUrl: './registration-card.component.html',\n    styleUrls: ['./registration-card.component.scss']\n})\nexport class RegistrationCardComponent extends AbstractCard implements OnInit {\n    hidePassword = true;\n    hideRepeatPassword = true;\n\n    constructor(private fb: FormBuilder) {\n        super();\n        this.form = fb.group({\n            login: [''],\n            email: ['', Validators.email],\n            password: [''],\n            confirmPassword: ['']\n        }, {validator: passwordValidator});\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit(form: object) {\n        console.log(form);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                            \n                            \n                                The login name must have at least 4 letters\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Not a valid email\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                {{hidePassword ? 'visibility_off' : 'visibility'}}\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Passwords do not match\n                            \n                            \n                                {{hideRepeatPassword ? 'visibility_off' : 'visibility'}}\n                            \n                        \n                    \n                    \n                        Register\n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./registration-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                            The login name must have at least 4 letters                                                                                                                                                                                                            Not a valid email                                                                                                                                                                                                            {{hidePassword ? \\'visibility_off\\' : \\'visibility\\'}}                                                                                                                                                                                                            Passwords do not match                                                                                        {{hideRepeatPassword ? \\'visibility_off\\' : \\'visibility\\'}}                                                                                                                    Register                                                                                    '\n    var COMPONENTS = [{'name': 'ForgottenPasswordCardComponent', 'selector': 'nae-forgotten-password-panel'},{'name': 'LoginCardComponent', 'selector': 'nae-login-panel'},{'name': 'PanelComponent', 'selector': 'nae-app-panel'},{'name': 'RegistrationCardComponent', 'selector': 'nae-registration-panel'},{'name': 'ToolbarComponent', 'selector': 'nae-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Role.html":{"url":"interfaces/Role.html","title":"interface - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/user/models/role.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        net\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        net\n                                    \n                                \n                                \n                                    \n                                        net:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface Role {\n    id: string;\n    name: string;\n    description?: string;\n    net?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SelectLanguageService.html":{"url":"injectables/SelectLanguageService.html","title":"injectable - SelectLanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SelectLanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/toolbar/select-language.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/toolbar/select-language.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLanguage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLanguage(language: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/toolbar/select-language.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            languages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        slovak: false,\n        english: true\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/toolbar/select-language.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SelectLanguageService {\n\n    public languages = {\n        slovak: false,\n        english: true\n    };\n\n    constructor() {\n    }\n\n    public changeLanguage(language: string) {\n        Object.keys(this.languages).forEach((key) => {\n            key === language ? this.languages[key] = true : this.languages[key] = false;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _session$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _sessionHeader\n                            \n                            \n                                    Private\n                                _storage\n                            \n                            \n                                    Static\n                                    Readonly\n                                SESSION_BEARER_HEADER_DEFAULT\n                            \n                            \n                                    Static\n                                    Readonly\n                                SESSION_TOKEN_STORAGE_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Protected\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    session$\n                                \n                                \n                                    sessionToken\n                                \n                                \n                                    sessionHeader\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_config: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _session$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _sessionHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SESSION_BEARER_HEADER_DEFAULT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'X-Auth-Token'\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SESSION_TOKEN_STORAGE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'naet'\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        session$\n                    \n                \n\n                \n                    \n                        getsession$()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sessionToken\n                    \n                \n\n                \n                    \n                        getsessionToken()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:37\n                                \n                            \n\n                \n                    \n                        setsessionToken(sessionToken: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            sessionToken\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        sessionHeader\n                    \n                \n\n                \n                    \n                        getsessionHeader()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {ConfigurationService} from '../../../configuration/configuration.service';\nimport {NullStorage} from '../NullStorage';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionService {\n\n    public static readonly SESSION_TOKEN_STORAGE_KEY = 'naet';\n    public static readonly SESSION_BEARER_HEADER_DEFAULT = 'X-Auth-Token';\n\n    private _session$: BehaviorSubject;\n    private _storage: Storage;\n    private readonly _sessionHeader: string;\n\n    constructor(private _config: ConfigurationService) {\n        const sessionConfig = this._config.get().providers.auth.session;\n        this._storage = sessionConfig && sessionConfig.store ? localStorage : new NullStorage();\n        this._sessionHeader = this._config.get().providers.auth.sessionBearer ?\n            this._config.get().providers.auth.sessionBearer : SessionService.SESSION_BEARER_HEADER_DEFAULT;\n        this._session$ = new BehaviorSubject(null);\n        this.load();\n    }\n\n    get session$(): Observable {\n        return this._session$;\n    }\n\n    set sessionToken(sessionToken: string) {\n        this._session$.next(sessionToken);\n        this._storage.setItem(SessionService.SESSION_TOKEN_STORAGE_KEY,\n            btoa(SessionService.SESSION_TOKEN_STORAGE_KEY + ':' + sessionToken));\n    }\n\n    get sessionToken(): string {\n        return this._session$.getValue();\n    }\n\n    get sessionHeader(): string {\n        return this._sessionHeader;\n    }\n\n    clear(): void {\n        this.sessionToken = null;\n        this._storage.removeItem(SessionService.SESSION_TOKEN_STORAGE_KEY);\n    }\n\n    protected load(): void {\n        const token = this._storage.getItem(SessionService.SESSION_TOKEN_STORAGE_KEY);\n        if (token) {\n            this.sessionToken = atob(token).split(':')[1];\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SignUpModule.html":{"url":"modules/SignUpModule.html","title":"module - SignUpModule","body":"\n                   \n\n\n\n\n    Modules\n    SignUpModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SignUpModule\n\n\n\ncluster_SignUpModule_providers\n\n\n\n\nSignUpService\n\nSignUpService\n\n\n\nSignUpModule\n\nSignUpModule\n\nSignUpModule -->\n\nSignUpService->SignUpModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/sign-up/sign-up.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SignUpService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SignUpService} from './services/sign-up.service';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        SignUpService\n    ]\n})\nexport class SignUpModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignUpService.html":{"url":"injectables/SignUpService.html","title":"injectable - SignUpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SignUpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/sign-up/services/sign-up.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/authentication/sign-up/services/sign-up.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class SignUpService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Action, createReducer, on} from '@ngrx/store';\nimport {loginFailure, loginSuccess, loginUser, logoutUser} from '../actions/user.actions';\nimport {User} from '../../models/user';\n\nexport const USER_FEATURE_KEY = 'nae-user';\n\nexport interface State {\n    user: User | null;\n    error: string | null;\n}\n\nexport const initialState: State = {\n    user: null,\n    error: null\n};\n\nconst userReducer = createReducer(\n    initialState,\n    on(loginUser, (state, {user}) => ({...state, user})),\n    on(loginSuccess, (state, {user}) => ({...state, user, error: null})),\n    on(loginFailure, (state, {error}) => ({...state, user: null, error})),\n    on(logoutUser, (state) => initialState),\n);\n\nexport function reducer(state: State | undefined, action: Action) {\n    return userReducer(state, action);\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nae-toolbar\n            \n\n            \n                styleUrls\n                ./toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selectLanguageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appName\n                            \n                            \n                                loggedUser\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(selectLanguageService: SelectLanguageService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectLanguageService\n                                                  \n                                                        \n                                                                        SelectLanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        appName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loggedUser\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectLanguageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectLanguageService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {SelectLanguageService} from './select-language.service';\n\n@Component({\n    selector: 'nae-toolbar',\n    templateUrl: './toolbar.component.html',\n    styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\n    @Input()\n    public loggedUser: string;\n\n    @Input()\n    public appName: string;\n\n    constructor(public selectLanguageService: SelectLanguageService) {\n    }\n\n    ngOnInit() {\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n        \n        \n            {{appName}}\n        \n        \n            \n                {{loggedUser}}\n                account_circle\n                \n                \n                    \n                        \n                            language\n                        \n                        Language\n                    \n                    \n                        \n                            account_circle\n                        \n                        Profile\n                    \n                    \n                        \n                            exit_to_app\n                        \n                        Logout\n                    \n                \n                \n                    English\n                        keyboard_arrow_left\n                        \n                    \n                    Slovak\n                        keyboard_arrow_left\n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./toolbar.component.scss\n                \n                .main-toolbar-logo {\n    max-height: 60%;\n}\n\n.main-toolbar-logo img {\n    width: 120px;\n}\n\nmat-icon.main-toolbar-icon {\n    font-size: 48px;\n    height: 100%;\n    margin-right: 15px;\n}\n\n.main-toolbar-logged-user {\n    margin-right: 15px;\n}\n\n.main-toolbar-menu, .main-toolbar-menu-button {\n    font-size: 20px;\n    height: 100%;\n}\n\n.main-toolbar-menu-icon {\n    font-size: 23px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                {{appName}}                                            {{loggedUser}}                account_circle                                                                                                        language                                                Language                                                                                            account_circle                                                Profile                                                                                            exit_to_app                                                Logout                                                                        English                        keyboard_arrow_left                                                                Slovak                        keyboard_arrow_left                                                                                    '\n    var COMPONENTS = [{'name': 'ForgottenPasswordCardComponent', 'selector': 'nae-forgotten-password-panel'},{'name': 'LoginCardComponent', 'selector': 'nae-login-panel'},{'name': 'PanelComponent', 'selector': 'nae-app-panel'},{'name': 'RegistrationCardComponent', 'selector': 'nae-registration-panel'},{'name': 'ToolbarComponent', 'selector': 'nae-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolbarModule.html":{"url":"modules/ToolbarModule.html","title":"module - ToolbarModule","body":"\n                   \n\n\n\n\n    Modules\n    ToolbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolbarModule\n\n\n\ncluster_ToolbarModule_declarations\n\n\n\ncluster_ToolbarModule_imports\n\n\n\ncluster_ToolbarModule_exports\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\n\n\nToolbarModule\n\nToolbarModule\n\nToolbarModule -->\n\nToolbarComponent->ToolbarModule\n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nToolbarModule->ToolbarComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nToolbarModule -->\n\nMaterialModule->ToolbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/toolbar/toolbar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ToolbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ToolbarComponent} from './toolbar.component';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MaterialModule} from '../material/material.module';\n\n\n@NgModule({\n    declarations: [ToolbarComponent],\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule\n    ],\n    exports: [\n        ToolbarComponent,\n        FlexLayoutModule\n    ]\n})\nexport class ToolbarModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transformer.html":{"url":"interfaces/Transformer.html","title":"interface - Transformer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Transformer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/models/transformer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    transform\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(obj: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/models/transformer.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     R\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Transformer {\n    transform(obj: T): R;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/user/models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authorities\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                    Optional\n                                groups\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                    Optional\n                                preferences\n                            \n                            \n                                    Public\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, email: string, firstName: string, lastName: string, authorities: Array, roles: Array, groups?: Array, preferences?: object)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorities\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roles\n                                                  \n                                                        \n                                                                        Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groups\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        preferences\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authorities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            preferences\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/user/models/user.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import Role from './role';\n\nexport class User {\n    constructor(\n        public id: string,\n        public email: string,\n        public firstName: string,\n        public lastName: string,\n        public authorities: Array,\n        public roles: Array,\n        public groups?: Array,\n        public preferences?: object) {\n    }\n\n    get fullName() {\n        return this.firstName + ' ' + this.lastName;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/user/store/effects/user.effects.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_actions$: Actions, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/user/store/effects/user.effects.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions} from '@ngrx/effects';\nimport {UserService} from '../../services/user.service';\n\n@Injectable()\nexport class UserEffects {\n\n    constructor(private _actions$: Actions, private _userService: UserService) {\n    }\n\n    // loginUser$ = createEffect(() => this._actions$\n    //     .pipe(\n    //         ofType(loginUser),\n    //         mergeMap(action => this._userService.login(credentials as Credentials)\n    //         .pipe(\n    //             map(user => loginUser({user})),\n    //             catchError(error => of(loginFailure({error})))\n    //         )\n    //     )\n    // ));\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProcessRole.html":{"url":"interfaces/UserProcessRole.html","title":"interface - UserProcessRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserProcessRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        netId\n                                \n                                \n                                        roleId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        netId\n                                    \n                                \n                                \n                                    \n                                        netId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Authority {\n    authority: string;\n}\n\nexport interface ProcessRole {\n    stringId: string;\n    name: string;\n    description?: string;\n}\n\nexport interface UserProcessRole {\n    roleId: string;\n    netId?: string;\n}\n\nexport interface User {\n    id: string;\n    email: string;\n    name: string;\n    surname: string;\n    fullName?: string;\n    groups?: Array;\n    authorities?: Array;\n    processRoles?: Array;\n    userProcessRoles?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/user/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasAuthority\n                            \n                            \n                                    Public\n                                hasRole\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasAuthority\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasAuthority(authority: Array | string)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:29\n                \n            \n\n\n            \n                \n                    Check if user has specified authority.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    authority\n                                    \n                                            Array | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nIf provided authority is array of authorities.\n Method make intersection of the provided authorities and user's authorities.\n If calculated intersection isn't empty returns true, otherwise false.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRole(role: Role)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                Role\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: Credentials)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Credentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in projects/netgrif-application-engine/src/lib/user/services/user.service.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport Role from '../models/role';\nimport {User} from '../models/user';\nimport {Credentials} from '../../authentication/models/credentials';\nimport {tap} from 'rxjs/operators';\nimport {AuthenticationService} from '../../authentication/services/authentication/authentication.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n\n    private _user: User;\n\n    constructor(private _authService: AuthenticationService) {\n    }\n\n    get user() {\n        return this._user;\n    }\n\n    /**\n     * Check if user has specified authority.\n     * @param authority - If provided authority is array of authorities.\n     *                    Method make intersection of the provided authorities and user's authorities.\n     *                    If calculated intersection isn't empty returns true, otherwise false.\n     */\n    public hasAuthority(authority: Array | string): boolean {\n        if (!authority || !this._user.authorities) {\n            return false;\n        }\n        if (authority instanceof Array) {\n            return authority.some(a => this._user.authorities.some(u => u === a));\n        } else {\n            return this._user.authorities.some(a => a === authority);\n        }\n    }\n\n    public hasRole(role: Role): boolean {\n        if (!role || !this._user.roles) {\n            return false;\n        }\n        return this._user.roles.some(r => r === role);\n    }\n\n    public login(credentials: Credentials): Observable {\n        return this._authService.login(credentials).pipe(\n            tap((authUser: User) => this._user = authUser)\n        );\n    }\n\n    public logout(): Observable {\n        return this._authService.logout().pipe(\n            tap(() => this._user = null)\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserTransformer.html":{"url":"classes/UserTransformer.html","title":"class - UserTransformer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserTransformer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Transformer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mergeRoles\n                            \n                            \n                                    Public\n                                transform\n                            \n                            \n                                    Private\n                                transformAuthorities\n                            \n                            \n                                    Private\n                                transformProcessRoles\n                            \n                            \n                                    Private\n                                transformUserProcessRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mergeRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeRoles(roles: Array>)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                                Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(user: AuthUser)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            transformAuthorities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transformAuthorities(authorities: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorities\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            transformProcessRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transformProcessRoles(roles: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            transformUserProcessRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transformUserProcessRoles(roles: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Authority, ProcessRole, User as AuthUser, UserProcessRole} from './user';\nimport {User} from '../../user/models/user';\nimport Role from '../../user/models/role';\nimport {Transformer} from './transformer';\n\nexport class UserTransformer implements Transformer {\n\n    private transformAuthorities(authorities: Array): Array {\n        return !authorities ? [] : authorities.map(a => a.authority);\n    }\n\n    private transformProcessRoles(roles: Array): Array {\n        return !roles ? [] : roles.map(r => ({\n            id: r.stringId,\n            name: r.name,\n            description: r.description\n        }));\n    }\n\n    private transformUserProcessRoles(roles: Array): Array {\n        return !roles ? [] : roles.map(r => ({\n            id: r.roleId,\n            net: r.netId,\n            name: null\n        }));\n    }\n\n    private mergeRoles(roles: Array>): Array {\n        const result = roles[0];\n\n        roles.splice(0, 1);\n        roles.forEach(roleArray => {\n            roleArray.forEach(mergableRole => {\n                const roleIndex = result.findIndex(r => r.id === mergableRole.id);\n                if (roleIndex === -1) {\n                    return;\n                }\n                result[roleIndex].net = mergableRole.net ? mergableRole.net : result[roleIndex].net;\n                result[roleIndex].description = mergableRole.description ? mergableRole.description : result[roleIndex].description;\n                result[roleIndex].name = mergableRole.name ? mergableRole.name : result[roleIndex].name;\n            });\n        });\n\n        return result;\n    }\n\n    public transform(user: AuthUser): User {\n        const groups: Array = []; // TODO groups parsing\n\n        return new User(\n            user.id,\n            user.email,\n            user.name,\n            user.surname,\n            this.transformAuthorities(user.authorities),\n            this.mergeRoles([\n                this.transformProcessRoles(user.processRoles),\n                this.transformUserProcessRoles(user.userProcessRoles)]),\n            groups);\n\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/netgrif-application-engine/schematics/create-configuration-service/index.ts\n            \n            function\n            createConfigurationService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/initialize-configuration-service/index.ts\n            \n            function\n            initializeConfigurationService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/modifiedLibraryFunctions.ts\n            \n            function\n            addProviderToModule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/modifiedLibraryFunctions.ts\n            \n            function\n            addSymbolToNgModuleMetadata\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            interface\n            ProjectInfo\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            function\n            createChangesRecorder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            function\n            fileEntryToTsSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            function\n            getNaeConfiguration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            function\n            getNaeConfigurationString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            function\n            getProjectInfo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/schematics/utilityFunctions.ts\n            \n            function\n            getTsSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/authentication.factory.ts\n            \n            function\n            authenticationServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/credentials.ts\n            \n            interface\n            Credentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/transformer.ts\n            \n            interface\n            Transformer\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts\n            \n            class\n            UserTransformer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n            \n            interface\n            Authority\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n            \n            interface\n            ProcessRole\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/models/user.ts\n            \n            interface\n            UserProcessRole\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/services/authentication-interceptor.ts\n            \n            interceptor\n            AuthenticationInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/services/authentication-method.service.ts\n            \n            class\n            AuthenticationMethodService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/services/guard/authentication-guard.service.ts\n            \n            guard\n            AuthenticationGuardService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/services/methods/basic-authentication/basic-authentication.service.ts\n            \n            injectable\n            BasicAuthenticationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/services/methods/null-authentication/null-authentication.service.ts\n            \n            injectable\n            NullAuthenticationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts\n            \n            class\n            NullStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts\n            \n            injectable\n            SessionService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/sign-up/services/sign-up.service.ts\n            \n            injectable\n            SignUpService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/actions/authentication.actions.ts\n            \n            variable\n            login\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/actions/authentication.actions.ts\n            \n            variable\n            loginFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/actions/authentication.actions.ts\n            \n            variable\n            loginSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/actions/authentication.actions.ts\n            \n            variable\n            logout\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n            \n            interface\n            AuthState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n            \n            function\n            getInitial\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n            \n            variable\n            AUTHENTICATION_FEATURE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/effects/authentication.effects.ts\n            \n            injectable\n            AuthenticationEffects\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/reducers/authentication.redurcers.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/reducers/authentication.redurcers.ts\n            \n            variable\n            authReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectAuthentication\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectIsAuthenticated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/authentication/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectLoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/card/abstract-card.ts\n            \n            class\n            AbstractCard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/card/forgotten-password-card/forgotten-password-panel.component.ts\n            \n            component\n            ForgottenPasswordCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts\n            \n            component\n            LoginCardComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/card/registration-card/password.validator.ts\n            \n            function\n            passwordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts\n            \n            component\n            RegistrationCardComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts\n            \n            class\n            ConfigurationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts\n            \n            class\n            LogEntry\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts\n            \n            interface\n            LogEntryConfiguration\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts\n            \n            class\n            ConsoleLogPublisher\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts\n            \n            class\n            LocalStorageLogPublisher\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts\n            \n            class\n            LogPublisher\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts\n            \n            injectable\n            LogPublisherService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts\n            \n            variable\n            PUBLISHERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n            \n            class\n            AbstractLoggerService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n            \n            interface\n            LoggerConfiguration\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/panel/panel.component.ts\n            \n            component\n            PanelComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/toolbar/select-language.service.ts\n            \n            injectable\n            SelectLanguageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/models/role.ts\n            \n            interface\n            Role\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/actions/user.actions.ts\n            \n            variable\n            loginFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/actions/user.actions.ts\n            \n            variable\n            loginSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/actions/user.actions.ts\n            \n            variable\n            loginUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/actions/user.actions.ts\n            \n            variable\n            logoutUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/effects/user.effects.ts\n            \n            injectable\n            UserEffects\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n            \n            variable\n            USER_FEATURE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n            \n            variable\n            userReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/selectors/user.selectors.ts\n            \n            variable\n            selectLoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/lib/user/store/selectors/user.selectors.ts\n            \n            variable\n            selectUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/netgrif-application-engine/src/scripts/Utils.ts\n            \n            function\n            randomString\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.0.5\n        \n            @angular/cdk : ~8.2.3\n        \n            @angular/common : ^9.0.5\n        \n            @angular/compiler : ^9.0.5\n        \n            @angular/core : ^9.0.5\n        \n            @angular/forms : ^9.0.5\n        \n            @angular/flex-layout : ^9.0.0-beta.29\n        \n            @angular/material : ~8.2.3\n        \n            @angular/platform-browser : ^9.0.5\n        \n            @angular/platform-browser-dynamic : ^9.0.5\n        \n            @angular/router : ^9.0.5\n        \n            @covalent/core : ^2.1.1\n        \n            @covalent/highlight : ^2.1.1\n        \n            @covalent/markdown : ^2.1.1\n        \n            @schematics/angular : ^9.0.5\n        \n            hammerjs : ^2.0.8\n        \n            json-schema-to-typescript : ^8.1.0\n        \n            rxjs : ^6.5.4\n        \n            tslib : ^1.11.1\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationActionTypes   (projects/.../authentication.actions.ts)\n                        \n                        \n                            LogLevel   (projects/.../log-level.ts)\n                        \n                        \n                            UserActionTypes   (projects/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/netgrif-application-engine/src/lib/authentication/store/actions/authentication.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationActionTypes\n                    \n                \n                        \n                            \n                                 LOGIN\n                            \n                        \n                        \n                            \n                                Value : [AUTH] Login\n                            \n                        \n                        \n                            \n                                 LOGIN_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [AUTH] Login success\n                            \n                        \n                        \n                            \n                                 LOGIN_FAILURE\n                            \n                        \n                        \n                            \n                                Value : [AUTH] Login failure\n                            \n                        \n                        \n                            \n                                 LOGOUT\n                            \n                        \n                        \n                            \n                                Value : [AUTH] Logout\n                            \n                        \n            \n        \n\n    projects/netgrif-application-engine/src/lib/logger/services/log-level.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/netgrif-application-engine/src/lib/user/store/actions/user.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UserActionTypes\n                    \n                \n                        \n                            \n                                 SET_USER\n                            \n                        \n                        \n                            \n                                Value : [USER] Login user\n                            \n                        \n                        \n                            \n                                 SET_USER_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [USER] Login user success\n                            \n                        \n                        \n                            \n                                 SET_USER_FAILURE\n                            \n                        \n                        \n                            \n                                Value : [USER] Login user failure\n                            \n                        \n                        \n                            \n                                 REMOVE_USER\n                            \n                        \n                        \n                            \n                                Value : [USER] Logout user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addProviderToModule   (projects/.../modifiedLibraryFunctions.ts)\n                        \n                        \n                            addSymbolToNgModuleMetadata   (projects/.../modifiedLibraryFunctions.ts)\n                        \n                        \n                            authenticationServiceFactory   (projects/.../authentication.factory.ts)\n                        \n                        \n                            createChangesRecorder   (projects/.../utilityFunctions.ts)\n                        \n                        \n                            createConfigurationService   (projects/.../index.ts)\n                        \n                        \n                            fileEntryToTsSource   (projects/.../utilityFunctions.ts)\n                        \n                        \n                            getInitial   (projects/.../authentication.state.ts)\n                        \n                        \n                            getNaeConfiguration   (projects/.../utilityFunctions.ts)\n                        \n                        \n                            getNaeConfigurationString   (projects/.../utilityFunctions.ts)\n                        \n                        \n                            getProjectInfo   (projects/.../utilityFunctions.ts)\n                        \n                        \n                            getTsSource   (projects/.../utilityFunctions.ts)\n                        \n                        \n                            initializeConfigurationService   (projects/.../index.ts)\n                        \n                        \n                            passwordValidator   (projects/.../password.validator.ts)\n                        \n                        \n                            randomString   (projects/.../Utils.ts)\n                        \n                        \n                            reducer   (projects/.../authentication.redurcers.ts)\n                        \n                        \n                            reducer   (projects/.../user.reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/netgrif-application-engine/schematics/modifiedLibraryFunctions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addProviderToModule\n                        \n                        \n                    \n                \n            \n            \n                \naddProviderToModule(source, modulePath, classifiedName, importPath, providerText?)\n                \n            \n\n\n\n\n            \n                \n                    copied from original at @schematics/angular/utility/ast-utils\nour version allows for more freedom by adding the insertedText parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modulePath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    classifiedName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    importPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    providerText\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Change[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSymbolToNgModuleMetadata\n                        \n                        \n                    \n                \n            \n            \n                \naddSymbolToNgModuleMetadata(source, ngModulePath, metadataField, symbolName, insertedText?, importPath)\n                \n            \n\n\n\n\n            \n                \n                    copied from original at @schematics/angular/utility/ast-utils\nour version allows for more freedom by adding the insertedText parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmodified file\n\n\n                                    \n                                \n                                \n                                    ngModulePath\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \npath to module file\n\n\n                                    \n                                \n                                \n                                    metadataField\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nname of the array, where the symbol is added\n\n\n                                    \n                                \n                                \n                                    symbolName\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nname of the symbol eg. class name\n\n\n                                    \n                                \n                                \n                                    insertedText\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nthe exact text that should be included in the array. If none is provided symbolName is used instead\n\n\n                                    \n                                \n                                \n                                    importPath\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \npath for the import\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Change[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/src/lib/authentication/authentication.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            authenticationServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticationServiceFactory(config, http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/schematics/utilityFunctions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createChangesRecorder\n                        \n                        \n                    \n                \n            \n            \n                \ncreateChangesRecorder(tree, file, changes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     UpdateRecorder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fileEntryToTsSource\n                        \n                        \n                    \n                \n            \n            \n                \nfileEntryToTsSource(file, encoding)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encoding\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ts.SourceFile\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNaeConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \ngetNaeConfiguration(tree)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NetgrifApplicationEngine\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNaeConfigurationString\n                        \n                        \n                    \n                \n            \n            \n                \ngetNaeConfigurationString(tree)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProjectInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetProjectInfo(tree)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProjectInfo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTsSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetTsSource(path, content)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ts.SourceFile\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/schematics/create-configuration-service/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createConfigurationService\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConfigurationService()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getInitial\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitial()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         AuthState\n\n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/schematics/initialize-configuration-service/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            initializeConfigurationService\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeConfigurationService()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/src/lib/card/registration-card/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            passwordValidator\n                        \n                        \n                    \n                \n            \n            \n                \npasswordValidator(control)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/src/scripts/Utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            randomString\n                        \n                        \n                    \n                \n            \n            \n                \nrandomString(length)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/src/lib/authentication/store/reducers/authentication.redurcers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNetgrif Application Engine\nThis project was generated with Angular CLI version 9.0.0-rc.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CovalentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PanelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SignUpModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_CardModule\n\n\n\ncluster_CardModule_declarations\n\n\n\ncluster_CardModule_imports\n\n\n\ncluster_CardModule_exports\n\n\n\ncluster_PanelModule\n\n\n\ncluster_PanelModule_declarations\n\n\n\ncluster_PanelModule_exports\n\n\n\ncluster_SignUpModule\n\n\n\ncluster_SignUpModule_providers\n\n\n\ncluster_ToolbarModule\n\n\n\ncluster_ToolbarModule_declarations\n\n\n\ncluster_ToolbarModule_exports\n\n\n\n\nAuthenticationInterceptor\n\nAuthenticationInterceptor\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationInterceptor->AuthenticationModule\n\n\n\n\n\nForgottenPasswordCardComponent\n\nForgottenPasswordCardComponent\n\n\n\nCardModule\n\nCardModule\n\nCardModule -->\n\nForgottenPasswordCardComponent->CardModule\n\n\n\n\n\nLoginCardComponent\n\nLoginCardComponent\n\nCardModule -->\n\nLoginCardComponent->CardModule\n\n\n\n\n\nRegistrationCardComponent\n\nRegistrationCardComponent\n\nCardModule -->\n\nRegistrationCardComponent->CardModule\n\n\n\n\n\nForgottenPasswordCardComponent \n\nForgottenPasswordCardComponent \n\nForgottenPasswordCardComponent  -->\n\nCardModule->ForgottenPasswordCardComponent \n\n\n\n\n\nLoginCardComponent \n\nLoginCardComponent \n\nLoginCardComponent  -->\n\nCardModule->LoginCardComponent \n\n\n\n\n\nRegistrationCardComponent \n\nRegistrationCardComponent \n\nRegistrationCardComponent  -->\n\nCardModule->RegistrationCardComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCardModule -->\n\nMaterialModule->CardModule\n\n\n\n\n\nPanelModule\n\nPanelModule\n\nPanelModule -->\n\nMaterialModule->PanelModule\n\n\n\n\n\nToolbarModule\n\nToolbarModule\n\nToolbarModule -->\n\nMaterialModule->ToolbarModule\n\n\n\n\n\nPanelComponent\n\nPanelComponent\n\nPanelModule -->\n\nPanelComponent->PanelModule\n\n\n\n\n\nPanelComponent \n\nPanelComponent \n\nPanelComponent  -->\n\nPanelModule->PanelComponent \n\n\n\n\n\nSignUpService\n\nSignUpService\n\n\n\nSignUpModule\n\nSignUpModule\n\nSignUpModule -->\n\nSignUpService->SignUpModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nToolbarModule -->\n\nToolbarComponent->ToolbarModule\n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nToolbarModule->ToolbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"unit-test.html":{"url":"unit-test.html","title":"unit-test - unit-test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n  Unit test coverage\n\n\n\n    \n    \n    \n    \n\n\n\n    \n        \n            File\n            Statements\n            Branches\n            Functions\n            Lines\n        \n    \n    \n        \n            \n                \n                    projects/netgrif-application-engine/src/lib/authentication/authentication.factory.ts\n            \n            \n                0 %\n                (0/7)\n            \n            \n                0 %\n                (0/6)\n            \n            \n                0 %\n                (0/1)\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/models/user.transformer.ts\n            \n            \n                26 %\n                (7/27)\n            \n            \n                0 %\n                (0/14)\n            \n            \n                8 %\n                (1/12)\n            \n            \n                30 %\n                (7/23)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/services/authentication-interceptor.ts\n            \n            \n                22 %\n                (4/18)\n            \n            \n                0 %\n                (0/10)\n            \n            \n                20 %\n                (1/5)\n            \n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/services/authentication-method.service.ts\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                50 %\n                (1/2)\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/services/authentication/authentication.service.ts\n            \n            \n                36 %\n                (9/25)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                9 %\n                (1/11)\n            \n            \n                35 %\n                (7/20)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/services/guard/authentication-guard.service.ts\n            \n            \n                24 %\n                (7/29)\n            \n            \n                0 %\n                (0/10)\n            \n            \n                20 %\n                (1/5)\n            \n            \n                21 %\n                (5/24)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/services/methods/basic-authentication/basic-authentication.service.ts\n            \n            \n                25 %\n                (6/24)\n            \n            \n                0 %\n                (0/16)\n            \n            \n                25 %\n                (1/4)\n            \n            \n                20 %\n                (4/20)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/services/methods/null-authentication/null-authentication.service.ts\n            \n            \n                67 %\n                (6/9)\n            \n            \n                0 %\n                (0/2)\n            \n            \n                25 %\n                (1/4)\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/session/NullStorage.ts\n            \n            \n                78 %\n                (7/9)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                17 %\n                (1/6)\n            \n            \n                78 %\n                (7/9)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/session/services/session.service.ts\n            \n            \n                41 %\n                (11/27)\n            \n            \n                0 %\n                (0/8)\n            \n            \n                13 %\n                (1/8)\n            \n            \n                36 %\n                (9/25)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/authentication/sign-up/services/sign-up.service.ts\n            \n            \n                100 %\n                (3/3)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                50 %\n                (1/2)\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/card/abstract-card.ts\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (1/1)\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/card/forgotten-password-card/forgotten-password-panel.component.ts\n            \n            \n                60 %\n                (6/10)\n            \n            \n                0 %\n                (0/2)\n            \n            \n                25 %\n                (1/4)\n            \n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/card/login-card/login-card.component.ts\n            \n            \n                55 %\n                (6/11)\n            \n            \n                0 %\n                (0/2)\n            \n            \n                25 %\n                (1/4)\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                    projects/netgrif-application-engine/src/lib/card/registration-card/password.validator.ts\n            \n            \n                0 %\n                (0/8)\n            \n            \n                0 %\n                (0/9)\n            \n            \n                0 %\n                (0/1)\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/card/registration-card/registration-card.component.ts\n            \n            \n                50 %\n                (6/12)\n            \n            \n                0 %\n                (0/2)\n            \n            \n                25 %\n                (1/4)\n            \n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/configuration/configuration.service.ts\n            \n            \n                56 %\n                (5/9)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                20 %\n                (1/5)\n            \n            \n                56 %\n                (5/9)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/models/log-entry.ts\n            \n            \n                93 %\n                (25/27)\n            \n            \n                71 %\n                (10/14)\n            \n            \n                100 %\n                (5/5)\n            \n            \n                93 %\n                (25/27)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/publishers/console-log-publisher.ts\n            \n            \n                95 %\n                (18/19)\n            \n            \n                89 %\n                (8/9)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/publishers/local-storage-log-publisher.ts\n            \n            \n                71 %\n                (17/24)\n            \n            \n                75 %\n                (6/8)\n            \n            \n                100 %\n                (4/4)\n            \n            \n                70 %\n                (16/23)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/publishers/log-publisher.ts\n            \n            \n                100 %\n                (6/6)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (3/3)\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts\n            \n            \n                91 %\n                (21/23)\n            \n            \n                50 %\n                (2/4)\n            \n            \n                100 %\n                (8/8)\n            \n            \n                90 %\n                (18/20)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/logger/services/logger.service.ts\n            \n            \n                97 %\n                (33/34)\n            \n            \n                71 %\n                (5/7)\n            \n            \n                100 %\n                (12/12)\n            \n            \n                96 %\n                (26/27)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/panel/panel.component.ts\n            \n            \n                71 %\n                (10/14)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                20 %\n                (1/5)\n            \n            \n                82 %\n                (9/11)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/toolbar/select-language.service.ts\n            \n            \n                63 %\n                (5/8)\n            \n            \n                0 %\n                (0/2)\n            \n            \n                50 %\n                (2/4)\n            \n            \n                67 %\n                (4/6)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/toolbar/toolbar.component.ts\n            \n            \n                86 %\n                (6/7)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                33 %\n                (1/3)\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/user/models/user.ts\n            \n            \n                25 %\n                (3/12)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                33 %\n                (1/3)\n            \n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                        projects/netgrif-application-engine/src/lib/user/services/user.service.ts\n            \n            \n                28 %\n                (8/29)\n            \n            \n                0 %\n                (0/10)\n            \n            \n                8 %\n                (1/13)\n            \n            \n                33 %\n                (7/21)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTHENTICATION_FEATURE_KEY   (projects/.../authentication.state.ts)\n                        \n                        \n                            authReducer   (projects/.../authentication.redurcers.ts)\n                        \n                        \n                            initialState   (projects/.../user.reducers.ts)\n                        \n                        \n                            initialState   (projects/.../authentication.state.ts)\n                        \n                        \n                            login   (projects/.../authentication.actions.ts)\n                        \n                        \n                            loginFailure   (projects/.../authentication.actions.ts)\n                        \n                        \n                            loginFailure   (projects/.../user.actions.ts)\n                        \n                        \n                            loginSuccess   (projects/.../authentication.actions.ts)\n                        \n                        \n                            loginSuccess   (projects/.../user.actions.ts)\n                        \n                        \n                            loginUser   (projects/.../user.actions.ts)\n                        \n                        \n                            logout   (projects/.../authentication.actions.ts)\n                        \n                        \n                            logoutUser   (projects/.../user.actions.ts)\n                        \n                        \n                            PUBLISHERS   (projects/.../log-publisher.service.ts)\n                        \n                        \n                            selectAuthentication   (projects/.../authentication.selectors.ts)\n                        \n                        \n                            selectIsAuthenticated   (projects/.../authentication.selectors.ts)\n                        \n                        \n                            selectLoggedUser   (projects/.../authentication.selectors.ts)\n                        \n                        \n                            selectLoggedUser   (projects/.../user.selectors.ts)\n                        \n                        \n                            selectUser   (projects/.../user.selectors.ts)\n                        \n                        \n                            USER_FEATURE_KEY   (projects/.../user.reducers.ts)\n                        \n                        \n                            userReducer   (projects/.../user.reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/netgrif-application-engine/src/lib/authentication/store/authentication.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHENTICATION_FEATURE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nae-auth'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isAuthenticated: false,\n    session: null,\n    error: null\n}\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/authentication/store/reducers/authentication.redurcers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n    initialState,\n    // on(login, (state) => ({...state, isAuthenticated: true})),\n    on(loginSuccess, (state, {user}) => ({...state, isAuthenticated: true, user, error: null})),\n    on(loginFailure, (state, {error}) => ({...state, isAuthenticated: true, user: null, error})),\n    on(logout, (state) => initialState),\n)\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/user/store/reducers/user.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    user: null,\n    error: null\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_FEATURE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nae-user'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n    initialState,\n    on(loginUser, (state, {user}) => ({...state, user})),\n    on(loginSuccess, (state, {user}) => ({...state, user, error: null})),\n    on(loginFailure, (state, {error}) => ({...state, user: null, error})),\n    on(logoutUser, (state) => initialState),\n)\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/authentication/store/actions/authentication.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    AuthenticationActionTypes.LOGIN,\n    props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    AuthenticationActionTypes.LOGIN_FAILURE,\n    props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    AuthenticationActionTypes.LOGIN_SUCCESS,\n    props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    AuthenticationActionTypes.LOGOUT,\n)\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/user/store/actions/user.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loginFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    UserActionTypes.SET_USER_FAILURE,\n    props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    UserActionTypes.SET_USER_SUCCESS,\n    props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    UserActionTypes.SET_USER,\n    props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logoutUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n    UserActionTypes.REMOVE_USER,\n)\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/logger/services/log-publisher.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PUBLISHERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ConsoleLogPublisher,\n    LocalStorageLogPublisher\n}\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/authentication/store/selectors/authentication.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : state => state[AUTHENTICATION_FEATURE_KEY]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIsAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n    selectAuthentication,\n    (state: AuthState) => state.isAuthenticated\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLoggedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n    selectAuthentication,\n    (state: AuthState) => state.user\n)\n                        \n                    \n\n\n            \n        \n\n    projects/netgrif-application-engine/src/lib/user/store/selectors/user.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectLoggedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n    selectUser,\n    (state: UserState) => state.user\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : state => state[USER_FEATURE_KEY]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
